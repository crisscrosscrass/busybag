{"version":3,"sources":["images/unnamed.png","components/Logo.js","firebase.js","service/AuthContext.js","pages/Signup.js","service/DatabaseContext.js","service/ProjectContext.js","service/ThemeContext.js","service/AppTransitionContext.js","components/BottomNav.js","components/TopNav.js","pages/Dashboard.js","pages/CreateProject.js","pages/CreateTask.js","pages/ProjectOverview.js","pages/Taskboard.js","pages/UpdateProfile.js","pages/Login.js","components/PrivateRoute.js","pages/ForgotPassword.js","components/App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Logo","src","logo","alt","app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","GoogleAuthProvider","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","logout","signOut","signup","createUserWithEmailAndPassword","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","e","a","preventDefault","current","push","className","onSubmit","type","placeholder","ref","disabled","to","DatabaseContext","useDB","DatabaseProvider","projects","setProjects","projectRef","collection","projectArray","where","get","allOwnedProjects","allOSharedProjects","empty","console","log","forEach","doc","id","data","shareProjectWithUser","docId","update","shared","addProject","project","description","color","add","name","owner","then","docRef","catch","deleteProject","projectid","onSnapshot","snapshot","docs","delete","addTaskToProject","taskName","taskDescription","ProjectContext","useProject","ProjectProvider","setProjectId","projectName","setProjectName","tasks","setTasks","loadingTaskFromProject","snapshop","map","deleteTaskFromProject","taskId","ThemeContext","ThemeProvider","themePrimary","setThemePrimary","toggleTheme","AppTransitionContext","AppTransitionProvider","preset","setPreset","enterAnimation","setEnterAnimation","exitAnimation","setExitAnimation","BottomNav","length","window","alert","size","onClick","TopNav","title","Dashboard","item","i","style","backgroundColor","handleToProjectOverview","projectname","confirm","CreateProject","projectNameRef","projectDescriptionRef","projectColorRef","setColor","onChange","target","CreateTask","taskNameRef","taskDescriptionRef","goBack","ProjectOverview","prompt","Taskboard","UpdateProfile","promises","Promise","all","finally","defaultValue","Login","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","App","location","transitionKey","pathname","exact","path","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.b525a6a2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/unnamed.ea125fe9.png\";","import React from 'react'\r\nimport logo from '../images/unnamed.png';\r\n\r\nexport default function Logo() {\r\n    return (\r\n        <div>\r\n            <img src={logo} alt=\"Logo\" />\r\n        </div>\r\n    )\r\n}\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\n\r\nconst app = firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n    // apiKey: \"AIzaSyAPyppmyjBKQjIS4o1nRk6N-UxkW54rFPA\",\r\n    // authDomain: \"busybag-f27f9.firebaseapp.com\",\r\n    // projectId: \"busybag-f27f9\",\r\n    // storageBucket: \"busybag-f27f9.appspot.com\",\r\n    // messagingSenderId: \"622475419405\",\r\n    // appId: \"1:622475419405:web:d8022f00e74e3ede131a44\"\r\n})\r\n\r\nexport const auth = app.auth()\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\nexport const firestore = app.firestore()\r\nexport default app","import React, { useContext, useState , useEffect } from 'react'\r\nimport {auth,provider} from '../firebase'\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth(){\r\n    return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider( {children} ) {\r\n    const [currentUser, setCurrentUser] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    function signup(email, password){\r\n        return auth.createUserWithEmailAndPassword(email,password)\r\n    }\r\n\r\n    function login(email,password){\r\n        return auth.signInWithEmailAndPassword(email,password)\r\n    }\r\n\r\n    function loginWithGoogle(){\r\n        return auth.signInWithPopup(provider)\r\n    }\r\n\r\n    function logout(){\r\n        return auth.signOut()\r\n    }\r\n\r\n    function resetPassword(email){\r\n        return auth.sendPasswordResetEmail(email)\r\n    }\r\n\r\n    function updateEmail(email){\r\n        return currentUser.updateEmail(email)\r\n    }\r\n\r\n    function updatePassword(password){\r\n        return currentUser.updatePassword(password)\r\n    }\r\n\r\n    useEffect(() => {\r\n        // auth.onAuthStateChanged(function(user) {\r\n        //     if (user) {\r\n        //       // User is signed in.\r\n        //       console.log(user)\r\n        //       console.log(user.displayName)\r\n        //       console.log(user.email)\r\n        //       console.log(user.photoURL)\r\n        //       console.log(user.emailVerified)\r\n        //       console.log(user.uid)\r\n        //     } else {\r\n        //       // No user is signed in.\r\n        //     }\r\n        //   });\r\n\r\n          \r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user)\r\n            setLoading(false)\r\n        })\r\n\r\n        return unsubscribe\r\n    },[]) \r\n\r\n    const value = {\r\n        currentUser,\r\n        login,\r\n        logout,\r\n        signup,\r\n        resetPassword,\r\n        updateEmail,\r\n        updatePassword\r\n    }\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Logo from '../components/Logo';\r\nimport { useAuth } from '../service/AuthContext'\r\n\r\nexport default function Signup() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const {signup } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault()\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        }\r\n        try{\r\n            setError('')\r\n            setLoading(true)\r\n            await signup(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/\")\r\n        }catch{\r\n            setError('Failed to create an Acccount')\r\n        }\r\n        setLoading(true)\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <h2>Busybag</h2>\r\n                <Logo/>\r\n                <p>Keep track and do all</p>\r\n                <div className=\"card\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input type=\"email\" placeholder=\"Email\" ref={emailRef}/>\r\n                        <input type=\"password\" placeholder=\"Password\"ref={passwordRef}/>\r\n                        <input type=\"password\" placeholder=\"Password Confirm\" ref={passwordConfirmRef}/>\r\n                        {error && <h1>{error}</h1>}\r\n                        <button type=\"submit\" className=\"signin___button\" disabled={loading}> Sign up </button>\r\n                    </form>\r\n                </div>\r\n                <div>\r\n                    Already have an account? <Link to=\"/login\">Login</Link>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport {firestore} from '../firebase'\r\nimport {auth} from '../firebase'\r\n\r\nconst DatabaseContext = React.createContext()\r\n\r\nexport function useDB(){\r\n    return useContext(DatabaseContext)\r\n}\r\n\r\nexport function DatabaseProvider( {children} ) {\r\n    const [projects,setProjects] = useState([]);\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    //init values\r\n    useEffect(()=>{\r\n\r\n        auth.onAuthStateChanged(async function(user) {\r\n            if (user) {\r\n            const projectRef = firestore.collection('projects');\r\n            let projectArray = [];\r\n            const allOwnedProjects = await projectRef.where(\"owner\", \"==\", user.email).get();\r\n            const allOSharedProjects = await projectRef.where(\"shared\", \"array-contains\",user.email).get();\r\n            if (allOwnedProjects.empty) {\r\n                console.log('No matching documents.');\r\n              }else{\r\n                allOwnedProjects.forEach(doc => {\r\n                    console.log(doc.id, '=>', doc.data());\r\n                    projectArray.push({id:doc.id,data: doc.data()})\r\n                  }); \r\n              } \r\n            if (allOSharedProjects.empty) {\r\n                console.log('No matching documents.');\r\n              }else{\r\n                allOSharedProjects.forEach(doc => {\r\n                    console.log(doc.id, '=>', doc.data());\r\n                    projectArray.push({id:doc.id,data: doc.data()})\r\n                  }); \r\n              } \r\n            setProjects(projectArray)\r\n              \r\n              \r\n              \r\n            //   firestore.collection(\"projects\").where(\"owner\", \"==\", user.email)\r\n            //     //   .where(\"shared\", \"array-contains\",user.email)\r\n            //     .onSnapshot(snapshop => setProjects(\r\n            //         snapshop.docs.map(\r\n            //             doc=>(\r\n            //                 {id:doc.id,data:doc.data()}\r\n            //                 )\r\n            //             )\r\n            //         )\r\n            //     )\r\n            //     firestore.collection(\"projects\").where(\"owner\", \"==\", user.email)\r\n            //     .onSnapshot(snapshop => snapshop.docs.map(doc => {\r\n            //         return projectArray.push({id:doc.id,data: doc.data()})\r\n            //     }))\r\n            //     firestore.collection(\"projects\").where(\"shared\", \"array-contains\",user.email)\r\n            //     .onSnapshot(snapshop => snapshop.docs.map(doc => {\r\n            //         projectArray.push({id:doc.id,data: doc.data()})\r\n            //         return setProjects(projectArray)\r\n            //     }))\r\n                // console.log(projectArray)\r\n                setLoading(false)\r\n            }else{\r\n                setLoading(false)\r\n            }\r\n          });\r\n\r\n\r\n        let isMounted = true;\r\n        // firestore.collection(\"projects\").where(\"user\", \"==\", \"fovem84447@nonicamy.com\").onSnapshot(snapshop => setProjects(\r\n        //     snapshop.docs.map(\r\n        //         doc=>({id:doc.id,data:doc.data()})\r\n        //         )\r\n        //     )\r\n        // )\r\n        // setLoading(false)\r\n        return () => { isMounted = false };\r\n    },[])\r\n\r\n    //methods\r\n    // function loadingProjects(user){\r\n    //     firestore.collection(\"projects\").where(\"user\", \"==\", \"fovem84447@nonicamy.com\").onSnapshot(snapshop => setProjects(\r\n    //         snapshop.docs.map(\r\n    //             doc=>({id:doc.id,data:doc.data()})\r\n    //             )\r\n    //         )\r\n    //     )\r\n    //     setLoading(false)\r\n    // }\r\n\r\n    function shareProjectWithUser(email,docId){\r\n        firestore.collection('projects').doc(docId).update({\r\n            shared: [email]\r\n        });\r\n    }\r\n\r\n    function addProject(project,description, color, user){\r\n        firestore.collection(\"projects\").add({\r\n            name:project,\r\n            description:description,\r\n            color:color,\r\n            owner: user,\r\n            shared:[]\r\n        }).then(docRef => {\r\n            return docRef.id            \r\n        })\r\n        .catch(error => console.error(\"Error adding document: \", error))\r\n    }\r\n\r\n    function addTaskToProject(projectId,taskName,taskDescription,user){\r\n        firestore.collection(projectId).add({\r\n            name:taskName,\r\n            description:taskDescription,\r\n            user:user,\r\n        })\r\n    }\r\n\r\n    function deleteProject(projectid){\r\n        const ref = firestore.collection(projectid)\r\n        ref.onSnapshot((snapshot) => {\r\n            snapshot.docs.forEach((doc) => {\r\n            ref.doc(doc.id).delete()\r\n            })\r\n        })\r\n        firestore.collection(projectid).doc(projectid).delete()\r\n        firestore.collection(\"projects\").doc(projectid).delete();\r\n    }\r\n\r\n    // https://github.com/oghur/React-todo-App-with-connection-to-Firebase/blob/main/src/App.js\r\n    // function deletedata(value){\r\n    //     database.collection(\"messages\").doc(value).delete();\r\n    // }\r\n     \r\n    // function Editdata(id,value){\r\n    //     database.collection(\"messages\").doc(id).set({\r\n    //       message: value,\r\n    //     },{merge:true})\r\n    // }\r\n\r\n    const value = {\r\n        projects,\r\n        shareProjectWithUser,\r\n        addProject,\r\n        deleteProject,\r\n        addTaskToProject\r\n    }\r\n    return (\r\n        <DatabaseContext.Provider value={value}>\r\n            {!loading && children}\r\n        </DatabaseContext.Provider>\r\n    )\r\n}\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport {firestore} from '../firebase'\r\n\r\nexport const ProjectContext = React.createContext()\r\n\r\nexport function useProject(){\r\n    return useContext(ProjectContext)\r\n}\r\n\r\nexport function ProjectProvider( {children} ) {\r\n    const [projectId, setProjectId] = useState('')\r\n    const [projectName, setProjectName] = useState('')\r\n    const [tasks, setTasks] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setProjectId('')\r\n        setProjectName('')\r\n        setTasks([])\r\n        setLoading(false)\r\n    },[])\r\n\r\n    function loadingTaskFromProject(projectId){\r\n        firestore.collection(projectId).onSnapshot(snapshop => setTasks(\r\n            snapshop.docs.map(\r\n                doc=>({id:doc.id,data:doc.data()})\r\n                )\r\n            )\r\n        )\r\n        setLoading(false)\r\n    }\r\n    \r\n    function deleteTaskFromProject(projectId,taskId){\r\n        firestore.collection(projectId).doc(taskId).delete()\r\n    }\r\n\r\n    const value = {\r\n        projectId,\r\n        setProjectId,\r\n        projectName,\r\n        setProjectName,\r\n        tasks,\r\n        setTasks,\r\n        loadingTaskFromProject,\r\n        deleteTaskFromProject\r\n    }\r\n\r\n    return (\r\n        <ProjectContext.Provider value={value}>\r\n            {!loading && children}\r\n        </ProjectContext.Provider>\r\n    )\r\n}","import React, { useContext, useState, useEffect } from 'react'\r\n\r\nexport const ThemeContext = React.createContext()\r\n\r\nexport function useTheme(){\r\n    return useContext(ThemeContext)\r\n}\r\n\r\nexport function ThemeProvider( {children} ) {\r\n    const [themePrimary, setThemePrimary] = useState('')\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    function toggleTheme(themePrimary){\r\n        themePrimary === '#047AED' ? setThemePrimary('#E13B64') : setThemePrimary('#047AED')\r\n        return themePrimary\r\n    }\r\n\r\n    useEffect(() => {\r\n        setThemePrimary('#E13B64')\r\n        setLoading(false)\r\n    },[]) \r\n\r\n\r\n    const value = {\r\n        themePrimary,\r\n        toggleTheme\r\n    }\r\n\r\n    return (\r\n        <ThemeContext.Provider value={value}>\r\n            {!loading && children}\r\n        </ThemeContext.Provider>\r\n    )\r\n}","import React, { createContext, useState } from \"react\";\r\n\r\nexport const AppTransitionContext = createContext();\r\n\r\nexport function AppTransitionProvider({ children }) {\r\n  const [preset, setPreset] = useState(\"cubeToLeft\");\r\n  const [enterAnimation, setEnterAnimation] = useState(\"\");\r\n  const [exitAnimation, setExitAnimation] = useState(\"\");\r\n\r\n  return (\r\n    <AppTransitionContext.Provider\r\n      value={{\r\n        preset,\r\n        enterAnimation,\r\n        exitAnimation,\r\n        setPreset,\r\n        setEnterAnimation,\r\n        setExitAnimation\r\n      }}\r\n    >\r\n      {children}\r\n    </AppTransitionContext.Provider>\r\n  );\r\n}\r\n","import React, {useContext} from 'react'\r\nimport { Link, useHistory} from 'react-router-dom'\r\nimport { AiOutlinePlusCircle, AiFillCopy, AiOutlineBorder } from 'react-icons/ai'\r\nimport { BsListTask } from 'react-icons/bs'\r\nimport { RiDashboardFill } from 'react-icons/ri'\r\nimport { GrProjects } from 'react-icons/gr'\r\nimport { AppTransitionContext } from '../service/AppTransitionContext'\r\nimport {useDB} from '../service/DatabaseContext'\r\n\r\nexport default function BottomNav() {\r\n    const history = useHistory()\r\n    const { setPreset } = useContext(AppTransitionContext);\r\n    const { projects } = useDB()\r\n    \r\n    async function handleToCreateTask(){\r\n        try {\r\n            if(projects.length === 0){\r\n                window.alert(\"You need to create a Project first, before you can create Tasks!\");\r\n                await setPreset(\"cubeToBottom\")\r\n                history.push('/create-project')\r\n            }else{\r\n            await setPreset(\"cubeToRight\")\r\n            history.push('/create-task')\r\n            }\r\n        } catch (error) {\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className=\"navbar-bottom\">\r\n                <Link to=\"/\"><AiOutlineBorder size=\"2em\" /></Link>\r\n                <Link onClick={handleToCreateTask}><AiOutlinePlusCircle size=\"2em\"/></Link>\r\n                <Link to=\"/task-board\" ><BsListTask size=\"2em\"/></Link>\r\n                </div>\r\n    )\r\n}\r\n","import React, {useContext} from 'react'\r\nimport { Link, useHistory} from 'react-router-dom'\r\nimport {useAuth} from '../service/AuthContext'\r\nimport { AiFillSetting } from 'react-icons/ai'\r\nimport { AppTransitionContext } from '../service/AppTransitionContext'\r\n\r\nexport default function TopNav() {\r\n    const { currentUser } = useAuth()\r\n    const history = useHistory()\r\n    const { setPreset } = useContext(AppTransitionContext);\r\n    async function handleToProfile(){\r\n        try {\r\n            await setPreset(\"moveToLeftFromRight\")\r\n            history.push('/update-profile')\r\n        } catch (error) {\r\n        }\r\n\r\n    }\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <div className=\"navbar-top\">\r\n                <Link className=\"align-right\" onClick={handleToProfile}>\r\n                        <AiFillSetting title={currentUser.email} color=\"red\" size=\"1.5em\"/>\r\n                    </Link>\r\n                <div className=\"align-placeholder\">\r\n                </div>\r\n                <h2>Busybag</h2>\r\n                <p>Keep track and do all</p>\r\n                <strong>Email:</strong>{currentUser.email}\r\n            </div>\r\n            <div className=\"navbar-placeholder\">\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useRef,useContext} from 'react'\r\nimport { /*Link*/ useHistory } from 'react-router-dom'\r\nimport {useAuth} from '../service/AuthContext'\r\nimport {useTheme} from '../service/ThemeContext'\r\nimport {useDB} from '../service/DatabaseContext'\r\nimport { useProject } from '../service/ProjectContext'\r\nimport BottomNav from '../components/BottomNav'\r\nimport TopNav from '../components/TopNav'\r\nimport { AiOutlinePlus } from 'react-icons/ai'\r\nimport { AppTransitionContext } from '../service/AppTransitionContext'\r\n\r\n\r\nexport default function Dashboard() {\r\n    const [error, setError] = useState('')\r\n    const {currentUser} = useAuth()\r\n    const { themePrimary, toggleTheme } = useTheme()\r\n    const { projects, deleteProject } = useDB()\r\n    const { setProjectId, setProjectName,loadingTaskFromProject } = useProject()\r\n    const history = useHistory()\r\n    const { setPreset } = useContext(AppTransitionContext);\r\n    \r\n\r\n    const nameRef = useRef()\r\n    function changeColor(){\r\n        toggleTheme(themePrimary)\r\n    }\r\n    async function handleToProjectCreate(){\r\n        try {\r\n            await setPreset(\"cubeToBottom\")\r\n            history.push('/create-project')\r\n            // TODO set Dashboard & Taskboard seperate\r\n            // await setPreset(\"cubeToTop\")\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    async function handleToProjectOverview(projectId,projectName){\r\n        try {\r\n            await setProjectId(projectId)\r\n            await setProjectName(projectName)\r\n            await loadingTaskFromProject(projectId)\r\n            await setPreset(\"newspaper\")\r\n            history.push('/project-overview')\r\n            // TODO set Dashboard & Taskboard seperate\r\n            // await setPreset(\"cubeToTop\")\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    function deleteFromProject(projectid,projectname){\r\n        console.log(`Delete this project ${projectid} now`)\r\n        if(window.confirm(`Delete everything on ${projectname}?`)){\r\n            deleteProject(projectid)\r\n        }\r\n    }\r\n\r\n    const styleTest = {\r\n        backgroundColor: themePrimary,\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <TopNav />\r\n                <div className=\"main-container\">\r\n                    {error && <h1>{error}</h1>}\r\n                    <div className=\"projects\">\r\n                        <button onClick={handleToProjectCreate} className=\"project flex-center\">\r\n                            <AiOutlinePlus size=\"4em\"/>\r\n                        </button>\r\n                        {projects.map((item,i) =>  (\r\n                        <div key={i} className=\"project\" style={{backgroundColor:item.data.color}}>\r\n                            <div>{item.data.name}</div>\r\n                            <button onClick={() =>handleToProjectOverview(item.id,item.data.name)}> Open </button>\r\n                            <button onClick={()=>deleteFromProject(item.id,item.data.name)}> Delete </button>\r\n                        </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                {/* <div>\r\n                    <button onClick={changeColor} style={styleTest}>ChangeColor</button>\r\n                    <h1>{themePrimary}</h1>\r\n                </div> */}\r\n                <BottomNav />\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import React, { useRef, useState, useContext } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../service/AuthContext'\r\nimport { useDB } from '../service/DatabaseContext'\r\nimport { AiOutlineArrowLeft } from 'react-icons/ai'\r\nimport { AppTransitionContext } from '../service/AppTransitionContext'\r\n\r\nexport default function CreateProject() {\r\n    const { setPreset } = useContext(AppTransitionContext);\r\n\r\n    const projectNameRef = useRef()\r\n    const projectDescriptionRef = useRef()\r\n    const projectColorRef = useRef()\r\n\r\n    const { currentUser , updatePassword, updateEmail, logout } = useAuth()\r\n    const { addProject } = useDB()\r\n\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [color, setColor] = useState('#047AED');\r\n\r\n    const history = useHistory()\r\n    \r\n    async function handleToDashboard(){\r\n        try {\r\n            // await setPreset(\"fall\")\r\n            await setPreset(\"cubeToLeft\")\r\n            history.push('/')\r\n            // TODO set Dashboard & Taskboard seperate\r\n            // await setPreset(\"cubeToTop\")\r\n        } catch (error) {\r\n        }\r\n\r\n    }\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault()\r\n        if (projectNameRef.current.value.length < 4) {\r\n            return setError('Enter a suitable Projectname')\r\n        }\r\n        setLoading(true)\r\n        setError('')\r\n        console.log(projectNameRef.current.value,projectDescriptionRef.current.value,projectColorRef.current.value)\r\n        //name, description, color, owner\r\n        await addProject(projectNameRef.current.value,projectDescriptionRef.current.value,projectColorRef.current.value,currentUser.email)\r\n        setLoading(false)\r\n        await setPreset(\"cubeToTop\")\r\n        history.push('/')\r\n    }\r\n\r\n    async function handleLogout(){\r\n        setError('')\r\n        try {\r\n            await logout()\r\n            history.push('/login')\r\n        } catch (error) {\r\n            setError('Failed to log out')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <div className=\"navbar-profile-top\">\r\n                    <div className=\"align-placeholder\">\r\n                        <Link className=\"align-left\" onClick={handleToDashboard}><AiOutlineArrowLeft title={currentUser.email} color=\"red\" size=\"1.5em\"/></Link>\r\n                    </div>\r\n                    <h2>Busybag</h2>\r\n                    <p>Keep track and do all</p>\r\n                </div>\r\n                <div className=\"navbar-placeholder\">\r\n                </div>\r\n                <h2>Create Project</h2>\r\n                <div className=\"createProject\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        {error && <h1>{error}</h1>}\r\n                        <input type=\"text\" placeholder=\"Projectname...\" ref={projectNameRef} placeholder=\"Enter a Project Name\"/>\r\n                        <input type=\"text\" placeholder=\"Projectdescription...\" ref={projectDescriptionRef} placeholder=\"Describe your Project...\"/>\r\n                        <input type=\"color\" value={color} onChange={e => setColor(e.target.value)} ref={projectColorRef} />\r\n                        <strong>Owner:</strong>{currentUser.email}\r\n                        <button type=\"submit\" className=\"signin___button\" disabled={loading}> Create </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}","import React, { useRef, useState, useContext } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../service/AuthContext'\r\nimport { useDB } from '../service/DatabaseContext'\r\nimport { AiOutlineArrowLeft } from 'react-icons/ai'\r\nimport { AppTransitionContext } from '../service/AppTransitionContext'\r\n\r\nexport default function CreateTask() {\r\n    const { setPreset } = useContext(AppTransitionContext);\r\n\r\n    const taskNameRef = useRef()\r\n    const taskDescriptionRef = useRef()\r\n    const projectRef = useRef()\r\n\r\n    const { currentUser , updatePassword, updateEmail, logout } = useAuth()\r\n    const { projects, addTaskToProject } = useDB()\r\n\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [color, setColor] = useState('#047AED');\r\n\r\n    const history = useHistory()\r\n    \r\n    async function handleToDashboard(){\r\n        try {\r\n            // await setPreset(\"fall\")\r\n            await setPreset(\"cubeToLeft\")\r\n            history.push('/')\r\n            // TODO set Dashboard & Taskboard seperate\r\n            // await setPreset(\"cubeToTop\")\r\n        } catch (error) {\r\n        }\r\n\r\n    }\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault()\r\n        if (taskNameRef.current.value.length < 4) {\r\n            return setError('Enter a suitable Taskname')\r\n        }\r\n        setLoading(true)\r\n        setError('')\r\n        console.log(projectRef.current.value,taskNameRef.current.value,taskDescriptionRef.current.value,currentUser.email)\r\n        addTaskToProject(projectRef.current.value,taskNameRef.current.value,taskDescriptionRef.current.value,currentUser.email)\r\n        //name, description, color, owner\r\n        // await addProject(taskNameRef.current.value,projectDescriptionRef.current.value,projectColorRef.current.value,currentUser.email)\r\n        // setLoading(false)\r\n        // await setPreset(\"cubeToTop\")\r\n        setLoading(false)\r\n        history.goBack()\r\n    }\r\n\r\n    async function handleLogout(){\r\n        setError('')\r\n        try {\r\n            await logout()\r\n            history.push('/login')\r\n        } catch (error) {\r\n            setError('Failed to log out')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <div className=\"navbar-profile-top\">\r\n                    <div className=\"align-placeholder\">\r\n                        <Link className=\"align-left\" onClick={handleToDashboard}><AiOutlineArrowLeft title={currentUser.email} color=\"red\" size=\"1.5em\"/></Link>\r\n                    </div>\r\n                    <h2>Busybag</h2>\r\n                    <p>Keep track and do all</p>\r\n                </div>\r\n                <div className=\"navbar-placeholder\">\r\n                </div>\r\n                <h2>Create Task</h2>\r\n                <div className=\"createProject\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        {error && <h1>{error}</h1>}\r\n                        <input type=\"text\" placeholder=\"Projectname...\" ref={taskNameRef} placeholder=\"Enter a Task Name\"/>\r\n                        <input type=\"text\" placeholder=\"Projectdescription...\" ref={taskDescriptionRef} placeholder=\"Describe your taks...\"/>\r\n                        <div className=\"text-right\">\r\n                            <div>\r\n                                Repeat? <button>...</button>\r\n                            </div>\r\n                            <div>\r\n                                Deadline? <button>...</button>\r\n                            </div>\r\n                            <div>\r\n                                Effort? <button>...</button>\r\n                            </div>\r\n                            <div>\r\n                                Assignee? <button>...</button>\r\n                            </div>\r\n                            <div>\r\n                                <select ref={projectRef}>\r\n                                {projects.map((item,i) =>  (\r\n                                    <option value={item.id}>{item.data.name}</option>                                \r\n                                    ))}\r\n                                    </select>\r\n                            </div>\r\n                        </div>\r\n                        <strong>Owner:</strong>{currentUser.email}\r\n                        <button type=\"submit\" className=\"signin___button\" disabled={loading}> Create </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}","import React, { useRef, useState, useContext } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../service/AuthContext'\r\nimport { useDB } from '../service/DatabaseContext'\r\nimport { useProject } from '../service/ProjectContext'\r\nimport { AiFillSetting, AiOutlineArrowLeft, AiFillEdit } from 'react-icons/ai'\r\nimport { BiShareAlt } from 'react-icons/bi'\r\nimport { AppTransitionContext } from '../service/AppTransitionContext'\r\nimport BottomNav from '../components/BottomNav';\r\n\r\nexport default function ProjectOverview() {\r\n    const { setPreset } = useContext(AppTransitionContext);\r\n\r\n    const projectNameRef = useRef()\r\n    const projectDescriptionRef = useRef()\r\n    const projectColorRef = useRef()\r\n\r\n    const { currentUser , updatePassword, updateEmail, logout } = useAuth()\r\n    const { addProject , shareProjectWithUser } = useDB()\r\n    const { projectId, projectName, tasks, deleteTaskFromProject } = useProject()\r\n\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [color, setColor] = useState('#047AED');\r\n\r\n    const history = useHistory()\r\n    \r\n    async function handleToDashboard(){\r\n        try {\r\n            // await setPreset(\"fall\")\r\n            await setPreset(\"newspaper\")\r\n            history.push('/')\r\n            // TODO set Dashboard & Taskboard seperate\r\n            // await setPreset(\"cubeToTop\")\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault()\r\n        if (projectNameRef.current.value.length < 4) {\r\n            return setError('Enter a suitable Projectname')\r\n        }\r\n        setLoading(true)\r\n        setError('')\r\n        console.log(projectNameRef.current.value,projectDescriptionRef.current.value,projectColorRef.current.value)\r\n        //name, description, color, owner\r\n        await addProject(projectNameRef.current.value,projectDescriptionRef.current.value,projectColorRef.current.value,currentUser.email)\r\n        setLoading(false)\r\n        await setPreset(\"cubeToTop\")\r\n        history.push('/')\r\n    }\r\n\r\n    async function handleSharingProject(){\r\n        var email = window.prompt(\"Which email you wanan share?\")\r\n        shareProjectWithUser(email,projectId)\r\n    }\r\n\r\n    async function handleLogout(){\r\n        setError('')\r\n        try {\r\n            await logout()\r\n            history.push('/login')\r\n        } catch (error) {\r\n            setError('Failed to log out')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <div className=\"navbar-profile-top\">\r\n                    <div className=\"align-placeholder\">\r\n                        <Link className=\"align-left\" onClick={handleToDashboard}><AiOutlineArrowLeft title={currentUser.email} color=\"red\" size=\"1.5em\"/></Link>\r\n                    </div>\r\n                    <div className=\"align-right\">\r\n                        <Link>\r\n                            <BiShareAlt onClick={handleSharingProject} title={currentUser.email} color=\"red\" size=\"1.5em\"/>\r\n                        </Link>\r\n                        <Link>\r\n                            <AiFillEdit title={currentUser.email} color=\"red\" size=\"1.5em\"/>\r\n                        </Link>\r\n                    </div>\r\n                    <h2>Busybag</h2>\r\n                    <p>Keep track and do all</p>\r\n                </div>\r\n                <div className=\"navbar-placeholder\">\r\n                </div>\r\n                {/* <h5>Project Overview</h5> */}\r\n                <h2>{projectName}</h2>\r\n                <p>{projectId}</p>\r\n                <ul className=\"\">\r\n                    {tasks.map((item,i) =>  (\r\n                            <li key={i} className=\"task-list\" >\r\n                                <button onClick={() => deleteTaskFromProject(projectId,item.id)}>done</button> <p>{item.data.name}</p>\r\n                                {/* <li>{item.data.name}|{item.id}</li> */}\r\n                            </li>\r\n                            ))}\r\n                </ul>\r\n                <BottomNav />\r\n            </div>\r\n        </section>\r\n    )\r\n}","import React, {useState, useRef} from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport {useAuth} from '../service/AuthContext'\r\nimport { AiFillSetting } from 'react-icons/ai'\r\nimport BottomNav from '../components/BottomNav'\r\nimport TopNav from '../components/TopNav'\r\n\r\n\r\nexport default function Taskboard() {\r\n    const [error, setError] = useState('')\r\n    const {currentUser} = useAuth()\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <TopNav />\r\n                {error && <h1>{error}</h1>}\r\n                <p>Some assign tasks here...</p>\r\n                <BottomNav />\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import React, { useRef, useState, useContext } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../service/AuthContext'\r\nimport { AiOutlineArrowLeft } from 'react-icons/ai'\r\nimport { AppTransitionContext } from '../service/AppTransitionContext'\r\n\r\nexport default function UpdateProfile() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const { currentUser , updatePassword, updateEmail, logout } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n    const { setPreset } = useContext(AppTransitionContext);\r\n    async function handleToDashboard(){\r\n        try {\r\n            await setPreset(\"moveToRightFromLeft\")\r\n            history.push('/')\r\n            // TODO set Dashboard & Taskboard seperate\r\n            // await setPreset(\"cubeToTop\")\r\n        } catch (error) {\r\n        }\r\n\r\n    }\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault()\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        }\r\n\r\n        const promises = []\r\n        setLoading(true)\r\n        setError('')\r\n        if(emailRef.current.value !== currentUser.email){\r\n            promises.push(updateEmail(emailRef.current.value))\r\n        }\r\n        if(passwordRef.current.value){\r\n            promises.push(updatePassword(passwordRef.current.value))\r\n        }\r\n        Promise.all(promises).then(() => {\r\n            history.push('/')\r\n        }).catch((error) => {\r\n            setError('Failed to update account\\n'+error)\r\n            console.log(error)\r\n        }).finally( () => {\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    async function handleLogout(){\r\n        setError('')\r\n        try {\r\n            await logout()\r\n            history.push('/login')\r\n        } catch (error) {\r\n            setError('Failed to log out')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <div className=\"navbar-profile-top\">\r\n                    <div className=\"align-placeholder\">\r\n                        <Link className=\"align-left\" onClick={handleToDashboard}><AiOutlineArrowLeft title={currentUser.email} color=\"red\" size=\"1.5em\"/></Link>\r\n                    </div>\r\n                    <h2>Busybag</h2>\r\n                    <p>Keep track and do all</p>\r\n                    <strong>Email:</strong>{currentUser.email}\r\n                </div>\r\n                <div className=\"navbar-placeholder\">\r\n                </div>\r\n                <button onClick={handleLogout} >Logout</button>\r\n                <h2>---</h2>\r\n                <h2>Update</h2>\r\n                <div className=\"card\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input type=\"email\" placeholder=\"Email\" ref={emailRef} defaultValue={currentUser.email}/>\r\n                        <input type=\"password\" placeholder=\"Password\"ref={passwordRef} placeholder=\"Leave blank to keep the same\"/>\r\n                        <input type=\"password\" placeholder=\"Password Confirm\" ref={passwordConfirmRef} placeholder=\"Leave blank to keep the same\"/>\r\n                        {error && <h1>{error}</h1>}\r\n                        <button type=\"submit\" className=\"signin___button\" disabled={loading}> Save </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}","import React, { useRef, useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Logo from '../components/Logo';\r\nimport { useAuth } from '../service/AuthContext'\r\n\r\nexport default function Login() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const {login } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault()\r\n        \r\n        try{\r\n            setError('')\r\n            setLoading(true)\r\n            await login(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/\")\r\n        }catch{\r\n            setError('Failed to login via Acccount')\r\n        }\r\n        setLoading(true)\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <h2>Busybag</h2>\r\n                <Logo />\r\n                <p>Keep track and do all</p>\r\n                <div className=\"card\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input type=\"email\" placeholder=\"Email\" ref={emailRef}/>\r\n                        <input type=\"password\" placeholder=\"Password\"ref={passwordRef}/>\r\n                        {error && <h1>{error}</h1>}\r\n                        <Link to=\"/forgot-password\" className=\"text-right\">Forgot Password?</Link>\r\n                        <button type=\"submit\" className=\"signin___button\" disabled={loading}> Login </button>\r\n                    </form>\r\n                </div>\r\n                <div>\r\n                    Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport {useAuth} from '../service/AuthContext'\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n    const { currentUser } = useAuth()\r\n  \r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props => {\r\n          return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n        }}\r\n      ></Route>\r\n    )\r\n  }\r\n","import React, { useRef, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport Logo from '../components/Logo';\r\nimport { useAuth } from '../service/AuthContext'\r\n\r\nexport default function ForgotPassword() {\r\n    const emailRef = useRef()\r\n    const { resetPassword } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [message, setMessage] = useState('')\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault()\r\n        \r\n        try{\r\n            setMessage('')\r\n            setError('')\r\n            setLoading(true)\r\n            await resetPassword(emailRef.current.value)\r\n            setMessage('Check your inbox for further instructions')\r\n        }catch{\r\n            setError('Failed to reset Password')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <h2>Busybag</h2>\r\n                <Logo />\r\n                <p>Keep track and do all</p>\r\n                <div className=\"card\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input type=\"email\" placeholder=\"Email\" ref={emailRef}/>\r\n                        {error && <h1>{error}</h1>}\r\n                        {message && <h1>{message}</h1>}\r\n                        <button type=\"submit\" className=\"signin___button\" disabled={loading}> Reset Password </button>  \r\n                    </form>\r\n                </div>\r\n                <div>\r\n                    Back to Login? <Link to=\"/login\">Login</Link>\r\n                </div>\r\n                <div>\r\n                    Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}","import '../Main.css';\nimport { useContext } from \"react\";\nimport Signup from '../pages/Signup';\nimport { AuthProvider } from '../service/AuthContext';\nimport { DatabaseProvider } from '../service/DatabaseContext';\nimport { ProjectProvider } from '../service/ProjectContext';\n// import { BrowserRouter as Router,Switch,Route} from 'react-router-dom'\nimport { HashRouter as Router,Switch,Route} from 'react-router-dom'\nimport Dashboard from '../pages/Dashboard'\nimport CreateProject from '../pages/CreateProject'\nimport CreateTask from '../pages/CreateTask'\nimport ProjectOverview from '../pages/ProjectOverview'\nimport Taskboard from '../pages/Taskboard'\nimport UpdateProfile from '../pages/UpdateProfile'\nimport Login from '../pages/Login'\nimport PrivateRoute from './PrivateRoute'\nimport ForgotPassword from '../pages/ForgotPassword';\nimport { ThemeProvider } from '../service/ThemeContext';\n\nimport { AppTransitionContext } from '../service/AppTransitionContext'\nimport { PageTransition } from '@steveeeie/react-page-transition';\n// https://github.com/Steveeeie/react-page-transition\n\nfunction App() {\n  const { preset, enterAnimation , exitAnimation } = useContext(AppTransitionContext);\n  return (\n\n    <Router>\n        <AuthProvider>\n        <ThemeProvider>\n        <DatabaseProvider>\n        <ProjectProvider>\n        <Route\n            render={({ location }) => {return (\n                <PageTransition\n                  preset={preset}\n                  transitionKey={location.pathname}\n                  enterAnimation={enterAnimation}\n                  exitAnimation={exitAnimation}\n                >\n                <Switch location={location}>\n                \n                    <PrivateRoute exact path=\"/\"  component={Dashboard} />\n                    <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n                    <PrivateRoute path=\"/task-board\" component={Taskboard} />\n                    <PrivateRoute path=\"/create-project\" component={CreateProject} />\n                    <PrivateRoute path=\"/create-task\" component={CreateTask} />\n                    <PrivateRoute path=\"/project-overview\" component={ProjectOverview} />\n                    \n                  <Route path=\"/signup\" component={Signup} />\n                  <Route path=\"/login\" component={Login} />\n                  <Route path=\"/forgot-password\" component={ForgotPassword} />\n                </Switch>\n              </PageTransition>\n              );\n            }}\n          />\n          </ProjectProvider>\n          </DatabaseProvider>\n          </ThemeProvider>\n        </AuthProvider>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Main.css';\nimport App from './components/App';\nimport { AppTransitionProvider } from './service/AppTransitionContext'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <AppTransitionProvider>\n    <App />\n    </AppTransitionProvider>\n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}