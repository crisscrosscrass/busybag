{"version":3,"sources":["images/unnamed.png","components/Logo.js","firebase.js","service/AuthContext.js","pages/Signup.js","service/DatabaseContext.js","service/ProjectContext.js","service/ThemeContext.js","service/AppTransitionContext.js","components/BottomNav.js","components/TopNav.js","pages/Dashboard.js","pages/CreateProject.js","pages/ModifyProject.js","components/Repeatmodal.js","pages/CreateTask.js","pages/ProjectOverview.js","pages/HistoryView.js","pages/Taskboard.js","pages/UpdateProfile.js","pages/Login.js","components/PrivateRoute.js","pages/ForgotPassword.js","components/App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Logo","className","src","logo","alt","app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","GoogleAuthProvider","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","logout","signOut","signup","createUserWithEmailAndPassword","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","e","a","preventDefault","current","push","onSubmit","type","placeholder","ref","disabled","to","DatabaseContext","useDB","DatabaseProvider","projects","setProjects","docId","projectRef","collection","doc","get","exists","data","shared","console","log","update","where","onSnapshot","snapshop","docs","map","id","addHistoryEntryToProject","taskName","currentdate","Date","datetime","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","task","projectid","shareProjectWithUser","addProject","project","description","color","add","name","owner","then","docRef","catch","modifyProject","getCurrentProjectData","deleteProject","snapshot","forEach","delete","addTaskToProject","taskDescription","ProjectContext","useProject","ProjectProvider","setProjectId","projectName","setProjectName","projectColor","setProjectColor","setProjectDescription","projectOwner","setProjectOwner","setProjectShared","projectOverview","setProjectOverview","tasks","setTasks","userTasks","setUserTasks","loadingTasksFromProject","userId","loadingTasksFromUser","item","assignProject","assignTaskboard","deleteTaskFromProject","taskId","ThemeContext","ThemeProvider","themePrimary","setThemePrimary","toggleTheme","AppTransitionContext","AppTransitionProvider","preset","setPreset","enterAnimation","setEnterAnimation","exitAnimation","setExitAnimation","BottomNav","length","window","alert","uid","size","onClick","TopNav","title","Dashboard","i","style","backgroundColor","handleToProjectOverview","CreateProject","projectNameRef","projectDescriptionRef","projectColorRef","setColor","goBack","onChange","target","ModifyProject","projectOwnerRef","projectname","setProjectname","projectdescription","setProjectdescription","newProjectDetails","confirm","deleteFromProject","readOnly","index","Repeatmodal","showModal","setShowRepeatModal","amountTimeframeRef","applyRepeatSettings","typeTimeframeRef","endRepeatFrame","weekDays","setWeekDays","amountTimeframe","setAmountTimeframe","showWeekDays","setShowWeekDays","dateFrame","attemptsFrame","radioType","setRadioType","handleRadioChange","event","getType","getRadioSelectedInput","handlingSubmit","min","state","newButtons","produce","weekdayCopy","defaultChecked","CreateTask","taskNameRef","taskDescriptionRef","projectInit","setProjectInit","showRepeatmodal","repeatFrame","setRepeatFrame","timeFrame","weekdays","substring","ProjectOverview","prompt","newProjectInfo","newProjectData","itemId","handleCompleteTask","handleTaskMenu","HistoryView","reverse","Taskboard","j","UpdateProfile","promises","Promise","all","finally","defaultValue","Login","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","App","location","transitionKey","pathname","exact","path","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.e7d30195.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/unnamed.ea125fe9.png\";","import React from 'react'\r\nimport logo from '../images/unnamed.png';\r\n\r\nexport default function Logo() {\r\n    return (\r\n        <div className=\"logo-container\">\r\n            <img src={logo} alt=\"Logo\" />\r\n        </div>\r\n    )\r\n}\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\n\r\nconst app = firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n    // apiKey: \"AIzaSyAPyppmyjBKQjIS4o1nRk6N-UxkW54rFPA\",\r\n    // authDomain: \"busybag-f27f9.firebaseapp.com\",\r\n    // projectId: \"busybag-f27f9\",\r\n    // storageBucket: \"busybag-f27f9.appspot.com\",\r\n    // messagingSenderId: \"622475419405\",\r\n    // appId: \"1:622475419405:web:d8022f00e74e3ede131a44\"\r\n})\r\n\r\nexport const auth = app.auth()\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\nexport const firestore = app.firestore()\r\nexport default app","import React, { useContext, useState , useEffect } from 'react'\r\nimport {auth,provider} from '../firebase'\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth(){\r\n    return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider( {children} ) {\r\n    const [currentUser, setCurrentUser] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    function signup(email, password){\r\n        return auth.createUserWithEmailAndPassword(email,password)\r\n    }\r\n\r\n    function login(email,password){\r\n        return auth.signInWithEmailAndPassword(email,password)\r\n    }\r\n\r\n    function loginWithGoogle(){\r\n        return auth.signInWithPopup(provider)\r\n    }\r\n\r\n    function logout(){\r\n        return auth.signOut()\r\n    }\r\n\r\n    function resetPassword(email){\r\n        return auth.sendPasswordResetEmail(email)\r\n    }\r\n\r\n    function updateEmail(email){\r\n        return currentUser.updateEmail(email)\r\n    }\r\n\r\n    function updatePassword(password){\r\n        return currentUser.updatePassword(password)\r\n    }\r\n\r\n    useEffect(() => {\r\n        // auth.onAuthStateChanged(function(user) {\r\n        //     if (user) {\r\n        //       // User is signed in.\r\n        //       console.log(user)\r\n        //       console.log(user.displayName)\r\n        //       console.log(user.email)\r\n        //       console.log(user.photoURL)\r\n        //       console.log(user.emailVerified)\r\n        //       console.log(user.uid)\r\n        //     } else {\r\n        //       // No user is signed in.\r\n        //     }\r\n        //   });\r\n\r\n          \r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user)\r\n            setLoading(false)\r\n        })\r\n\r\n        return unsubscribe\r\n    },[]) \r\n\r\n    const value = {\r\n        currentUser,\r\n        login,\r\n        logout,\r\n        signup,\r\n        resetPassword,\r\n        updateEmail,\r\n        updatePassword\r\n    }\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Logo from '../components/Logo';\r\nimport { useAuth } from '../service/AuthContext'\r\n\r\nexport default function Signup() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const {signup } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault()\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        }\r\n        try{\r\n            setError('')\r\n            setLoading(true)\r\n            await signup(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/\")\r\n        }catch{\r\n            setError('Failed to create an Acccount')\r\n        }\r\n        setLoading(true)\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <h2>Busybag</h2>\r\n                <Logo/>\r\n                <p>Keep track and do all</p>\r\n                <div className=\"card\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input type=\"email\" placeholder=\"Email\" ref={emailRef}/>\r\n                        <input type=\"password\" placeholder=\"Password\"ref={passwordRef}/>\r\n                        <input type=\"password\" placeholder=\"Password Confirm\" ref={passwordConfirmRef}/>\r\n                        {error && <h1>{error}</h1>}\r\n                        <button type=\"submit\" className=\"signin___button\" disabled={loading}> Sign up </button>\r\n                    </form>\r\n                </div>\r\n                <div>\r\n                    Already have an account? <Link to=\"/login\">Login</Link>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport {firestore} from '../firebase'\r\nimport {auth} from '../firebase'\r\n\r\nconst DatabaseContext = React.createContext()\r\n\r\nexport function useDB(){\r\n    return useContext(DatabaseContext)\r\n}\r\n\r\nexport function DatabaseProvider( {children} ) {\r\n    const [projects,setProjects] = useState([]);\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    //init values\r\n    useEffect(()=>{\r\n        const unsubscribe = auth.onAuthStateChanged(async function(user) {\r\n            if (user) {\r\n            firestore.collection(\"projects\").where(\"shared\", \"array-contains\",user.email)\r\n                .onSnapshot(snapshop => setProjects(\r\n                    snapshop.docs.map(\r\n                        doc=>(\r\n                            {id:doc.id,data:doc.data()}\r\n                            )\r\n                        )\r\n                    )\r\n                )\r\n                setLoading(false)\r\n            }else{\r\n                setLoading(false)\r\n            }\r\n          });\r\n        // let isMounted = true;\r\n        // return () => { isMounted = false };\r\n        return unsubscribe    \r\n    },[])\r\n\r\n    async function shareProjectWithUser(email,docId){\r\n        const projectRef = firestore.collection('projects').doc(docId);\r\n        const doc = await projectRef.get();\r\n        if (!doc.exists) {\r\n            console.log('No such document!');\r\n        } else {\r\n            let data = doc.data()\r\n            data.shared.push(email)\r\n            console.log('Document data:', data.shared);\r\n            firestore.collection('projects').doc(docId).update({\r\n                shared: data.shared\r\n            });\r\n        }\r\n    }\r\n\r\n    function addProject(project,description, color, user){\r\n        firestore.collection(\"projects\").add({\r\n            name:project,\r\n            description:description,\r\n            color:color,\r\n            owner: user,\r\n            shared:[user],\r\n            history:[]\r\n        }).then(docRef => {\r\n            return docRef.id            \r\n        })\r\n        .catch(error => console.error(\"Error adding document: \", error))\r\n    }\r\n\r\n    function addTaskToProject(projectId,taskName,taskDescription,user){\r\n        firestore.collection(projectId).add({\r\n            name:taskName,\r\n            description:taskDescription,\r\n            user:user,\r\n        })\r\n        addHistoryEntryToProject(user,projectId,taskName);\r\n    }\r\n\r\n    class HistoryEntry{\r\n        constructor(email=\"\",task=\"\"){\r\n          this.email = email;\r\n          this.task = task;\r\n          this.currentdate = new Date();\r\n          this.datetime =\"Time: \" + this.currentdate.getDate() + \"/\"\r\n          + (this.currentdate.getMonth()+1)  + \"/\" \r\n          + this.currentdate.getFullYear() + \" - \"  \r\n          + this.currentdate.getHours() + \":\"  \r\n          + this.currentdate.getMinutes() + \":\" \r\n          + this.currentdate.getSeconds();\r\n        }\r\n      }\r\n\r\n    async function addHistoryEntryToProject(email,docId, taskName){\r\n        const projectRef = firestore.collection('projects').doc(docId);\r\n        const doc = await projectRef.get();\r\n        if (!doc.exists) {\r\n            console.log('No such document!');\r\n        } else {\r\n            var currentdate = new Date(); \r\n            var datetime = \"Time: \" + currentdate.getDate() + \"/\"\r\n                + (currentdate.getMonth()+1)  + \"/\" \r\n                + currentdate.getFullYear() + \" - \"  \r\n                + currentdate.getHours() + \":\"  \r\n                + currentdate.getMinutes() + \":\" \r\n                + currentdate.getSeconds();\r\n            let data = doc.data()\r\n            console.log(data);\r\n            data.history.push({email: email, task: taskName, currentdate: currentdate, datetime: datetime})\r\n            console.log('Document data:', data.history);\r\n            firestore.collection('projects').doc(docId).update({\r\n                history: data.history\r\n            });\r\n        }\r\n    }\r\n\r\n    function modifyProject(project){\r\n        firestore.collection(\"projects\").doc(project.id).update({\r\n            color: project.data.color,\r\n            description: project.data.description,\r\n            name: project.data.name,\r\n            owner: project.data.owner,\r\n            \r\n        })\r\n    }\r\n\r\n    async function getCurrentProjectData(projectid){\r\n        const projectRef = firestore.collection('projects').doc(projectid);\r\n        const doc = await projectRef.get();\r\n        if (!doc.exists) {\r\n            return \"\";\r\n        } else {\r\n            let data = doc.data()\r\n            return data;\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    function deleteProject(projectid){\r\n        const ref = firestore.collection(projectid)\r\n        ref.onSnapshot((snapshot) => {\r\n            snapshot.docs.forEach((doc) => {\r\n            ref.doc(doc.id).delete()\r\n            })\r\n        })\r\n        firestore.collection(projectid).doc(projectid).delete()\r\n        firestore.collection(\"projects\").doc(projectid).delete();\r\n    }\r\n\r\n    // https://github.com/oghur/React-todo-App-with-connection-to-Firebase/blob/main/src/App.js\r\n    \r\n\r\n    const value = {\r\n        projects,\r\n        shareProjectWithUser,\r\n        addProject,\r\n        modifyProject,\r\n        getCurrentProjectData,\r\n        deleteProject,\r\n        addTaskToProject,\r\n        addHistoryEntryToProject,\r\n        loading\r\n    }\r\n    return (\r\n        <DatabaseContext.Provider value={value}>\r\n            {loading && children}\r\n            {!loading && children}\r\n        </DatabaseContext.Provider>\r\n    )\r\n}\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport {firestore} from '../firebase'\r\n\r\nexport const ProjectContext = React.createContext()\r\n\r\nexport function useProject(){\r\n    return useContext(ProjectContext)\r\n}\r\n\r\nexport function ProjectProvider( {children} ) {\r\n    const [projectId, setProjectId] = useState('')\r\n    const [projectName, setProjectName] = useState('')\r\n    const [projectColor, setProjectColor] = useState('')\r\n    const [projectDescription, setProjectDescription] = useState('')\r\n    const [projectOwner, setProjectOwner] = useState('')\r\n    const [projectShared, setProjectShared] = useState([])\r\n    const [projectOverview, setProjectOverview] = useState({})\r\n    const [tasks, setTasks] = useState([])\r\n    const [userTasks, setUserTasks] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        setLoading(false)\r\n    },[])\r\n\r\n    async function assignProject(project){\r\n        setProjectId(project.id)\r\n        loadingTasksFromProject(project.id)\r\n        setProjectName(project.data.name)\r\n        setProjectColor(project.data.color)\r\n        setProjectDescription(project.data.description)\r\n        setProjectOwner(project.data.owner)\r\n        setProjectShared(project.data.shared)\r\n        setProjectOverview(project)\r\n    }\r\n\r\n    function loadingTasksFromProject(projectId){\r\n        firestore.collection(projectId).onSnapshot(snapshop => setTasks(\r\n            snapshop.docs.map(\r\n                doc=>({id:doc.id,data:doc.data()})\r\n                )\r\n            )\r\n        )\r\n        setLoading(false)\r\n    }\r\n\r\n    \r\n    async function assignTaskboard(userId){\r\n        await loadingTasksFromUser(userId)\r\n    }\r\n\r\n    function loadingTasksFromUser(userId){\r\n        firestore.collection('users').where(\"id\", \"==\",userId).onSnapshot(snapshop => setUserTasks(\r\n            snapshop.docs.map(\r\n                doc=> doc.data().task.map(\r\n                    item => ({id:item.id,data:item})\r\n                    )\r\n                )\r\n            )\r\n        )\r\n        setLoading(false)\r\n    }\r\n    \r\n    function deleteTaskFromProject(projectId,taskId){\r\n        firestore.collection(projectId).doc(taskId).delete()\r\n    }\r\n\r\n    const value = {\r\n        assignProject,\r\n        assignTaskboard,\r\n        tasks,\r\n        setTasks,\r\n        userTasks,\r\n        setUserTasks,\r\n        projectName,\r\n        projectColor,\r\n        projectId,\r\n        projectOwner,\r\n        projectOverview,\r\n        setProjectShared,\r\n        loadingTasksFromProject,\r\n        deleteTaskFromProject\r\n    }\r\n\r\n    return (\r\n        <ProjectContext.Provider value={value}>\r\n            {!loading && children}\r\n        </ProjectContext.Provider>\r\n    )\r\n}","import React, { useContext, useState, useEffect } from 'react'\r\n\r\nexport const ThemeContext = React.createContext()\r\n\r\nexport function useTheme(){\r\n    return useContext(ThemeContext)\r\n}\r\n\r\nexport function ThemeProvider( {children} ) {\r\n    const [themePrimary, setThemePrimary] = useState('')\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    function toggleTheme(themePrimary){\r\n        themePrimary === '#047AED' ? setThemePrimary('#E13B64') : setThemePrimary('#047AED')\r\n        return themePrimary\r\n    }\r\n\r\n    useEffect(() => {\r\n        setThemePrimary('#E13B64')\r\n        setLoading(false)\r\n    },[]) \r\n\r\n\r\n    const value = {\r\n        themePrimary,\r\n        toggleTheme\r\n    }\r\n\r\n    return (\r\n        <ThemeContext.Provider value={value}>\r\n            {!loading && children}\r\n        </ThemeContext.Provider>\r\n    )\r\n}","import React, { createContext, useState } from \"react\";\r\n\r\nexport const AppTransitionContext = createContext();\r\n\r\nexport function AppTransitionProvider({ children }) {\r\n  const [preset, setPreset] = useState(\"cubeToLeft\");\r\n  const [enterAnimation, setEnterAnimation] = useState(\"\");\r\n  const [exitAnimation, setExitAnimation] = useState(\"\");\r\n\r\n  return (\r\n    <AppTransitionContext.Provider\r\n      value={{\r\n        preset,\r\n        enterAnimation,\r\n        exitAnimation,\r\n        setPreset,\r\n        setEnterAnimation,\r\n        setExitAnimation\r\n      }}\r\n    >\r\n      {children}\r\n    </AppTransitionContext.Provider>\r\n  );\r\n}\r\n","import React, {useContext} from 'react'\r\nimport { Link, useHistory} from 'react-router-dom'\r\nimport { AiOutlinePlusCircle, AiOutlineBorder } from 'react-icons/ai'\r\nimport { BsListTask } from 'react-icons/bs'\r\nimport { AppTransitionContext } from '../service/AppTransitionContext'\r\nimport {useDB} from '../service/DatabaseContext'\r\nimport {useAuth} from '../service/AuthContext'\r\nimport {useProject} from '../service/ProjectContext'\r\n\r\nexport default function BottomNav() {\r\n    const history = useHistory()\r\n    const { setPreset } = useContext(AppTransitionContext);\r\n    const { projects } = useDB()\r\n    const {currentUser} = useAuth()\r\n    const {assignTaskboard , userTasks} = useProject()\r\n    \r\n    async function handleToCreateTask(){\r\n        try {\r\n            if(projects.length === 0){\r\n                window.alert(\"You need to create a Project first, before you can create Tasks!\");\r\n                await setPreset(\"cubeToBottom\")\r\n                history.push('/create-project')\r\n            }else{\r\n            await setPreset(\"cubeToTop\")\r\n            history.push('/create-task')\r\n            }\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    async function handleToTaskboard(){\r\n        try {\r\n            // needs to be implemented as own Provider\r\n            // await assignProject(project);\r\n            console.log(userTasks)\r\n            await assignTaskboard(currentUser.uid)\r\n            await setPreset(\"cubeToLeft\")\r\n            history.push('/task-board')\r\n            // TODO \r\n            // 1. set Dashboard & Taskboard seperate\r\n            // 2. implement some load project by ID, and open only if user is shared to this particular project\r\n            // await setPreset(\"cubeToTop\")\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar-bottom\">\r\n                <Link to=\"/\"><AiOutlineBorder size=\"2em\" /></Link>\r\n                <Link onClick={handleToCreateTask}><AiOutlinePlusCircle size=\"2em\"/></Link>\r\n                <Link onClick={handleToTaskboard} ><BsListTask size=\"2em\"/></Link>\r\n                </div>\r\n    )\r\n}\r\n","import React, {useContext} from 'react'\r\nimport { useHistory} from 'react-router-dom'\r\nimport {useAuth} from '../service/AuthContext'\r\nimport { AiFillSetting } from 'react-icons/ai'\r\nimport { AppTransitionContext } from '../service/AppTransitionContext'\r\n\r\nexport default function TopNav() {\r\n    const { currentUser } = useAuth()\r\n    const history = useHistory()\r\n    const { setPreset } = useContext(AppTransitionContext);\r\n    async function handleToProfile(){\r\n        try {\r\n            await setPreset(\"moveToLeftFromRight\")\r\n            history.push('/update-profile')\r\n        } catch (error) {\r\n        }\r\n\r\n    }\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <div className=\"navbar-top\">\r\n                <a className=\"align-right\" onClick={handleToProfile}>\r\n                        <AiFillSetting title={currentUser.email} color=\"red\" size=\"1.5em\"/>\r\n                    </a>\r\n                <div className=\"align-placeholder\">\r\n                </div>\r\n                <h2>Busybag</h2>\r\n                <p>Keep track and do all</p>\r\n                <strong>Email:</strong>{currentUser.email}\r\n            </div>\r\n            <div className=\"navbar-placeholder\">\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useContext,useEffect} from 'react'\r\nimport { /*Link*/ useHistory } from 'react-router-dom'\r\nimport {useAuth} from '../service/AuthContext'\r\nimport {useTheme} from '../service/ThemeContext'\r\nimport {useDB} from '../service/DatabaseContext'\r\nimport { useProject } from '../service/ProjectContext'\r\nimport BottomNav from '../components/BottomNav'\r\nimport TopNav from '../components/TopNav'\r\nimport { AiOutlinePlus } from 'react-icons/ai'\r\nimport { AppTransitionContext } from '../service/AppTransitionContext'\r\n\r\n\r\nexport default function Dashboard() {\r\n    const [error, setError] = useState('')\r\n    const {currentUser, loading} = useAuth()\r\n    const { themePrimary, toggleTheme } = useTheme()\r\n    const { projects, deleteProject } = useDB()\r\n    const { assignProject } = useProject()\r\n    const history = useHistory()\r\n    const { setPreset } = useContext(AppTransitionContext);\r\n\r\n\r\n    useEffect(() => {\r\n        // TODO remove useEffect after testing\r\n        \r\n      },[]);\r\n    \r\n    function changeColor(){\r\n        toggleTheme(themePrimary)\r\n    }\r\n    async function handleToProjectCreate(){\r\n        try {\r\n            await setPreset(\"cubeToBottom\")\r\n            history.push('/create-project')\r\n            // TODO set Dashboard & Taskboard seperate\r\n            // await setPreset(\"cubeToTop\")\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    async function handleToProjectOverview(project){\r\n        try {\r\n            await assignProject(project);\r\n            // await setPreset(\"newspaper\")\r\n            await setPreset(\"pushTopPullBottom\")\r\n            history.push('/project-overview')\r\n            // TODO \r\n            // 1. set Dashboard & Taskboard seperate\r\n            // 2. implement some load project by ID, and open only if user is shared to this particular project\r\n            // await setPreset(\"cubeToTop\")\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const styleTest = {\r\n        backgroundColor: themePrimary,\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <TopNav />\r\n                <div className=\"main-container\">\r\n                    {loading && <div>Loading Projects</div>}\r\n                    {error && <h1>{error}</h1>}\r\n                    <div className=\"projects\">\r\n                        {!loading && <button onClick={handleToProjectCreate} className=\"project flex-center\">\r\n                            <AiOutlinePlus size=\"4em\"/>\r\n                        </button>}\r\n                        {projects.map((project,i) =>  (\r\n                        <div key={i} className=\"project\" style={{backgroundColor:project.data.color}} onClick={() =>handleToProjectOverview(project)}>\r\n                            <div>{project.data.name}</div>\r\n                            {/* <button > Open </button> */}\r\n                        </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                {/* <div>\r\n                    <button onClick={changeColor} style={styleTest}>ChangeColor</button>\r\n                    <h1>{themePrimary}</h1>\r\n                </div> */}\r\n                <BottomNav />\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import React, { useRef, useState, useContext } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../service/AuthContext'\r\nimport { useDB } from '../service/DatabaseContext'\r\nimport { AiOutlineArrowLeft } from 'react-icons/ai'\r\nimport { AppTransitionContext } from '../service/AppTransitionContext'\r\n\r\nexport default function CreateProject() {\r\n    const { setPreset } = useContext(AppTransitionContext);\r\n\r\n    const projectNameRef = useRef()\r\n    const projectDescriptionRef = useRef()\r\n    const projectColorRef = useRef()\r\n\r\n    const { currentUser } = useAuth()\r\n    const { addProject } = useDB()\r\n\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [color, setColor] = useState('#047AED');\r\n\r\n    const history = useHistory()\r\n    \r\n    async function handleToBack(){\r\n        try {\r\n            // await setPreset(\"fall\")\r\n            await setPreset(\"cubeToLeft\")\r\n            // history.push('/')\r\n            history.goBack()\r\n            // TODO set Dashboard & Taskboard seperate\r\n            // await setPreset(\"cubeToTop\")\r\n        } catch (error) {\r\n        }\r\n\r\n    }\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault()\r\n        if (projectNameRef.current.value.length < 4) {\r\n            return setError('Enter a suitable Projectname')\r\n        }\r\n        setLoading(true)\r\n        setError('')\r\n        //name, description, color, owner\r\n        await addProject(projectNameRef.current.value,projectDescriptionRef.current.value,projectColorRef.current.value,currentUser.email)\r\n        await setPreset(\"cubeToTop\")\r\n        setLoading(false)\r\n        history.push('/')\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <div className=\"navbar-profile-top\">\r\n                    <div className=\"align-placeholder\">\r\n                        <Link className=\"align-left\" onClick={handleToBack}><AiOutlineArrowLeft title={currentUser.email} color=\"red\" size=\"1.5em\"/></Link>\r\n                    </div>\r\n                    <h2>Busybag</h2>\r\n                    <p>Keep track and do all</p>\r\n                </div>\r\n                <div className=\"navbar-placeholder\">\r\n                </div>\r\n                <h2>Create Project</h2>\r\n                <div className=\"createProject\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        {error && <h1>{error}</h1>}\r\n                        <input type=\"text\" placeholder=\"Projectname...\" ref={projectNameRef} placeholder=\"Enter a Project Name\"/>\r\n                        <input type=\"text\" placeholder=\"Projectdescription...\" ref={projectDescriptionRef} placeholder=\"Describe your Project...\"/>\r\n                        <input type=\"color\" value={color} onChange={e => setColor(e.target.value)} ref={projectColorRef} />\r\n                        <strong>Owner:</strong>{currentUser.email}\r\n                        <button type=\"submit\" className=\"signin___button\" disabled={loading}> Create </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}","import React, { useRef, useState, useContext,useEffect } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../service/AuthContext'\r\nimport { useDB } from '../service/DatabaseContext'\r\nimport { useProject } from '../service/ProjectContext'\r\nimport { AiOutlineArrowLeft, AiOutlineUserAdd, AiOutlineUnorderedList } from 'react-icons/ai'\r\nimport { MdDeleteForever } from 'react-icons/md'\r\nimport { AppTransitionContext } from '../service/AppTransitionContext'\r\n\r\nexport default function ModifyProject() {\r\n    const { setPreset } = useContext(AppTransitionContext);\r\n\r\n    const projectNameRef = useRef()\r\n    const projectDescriptionRef = useRef()\r\n    const projectColorRef = useRef()\r\n    const projectOwnerRef = useRef()\r\n\r\n    const { currentUser , updatePassword, updateEmail, logout } = useAuth()\r\n    const { modifyProject, deleteProject } = useDB()\r\n    const { projectOverview} = useProject()\r\n\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const [projectname, setProjectname] = useState('');\r\n    const [projectdescription, setProjectdescription] = useState('');\r\n    const [color, setColor] = useState('');\r\n\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        // TODO remove useEffect after testing\r\n        console.log(projectOverview)\r\n        setProjectname(projectOverview.data.name)\r\n        setProjectdescription(projectOverview.data.description)\r\n        setColor(projectOverview.data.color)\r\n      },[]);\r\n    \r\n    async function handleToBack(){\r\n        try {\r\n            // await setPreset(\"fall\")\r\n            await setPreset(\"moveToBottomFromTop\")\r\n            // history.push('/')\r\n            history.goBack()\r\n            // TODO set Dashboard & Taskboard seperate\r\n            // await setPreset(\"cubeToTop\")\r\n        } catch (error) {\r\n        }\r\n\r\n    }\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault()\r\n        if (projectNameRef.current.value.length < 4) {\r\n            return setError('Enter a suitable Projectname')\r\n        }\r\n        setLoading(true)\r\n        setError('')\r\n        // name, description, color, owner\r\n        // await modifyProject(projectNameRef.current.value,projectDescriptionRef.current.value,projectColorRef.current.value,currentUser.email)\r\n        // console.log(projectNameRef.current.value,projectDescriptionRef.current.value,projectColorRef.current.value,currentUser.email)\r\n        console.log(projectOverview)\r\n        const newProjectDetails = {\r\n            data : {\r\n                name:projectNameRef.current.value,\r\n                description: projectDescriptionRef.current.value,\r\n                color: projectColorRef.current.value,\r\n                owner: projectOwnerRef.current.value,\r\n                shared: projectOverview.data.shared\r\n            },\r\n            id: projectOverview.id\r\n        }\r\n        console.log(newProjectDetails)\r\n        await modifyProject(newProjectDetails)\r\n        await setPreset(\"cubeToTop\")\r\n        setLoading(false)\r\n        // history.goBack()\r\n        history.push('/')\r\n    }\r\n\r\n    async function handleLogout(){\r\n        setError('')\r\n        try {\r\n            await logout()\r\n            history.push('/login')\r\n        } catch (error) {\r\n            setError('Failed to log out')\r\n        }\r\n\r\n    }\r\n\r\n    async function handleToHistoryView(){\r\n        await setPreset(\"moveToLeftFromRight\")\r\n        history.push('/history-view')\r\n    }\r\n\r\n    async function deleteFromProject(){\r\n        if(window.confirm(`Delete everything including ${projectname}?`)){\r\n            deleteProject(projectOverview.id)\r\n            await setPreset(\"fall\")\r\n            history.push('/')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <div className=\"navbar-profile-top\">\r\n                    <div className=\"align-placeholder\">\r\n                        <Link className=\"align-left\" onClick={handleToBack}><AiOutlineArrowLeft title={currentUser.email} color=\"red\" size=\"1.5em\"/></Link>\r\n                    </div>\r\n                </div>\r\n                <h2>Modify:</h2>\r\n                <h3>{projectOverview.data.name}</h3>\r\n                <strong>(Owner:{currentUser.email})</strong>\r\n                <div className=\"container\">\r\n                    <button onClick={handleToHistoryView} className=\"history___button\"><AiOutlineUnorderedList size=\"1em\" /> History</button>\r\n                </div>\r\n                {currentUser.email === projectOverview.data.owner ? <div className=\"container\">\r\n                    <button type=\"submit\" className=\"delete___button\" onClick={()=>deleteFromProject()}> <MdDeleteForever size=\"1em\" /> {projectOverview.data.name} </button>\r\n                </div>\r\n                \r\n                :\"\"}\r\n\r\n                {currentUser.email === projectOverview.data.owner ? \r\n                <div className=\"createProject\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        {error && <h1>{error}</h1>}\r\n                        <label className=\"flex\">Projectname:</label>\r\n                        <input type=\"text\" placeholder=\"Projectname...\" value={projectname} onChange={e => setProjectname(e.target.value)} ref={projectNameRef} placeholder=\"Enter a Project Name\"/>\r\n                        <input type=\"text\" placeholder=\"Projectdescription...\" value={projectdescription} onChange={e => setProjectdescription(e.target.value)} ref={projectDescriptionRef} placeholder=\"Describe your Project...\"/>\r\n                        <input type=\"color\" value={color} onChange={e => setColor(e.target.value)} ref={projectColorRef} />\r\n                        <label className=\"flex\">Owner:</label><input type=\"text\" placeholder=\"Projectowner...\" value={projectOverview.data.owner} readOnly={projectOverview.data.owner} ref={projectOwnerRef} placeholder=\"Owner of the Project...\"/>\r\n                        <button type=\"submit\" className=\"signin___button\" disabled={loading}> Update </button>\r\n                    </form>\r\n                </div>\r\n                : \"\"}\r\n                \r\n                \r\n                <div className=\"container text-center\">\r\n                    <h1><AiOutlineUserAdd size=\"2.5em\" /></h1>\r\n                    <label className=\"flex\">Shared:</label>{projectOverview.data.shared.map((user, index)=> <div className=\"flex\" key={index}><button disabled>x</button>{user}</div>)}\r\n                    <button>+ Add Member</button>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}","import React, {useContext,useState,useEffect,useRef} from 'react'\r\nimport produce from 'immer';\r\n\r\nexport default function Repeatmodal({showModal, setShowRepeatModal, amountTimeframeRef,applyRepeatSettings,typeTimeframeRef,endRepeatFrame,weekDays,setWeekDays}) {\r\n\r\n    const [amountTimeframe, setAmountTimeframe] = useState(\"1\");\r\n    const [showWeekDays, setShowWeekDays] = useState(false);\r\n    const dateFrame = useRef()\r\n    const attemptsFrame = useRef()\r\n    const [radioType,setRadioType] = useState(\"never\");\r\n    \r\n\r\n       \r\n    function addWeekDaySettings(){\r\n        if(typeTimeframeRef.current.value === \"weeks\"){\r\n            setShowWeekDays(true);\r\n        }else{\r\n            setShowWeekDays(false);\r\n        }\r\n    }\r\n\r\n    function handleRadioChange(event) {\r\n        const getType = event.target.value;\r\n        setRadioType(getType)\r\n    }\r\n\r\n    function getRadioSelectedInput(type){\r\n        if(type === \"date\"){\r\n            return dateFrame.current.value;\r\n        }\r\n        if(type === \"attempts\"){\r\n            return attemptsFrame.current.value;\r\n        }\r\n        if(type === \"never\"){\r\n            return \"never\"\r\n        }\r\n    }\r\n\r\n    function handlingSubmit(){\r\n        // console.log(amountTimeframe,typeTimeframeRef.current.value,radioType,getRadioSelectedInput(radioType));\r\n        if (getRadioSelectedInput(radioType) == \"\") {\r\n            endRepeatFrame = {\r\n                type:\"never\",\r\n                value: \"never\",\r\n            };\r\n        }else{\r\n            endRepeatFrame = {\r\n                type:radioType,\r\n                value:getRadioSelectedInput(radioType),\r\n            }\r\n        }\r\n        setShowWeekDays(false);\r\n        applyRepeatSettings(endRepeatFrame);\r\n    }\r\n\r\n    function handlingCancel(){\r\n        setShowWeekDays(false);\r\n        setShowRepeatModal(false);\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            {showModal ? \r\n            <div className=\"repeat-modal flex-center p-1\">\r\n                <div className=\"flex-center flex-d-column m-1 p-1 repeat-content\">\r\n                    <h1>Repeat Settings</h1>\r\n                    <div className=\"flex-center flex-d-row p-1\">\r\n                        <p>every:</p>\r\n                        <input type=\"number\" min=\"1\" value={amountTimeframe} onChange={e => setAmountTimeframe(e.target.value)} ref={amountTimeframeRef} /> \r\n                        <select onChange={addWeekDaySettings} ref={typeTimeframeRef}>\r\n                            <option value=\"days\">Day(s)</option>\r\n                            <option value=\"weeks\">Week</option>\r\n                            <option value=\"months\">Month</option>\r\n                            <option value=\"years\">Year</option>\r\n                        </select>\r\n                    </div>\r\n                    {showWeekDays ? \r\n                    <div className=\"flex flex-d-row flex-j-start\">\r\n                        {weekDays.map((item, i)=>\r\n                            <button key={i} style={item.state == false ? {backgroundColor:\"\"}: {backgroundColor:\"lightblue\"} }\r\n                            onClick={(item)=>{ \r\n                                const newButtons = produce(weekDays, weekdayCopy => {\r\n                                    weekdayCopy[i].state = !weekDays[i].state;\r\n                                })\r\n                                setWeekDays(newButtons);\r\n                            }}\r\n                            >{item.value}</button> \r\n                            )}\r\n                    </div>\r\n                    : \"\"}\r\n                    <div>\r\n                        <h1>Ends:</h1>\r\n                        <div className=\"flex flex-d-column flex-j-start\">\r\n                            <form>\r\n                            <p><input type=\"radio\" name=\"ending\" value=\"never\" defaultChecked onChange={handleRadioChange}/>Never</p>\r\n                            <p><input type=\"radio\" name=\"ending\" value=\"date\" onChange={handleRadioChange}/>At: <input type=\"date\" ref={dateFrame}/></p>\r\n                            <p><input type=\"radio\" name=\"ending\" value=\"attempts\" onChange={handleRadioChange}/>After: <input type=\"number\" min=\"1\" ref={attemptsFrame}/> attempt(s)</p>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                    <button onClick={() => handlingCancel()}>Cancel</button>\r\n                    <button onClick={handlingSubmit}>Apply</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"repeat-background-modal\" onClick={() => handlingSubmit()}>\r\n                    \r\n                </div>\r\n            </div> \r\n            : \"\"}\r\n        </>\r\n    )\r\n}\r\n","import React, { useRef, useState, useContext, useEffect } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../service/AuthContext'\r\nimport { useDB } from '../service/DatabaseContext'\r\nimport { useProject } from '../service/ProjectContext'\r\nimport { AiOutlineArrowLeft } from 'react-icons/ai'\r\nimport { AppTransitionContext } from '../service/AppTransitionContext'\r\nimport Repeatmodal from '../components/Repeatmodal';\r\n\r\nexport default function CreateTask() {\r\n    const { setPreset } = useContext(AppTransitionContext);\r\n\r\n    const taskNameRef = useRef()\r\n    const taskDescriptionRef = useRef()\r\n    const projectRef = useRef()\r\n\r\n    \r\n\r\n    const { currentUser } = useAuth()\r\n    const { projects, addTaskToProject } = useDB()\r\n    const { projectId } = useProject()\r\n\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [projectInit, setProjectInit] = useState(projectId)\r\n    const [showRepeatmodal, setShowRepeatModal] = useState(false);\r\n\r\n    const history = useHistory()\r\n    \r\n    async function handleToDashboard(){\r\n        try {\r\n            // await setPreset(\"fall\")\r\n            await setPreset(\"cubeToLeft\")\r\n            history.push('/')\r\n            // TODO set Dashboard & Taskboard seperate\r\n            // await setPreset(\"cubeToTop\")\r\n        } catch (error) {\r\n        }\r\n\r\n    }\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault()\r\n        if (taskNameRef.current.value.length < 4) {\r\n            return setError('Enter a suitable Taskname')\r\n        }\r\n        setLoading(true)\r\n        setError('')\r\n        // console.log(projectRef.current.value,taskNameRef.current.value,taskDescriptionRef.current.value,currentUser.email)\r\n        addTaskToProject(projectRef.current.value,taskNameRef.current.value,taskDescriptionRef.current.value,currentUser.email)\r\n        setLoading(false)\r\n        history.goBack()\r\n    }\r\n\r\n    function openRepeatModal(){\r\n        setShowRepeatModal(!showRepeatmodal);\r\n    }\r\n\r\n\r\n    \r\n    const amountTimeframeRef = useRef();\r\n    const typeTimeframeRef = useRef();\r\n    const endTimeframeRef = useRef();\r\n    const [repeatFrame, setRepeatFrame] = useState(\"Once\");\r\n    var endRepeatFrame = {\r\n        type:\"never\",\r\n        value: \"never\",\r\n    };\r\n    const [weekDays, setWeekDays] = useState([\r\n        {value: \"Mo\", state:false},\r\n        {value: \"Tu\", state:false},\r\n        {value: \"We\", state:false},\r\n        {value: \"Th\", state:false},\r\n        {value: \"Fr\", state:false},\r\n        {value: \"Sa\", state:false},\r\n        {value: \"Su\", state:false},\r\n    ])\r\n    function applyRepeatSettings(endRepeatFrame){\r\n        // console.log(amountTimeframeRef.current.value);\r\n        let timeFrame = typeTimeframeRef.current.value;\r\n        let weekdays = \"\";\r\n        if (timeFrame === \"weeks\") {\r\n            weekdays +=\" on\";\r\n            weekDays.map((item,i) => {\r\n                if(item.state){\r\n                    weekdays +=` ${item.value}`;\r\n                } \r\n            })\r\n        }\r\n        if(amountTimeframeRef.current.value === \"1\"){\r\n            timeFrame = timeFrame.substring(0, timeFrame.length - 1);\r\n        }\r\n        console.log(`Amount Repeat:${amountTimeframeRef.current.value}(every...)\\nRepeat Type: ${typeTimeframeRef.current.value}\\nEnding Type: ${endRepeatFrame.type}\\nEnding Timeframe: ${endRepeatFrame.value}`)\r\n        if(endRepeatFrame.type === \"attempts\" && endRepeatFrame.value === \"1\"){\r\n            setRepeatFrame(\"Once\");\r\n        }else{\r\n            setRepeatFrame(\r\n                `every \r\n                ${amountTimeframeRef.current.value === \"1\" ? ` ${timeFrame}`: amountTimeframeRef.current.value + ` ${timeFrame}` }\r\n                ${weekdays}\r\n                ${endRepeatFrame.type === \"date\" ? `until ${endRepeatFrame.value}` : \"\"}\r\n                ${endRepeatFrame.type === \"attempts\" ? ` ${endRepeatFrame.value}` + ' times' : \"\"}\r\n                 `);\r\n        }\r\n        setShowRepeatModal(false);\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <Repeatmodal showModal={showRepeatmodal} setShowRepeatModal={setShowRepeatModal} amountTimeframeRef={amountTimeframeRef} typeTimeframeRef={typeTimeframeRef} endRepeatFrame={endRepeatFrame} applyRepeatSettings={applyRepeatSettings} weekDays={weekDays} setWeekDays={setWeekDays}/>\r\n            <div className=\"container text-center\">\r\n                <div className=\"navbar-profile-top\">\r\n                    <div className=\"align-placeholder\">\r\n                        <Link className=\"align-left\" onClick={handleToDashboard}><AiOutlineArrowLeft title={currentUser.email} color=\"red\" size=\"1.5em\"/></Link>\r\n                    </div>\r\n                    <h2>Busybag</h2>\r\n                    <p>Keep track and do all</p>\r\n                </div>\r\n                <div className=\"navbar-placeholder\">\r\n                </div>\r\n                <h2>Create Task</h2>\r\n                <div className=\"createProject\">\r\n                    <div>\r\n                        {error && <h1>{error}</h1>}\r\n                        <input type=\"text\" placeholder=\"Projectname...\" ref={taskNameRef} placeholder=\"Enter a Task Name\"/>\r\n                        <input type=\"text\" placeholder=\"Projectdescription...\" ref={taskDescriptionRef} placeholder=\"Describe your taks...\"/>\r\n                        <div className=\"text-right\">\r\n                            <div>\r\n                                Recurring? <button onClick={openRepeatModal}>{repeatFrame}</button>\r\n                            </div>\r\n                            <div>\r\n                                Deadline? <button disabled>...</button>\r\n                            </div>\r\n                            <div>\r\n                                Effort? <button disabled>...</button>\r\n                            </div>\r\n                            <div>\r\n                                Assignee? <button disabled>...</button>\r\n                            </div>\r\n                            <div>\r\n                                <select ref={projectRef} value={projectInit} onChange={(e) => setProjectInit(e.target.value)}>\r\n                                {projects.map((item,i) =>  (\r\n                                    <option key={i} value={item.id}>{item.data.name}</option>\r\n                                    ))}\r\n                                    </select>\r\n                            </div>\r\n                        </div>\r\n                        <strong>Owner:</strong>{currentUser.email}\r\n                        <button type=\"submit\" className=\"signin___button\" disabled={loading} onClick={handleSubmit}> Create </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}","import React, { useRef, useState, useContext, useEffect } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../service/AuthContext'\r\nimport { useDB } from '../service/DatabaseContext'\r\nimport { useProject } from '../service/ProjectContext'\r\nimport { AiOutlineArrowLeft, AiFillEdit } from 'react-icons/ai'\r\nimport { BiShareAlt } from 'react-icons/bi'\r\nimport { AppTransitionContext } from '../service/AppTransitionContext'\r\nimport BottomNav from '../components/BottomNav';\r\n\r\nexport default function ProjectOverview() {\r\n    const { setPreset } = useContext(AppTransitionContext);\r\n\r\n    const projectNameRef = useRef()\r\n    const projectDescriptionRef = useRef()\r\n    const projectColorRef = useRef()\r\n\r\n    const { currentUser , updatePassword, updateEmail, logout } = useAuth()\r\n    const { addProject , shareProjectWithUser, addHistoryEntryToProject,getCurrentProjectData } = useDB()\r\n    const { projectId, projectName, projectColor, tasks, deleteTaskFromProject, projectOwner, projectOverview , assignProject} = useProject()\r\n\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [color, setColor] = useState('#047AED');\r\n\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        // TODO remove useEffect after testing\r\n        console.log(projectOverview)\r\n      },[]);\r\n    \r\n    async function handleToDashboard(){\r\n        try {\r\n            // await setPreset(\"fall\")\r\n            // await setPreset(\"newspaper\")\r\n            await setPreset(\"pushBottomPullTop\")\r\n            history.push('/')\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n    async function handleToModifyProject(){\r\n        await setPreset(\"fadeFromBottom\")\r\n        history.push('/modify-project')\r\n    }\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault()\r\n        if (projectNameRef.current.value.length < 4) {\r\n            return setError('Enter a suitable Projectname')\r\n        }\r\n        setLoading(true)\r\n        setError('')\r\n        console.log(projectNameRef.current.value,projectDescriptionRef.current.value,projectColorRef.current.value)\r\n        //name, description, color, owner\r\n        await addProject(projectNameRef.current.value,projectDescriptionRef.current.value,projectColorRef.current.value,currentUser.email)\r\n        setLoading(false)\r\n        await setPreset(\"cubeToTop\")\r\n        history.push('/')\r\n    }\r\n\r\n    async function handleSharingProject(){\r\n        var email = window.prompt(\"Which email you wanna share?\")\r\n        if(email){\r\n            const projectInfo = await shareProjectWithUser(email,projectId)\r\n            const newProjectInfo = await getCurrentProjectData(projectId);\r\n            const newProjectData = {\r\n                id: projectId,\r\n                data: newProjectInfo\r\n            }\r\n            await assignProject(newProjectData);\r\n            }\r\n    }\r\n\r\n    async function handleCompleteTask(projectId,itemId, taskName){\r\n        await addHistoryEntryToProject(currentUser.email,projectId, taskName)\r\n        await deleteTaskFromProject(projectId,itemId)\r\n        const newProjectInfo = await getCurrentProjectData(projectId);\r\n            const newProjectData = {\r\n                id: projectId,\r\n                data: newProjectInfo\r\n            }\r\n        await assignProject(newProjectData);\r\n    }\r\n\r\n    async function handleTaskMenu(taskName){\r\n        console.log(window.prompt(`Who you want to assign this ${taskName} Task?`));\r\n    }\r\n\r\n    async function handleLogout(){\r\n        setError('')\r\n        try {\r\n            await logout()\r\n            history.push('/login')\r\n        } catch (error) {\r\n            setError('Failed to log out')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <div className=\"navbar-profile-top\">\r\n                    <div className=\"align-placeholder\">\r\n                        <Link className=\"align-left\" onClick={handleToDashboard}><AiOutlineArrowLeft title={currentUser.email} color=\"red\" size=\"1.5em\"/></Link>\r\n                    </div>\r\n                     <div className=\"align-right\">\r\n                     {currentUser.email === projectOwner ?\r\n                        <Link>\r\n                            <BiShareAlt onClick={handleSharingProject} title={currentUser.email} color=\"red\" size=\"1.5em\"/>\r\n                        </Link>\r\n                        : \"\"}\r\n                        <Link>\r\n                            <AiFillEdit title={currentUser.email} onClick={handleToModifyProject} color=\"red\" size=\"1.5em\"/>\r\n                        </Link>\r\n                    </div> \r\n                </div>\r\n                {/* <h5>Project Overview</h5> */}\r\n                <h2>{projectName}</h2>\r\n                <p className=\"separator\" style={{backgroundColor:projectColor}}>&nbsp;</p>\r\n                <ul className=\"task-listing\">\r\n                    {tasks.map((item,i) =>  (\r\n                            <li key={i} className=\"task-list\" >\r\n                                <button onClick={() => handleCompleteTask(projectId,item.id,item.data.name)}>done</button><button onClick={() => handleTaskMenu(item.data.name)}>assign</button> <p onClick={() => window.prompt(`Name: ${item.data.name} \\nDescription: ${item.data.description}`)}>{item.data.name}</p>\r\n                                {/* <li>{item.data.name}|{item.id}</li> */}\r\n                            </li>\r\n                            ))}\r\n                </ul>\r\n                <BottomNav />\r\n            </div>\r\n        </section>\r\n    )\r\n}","import React, { useRef, useState, useContext,useEffect } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../service/AuthContext'\r\nimport { useDB } from '../service/DatabaseContext'\r\nimport { useProject } from '../service/ProjectContext'\r\nimport { AiOutlineArrowLeft, AiOutlinePlusCircle } from 'react-icons/ai'\r\nimport { AppTransitionContext } from '../service/AppTransitionContext'\r\n\r\nexport default function HistoryView() {\r\n    const { setPreset } = useContext(AppTransitionContext);\r\n    const history = useHistory()\r\n    const { projectOverview} = useProject()\r\n    const { projects } = useDB()\r\n    const { currentUser } = useAuth()\r\n\r\n    useEffect(() => {\r\n        // TODO remove useEffect after testing\r\n        console.log(projectOverview)\r\n        console.log(projectOverview.data.history)\r\n        projectOverview.data.history.map((item, index) => { console.log(item.task)})\r\n      },[]);\r\n    \r\n    async function handleToBack(){\r\n        try {\r\n            // await setPreset(\"fall\")\r\n            await setPreset(\"moveToRightFromLeft\")\r\n            //history.push('/modify-project')\r\n            history.goBack()\r\n            // TODO set Dashboard & Taskboard seperate\r\n            // await setPreset(\"cubeToTop\")\r\n        } catch (error) {\r\n            console.log(\"ERROR HANDLETOBACK:\")\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"text-center\">\r\n                <div className=\"navbar-profile-top\">\r\n                <Link className=\"align-left\" onClick={handleToBack}><AiOutlineArrowLeft title={currentUser.email} color=\"red\" size=\"1.5em\"/></Link>\r\n                    <h2>{projectOverview.data.name}</h2>\r\n                    <p>History:</p>\r\n                </div>\r\n                <div className=\"navbar-placeholder\">\r\n                </div>\r\n                <ul className=\"history-list text-left\">\r\n                    {projectOverview.data.history.reverse().map((item, index)=> <li key={index}>\r\n                            <div className=\"flex-center-start\">\r\n                                <div><AiOutlinePlusCircle size=\"2em\"/></div>\r\n                                <div>\r\n                                    <p>{item.datetime}</p>\r\n                                    <p>{item.email}</p>\r\n                                    <p>{item.task}</p>\r\n                                </div>\r\n                            </div>\r\n                        </li>)}\r\n                </ul>\r\n                \r\n            </div>\r\n        </section>\r\n    )\r\n}","import React, {useState, useRef} from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport {useAuth} from '../service/AuthContext'\r\nimport { useProject } from '../service/ProjectContext'\r\nimport { AiFillSetting } from 'react-icons/ai'\r\nimport BottomNav from '../components/BottomNav'\r\nimport TopNav from '../components/TopNav'\r\n\r\n\r\nexport default function Taskboard() {\r\n    const [error, setError] = useState('')\r\n    const {currentUser} = useAuth()\r\n    const { userTasks } = useProject()\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <TopNav />\r\n                {error && <h1>{error}</h1>}\r\n                <p>Assigned Task:</p>\r\n                <ul className=\"task-listing\">\r\n                {\r\n                    userTasks.map(\r\n                        (task,i) => task.map( \r\n                            (item,j) => <li key={j} className=\"task-list\" ><button >done</button><p>{item.data.name}</p></li>\r\n                        )\r\n                    )\r\n                }\r\n                </ul>\r\n\r\n                \r\n               \r\n                <BottomNav />\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import React, { useRef, useState, useContext } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../service/AuthContext'\r\nimport { AiOutlineArrowLeft } from 'react-icons/ai'\r\nimport { AppTransitionContext } from '../service/AppTransitionContext'\r\n\r\nexport default function UpdateProfile() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const { currentUser , updatePassword, updateEmail, logout } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n    const { setPreset } = useContext(AppTransitionContext);\r\n    async function handleToDashboard(){\r\n        try {\r\n            await setPreset(\"moveToRightFromLeft\")\r\n            history.push('/')\r\n            // TODO set Dashboard & Taskboard seperate\r\n            // await setPreset(\"cubeToTop\")\r\n        } catch (error) {\r\n        }\r\n\r\n    }\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault()\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        }\r\n\r\n        const promises = []\r\n        setLoading(true)\r\n        setError('')\r\n        if(emailRef.current.value !== currentUser.email){\r\n            promises.push(updateEmail(emailRef.current.value))\r\n        }\r\n        if(passwordRef.current.value){\r\n            promises.push(updatePassword(passwordRef.current.value))\r\n        }\r\n        Promise.all(promises).then(() => {\r\n            history.push('/')\r\n        }).catch((error) => {\r\n            setError('Failed to update account\\n'+error)\r\n            console.log(error)\r\n        }).finally( () => {\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    async function handleLogout(){\r\n        setError('')\r\n        try {\r\n            await logout()\r\n            history.push('/login')\r\n        } catch (error) {\r\n            setError('Failed to log out')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <div className=\"navbar-profile-top\">\r\n                    <div className=\"align-placeholder\">\r\n                        <Link className=\"align-left\" onClick={handleToDashboard}><AiOutlineArrowLeft title={currentUser.email} color=\"red\" size=\"1.5em\"/></Link>\r\n                    </div>\r\n                    <h2>Busybag</h2>\r\n                    <p>Keep track and do all</p>\r\n                    <strong>Email:</strong>{currentUser.email}\r\n                </div>\r\n                <div className=\"navbar-placeholder\">\r\n                </div>\r\n                <button onClick={handleLogout} >Logout</button>\r\n                <h2>---</h2>\r\n                <h2>Update</h2>\r\n                <div className=\"card\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input type=\"email\" placeholder=\"Email\" ref={emailRef} defaultValue={currentUser.email}/>\r\n                        <input type=\"password\" placeholder=\"Password\"ref={passwordRef} placeholder=\"Leave blank to keep the same\"/>\r\n                        <input type=\"password\" placeholder=\"Password Confirm\" ref={passwordConfirmRef} placeholder=\"Leave blank to keep the same\"/>\r\n                        {error && <h1>{error}</h1>}\r\n                        <button type=\"submit\" className=\"signin___button\" disabled={loading}> Save </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}","import React, { useRef, useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Logo from '../components/Logo';\r\nimport { useAuth } from '../service/AuthContext'\r\nimport PWAPrompt from 'react-ios-pwa-prompt'\r\n\r\nexport default function Login() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const {login } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault()\r\n        \r\n        try{\r\n            setError('')\r\n            setLoading(true)\r\n            await login(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/\")\r\n        }catch{\r\n            setError('Failed to login via Acccount')\r\n        }\r\n        setLoading(true)\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <PWAPrompt />\r\n            <div className=\"container text-center\">\r\n                <h2>Busybag</h2>\r\n                <Logo />\r\n                <p>Keep track and do all</p>\r\n                <div className=\"card\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input type=\"email\" placeholder=\"Email\" ref={emailRef}/>\r\n                        <input type=\"password\" placeholder=\"Password\"ref={passwordRef}/>\r\n                        {error && <h1>{error}</h1>}\r\n                        <Link to=\"/forgot-password\" className=\"text-right\">Forgot Password?</Link>\r\n                        <button type=\"submit\" className=\"signin___button\" disabled={loading}> Login </button>\r\n                    </form>\r\n                </div>\r\n                <div>\r\n                    Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport {useAuth} from '../service/AuthContext'\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n    const { currentUser } = useAuth()\r\n  \r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props => {\r\n          return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n        }}\r\n      ></Route>\r\n    )\r\n  }\r\n","import React, { useRef, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport Logo from '../components/Logo';\r\nimport { useAuth } from '../service/AuthContext'\r\n\r\nexport default function ForgotPassword() {\r\n    const emailRef = useRef()\r\n    const { resetPassword } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [message, setMessage] = useState('')\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault()\r\n        \r\n        try{\r\n            setMessage('')\r\n            setError('')\r\n            setLoading(true)\r\n            await resetPassword(emailRef.current.value)\r\n            setMessage('Check your inbox for further instructions')\r\n        }catch{\r\n            setError('Failed to reset Password')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <h2>Busybag</h2>\r\n                <Logo />\r\n                <p>Keep track and do all</p>\r\n                <div className=\"card\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input type=\"email\" placeholder=\"Email\" ref={emailRef}/>\r\n                        {error && <h1>{error}</h1>}\r\n                        {message && <h1>{message}</h1>}\r\n                        <button type=\"submit\" className=\"signin___button\" disabled={loading}> Reset Password </button>  \r\n                    </form>\r\n                </div>\r\n                <div>\r\n                    Back to Login? <Link to=\"/login\">Login</Link>\r\n                </div>\r\n                <div>\r\n                    Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}","import '../Main.css';\nimport { useContext } from \"react\";\nimport Signup from '../pages/Signup';\nimport { AuthProvider } from '../service/AuthContext';\nimport { DatabaseProvider } from '../service/DatabaseContext';\nimport { ProjectProvider } from '../service/ProjectContext';\nimport { ThemeProvider } from '../service/ThemeContext';\n// import { BrowserRouter as Router,Switch,Route} from 'react-router-dom'\nimport { HashRouter as Router,Switch,Route} from 'react-router-dom'\nimport Dashboard from '../pages/Dashboard'\nimport CreateProject from '../pages/CreateProject'\nimport ModifyProject from '../pages/ModifyProject';\nimport CreateTask from '../pages/CreateTask'\nimport ProjectOverview from '../pages/ProjectOverview'\nimport HistoryView from '../pages/HistoryView'\nimport Taskboard from '../pages/Taskboard'\nimport UpdateProfile from '../pages/UpdateProfile'\nimport Login from '../pages/Login'\nimport PrivateRoute from './PrivateRoute'\nimport ForgotPassword from '../pages/ForgotPassword';\n\n\nimport { AppTransitionContext } from '../service/AppTransitionContext'\nimport { PageTransition } from '@steveeeie/react-page-transition';\n// https://github.com/Steveeeie/react-page-transition\n\nfunction App() {\n  const { preset, enterAnimation , exitAnimation } = useContext(AppTransitionContext);\n  return (\n\n    <Router>\n        <AuthProvider>\n        <ThemeProvider>\n        <DatabaseProvider>\n        <ProjectProvider>\n        <Route\n            render={({ location }) => {return (\n                <PageTransition\n                  preset={preset}\n                  transitionKey={location.pathname}\n                  enterAnimation={enterAnimation}\n                  exitAnimation={exitAnimation}\n                >\n                <Switch location={location}>\n                \n                    <PrivateRoute exact path=\"/\"  component={Dashboard} />\n                    <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n                    <PrivateRoute path=\"/task-board\" component={Taskboard} />\n                    <PrivateRoute path=\"/create-project\" component={CreateProject} />\n                    <PrivateRoute path=\"/modify-project\" component={ModifyProject} />\n                    <PrivateRoute path=\"/create-task\" component={CreateTask} />\n                    <PrivateRoute path=\"/project-overview\" component={ProjectOverview} />\n                    <PrivateRoute path=\"/history-view\" component={HistoryView} />\n                    \n                  <Route path=\"/signup\" component={Signup} />\n                  <Route path=\"/login\" component={Login} />\n                  <Route path=\"/forgot-password\" component={ForgotPassword} />\n                </Switch>\n              </PageTransition>\n              );\n            }}\n          />\n          </ProjectProvider>\n          </DatabaseProvider>\n          </ThemeProvider>\n        </AuthProvider>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    window.location.hostname === 'https://crisscrosscrass.github.io/busybag/#' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://cra.link/PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                \"tabs for this page are closed. See https://cra.link/PWA.\"\n                            );\n                            alert(\"This App has been updated, please close and restart\");\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n            headers: { 'Service-Worker': 'script' },\n        })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Main.css';\nimport App from './components/App';\nimport { AppTransitionProvider } from './service/AppTransitionContext'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <AppTransitionProvider>\n    <App />\n    </AppTransitionProvider>\n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}