{"version":3,"sources":["images/unnamed.png","components/Logo.js","firebase.js","service/AuthContext.js","pages/Signup.js","service/DatabaseContext.js","service/ThemeContext.js","components/BottomNav.js","service/AppTransitionContext.js","components/TopNav.js","pages/Dashboard.js","pages/Taskboard.js","pages/UpdateProfile.js","pages/Login.js","components/PrivateRoute.js","pages/ForgotPassword.js","components/App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Logo","src","logo","alt","app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","GoogleAuthProvider","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","logout","signOut","signup","createUserWithEmailAndPassword","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","e","a","preventDefault","current","push","className","onSubmit","type","placeholder","ref","disabled","to","DatabaseContext","DatabaseProvider","projects","setProjects","collection","where","onSnapshot","snapshop","docs","map","doc","id","data","loadingProjects","addProject","project","add","name","then","docRef","catch","console","deleteProject","projectid","snapshot","forEach","delete","addTaskToProject","task","repeat","ThemeContext","ThemeProvider","themePrimary","setThemePrimary","toggleTheme","BottomNav","size","AppTransitionContext","AppTransitionProvider","preset","setPreset","enterAnimation","setEnterAnimation","exitAnimation","setExitAnimation","TopNav","onClick","title","color","Dashboard","nameRef","styleTest","backgroundColor","log","style","item","i","projectname","window","confirm","Taskboard","UpdateProfile","promises","Promise","all","finally","defaultValue","Login","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","App","location","transitionKey","pathname","exact","path","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.53fbaadf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/unnamed.ea125fe9.png\";","import React from 'react'\r\nimport logo from '../images/unnamed.png';\r\n\r\nexport default function Logo() {\r\n    return (\r\n        <div>\r\n            <img src={logo} alt=\"Logo\" />\r\n        </div>\r\n    )\r\n}\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\n\r\nconst app = firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n    // apiKey: \"AIzaSyAPyppmyjBKQjIS4o1nRk6N-UxkW54rFPA\",\r\n    // authDomain: \"busybag-f27f9.firebaseapp.com\",\r\n    // projectId: \"busybag-f27f9\",\r\n    // storageBucket: \"busybag-f27f9.appspot.com\",\r\n    // messagingSenderId: \"622475419405\",\r\n    // appId: \"1:622475419405:web:d8022f00e74e3ede131a44\"\r\n})\r\n\r\nexport const auth = app.auth()\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\nexport const firestore = app.firestore()\r\nexport default app","import React, { useContext, useState , useEffect } from 'react'\r\nimport {auth,provider} from '../firebase'\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth(){\r\n    return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider( {children} ) {\r\n    const [currentUser, setCurrentUser] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    function signup(email, password){\r\n        return auth.createUserWithEmailAndPassword(email,password)\r\n    }\r\n\r\n    function login(email,password){\r\n        return auth.signInWithEmailAndPassword(email,password)\r\n    }\r\n\r\n    function loginWithGoogle(){\r\n        return auth.signInWithPopup(provider)\r\n    }\r\n\r\n    function logout(){\r\n        return auth.signOut()\r\n    }\r\n\r\n    function resetPassword(email){\r\n        return auth.sendPasswordResetEmail(email)\r\n    }\r\n\r\n    function updateEmail(email){\r\n        return currentUser.updateEmail(email)\r\n    }\r\n\r\n    function updatePassword(password){\r\n        return currentUser.updatePassword(password)\r\n    }\r\n\r\n    useEffect(() => {\r\n        // auth.onAuthStateChanged(function(user) {\r\n        //     if (user) {\r\n        //       // User is signed in.\r\n        //       console.log(user)\r\n        //       console.log(user.displayName)\r\n        //       console.log(user.email)\r\n        //       console.log(user.photoURL)\r\n        //       console.log(user.emailVerified)\r\n        //       console.log(user.uid)\r\n        //     } else {\r\n        //       // No user is signed in.\r\n        //     }\r\n        //   });\r\n\r\n          \r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user)\r\n            setLoading(false)\r\n        })\r\n\r\n        return unsubscribe\r\n    },[]) \r\n\r\n    const value = {\r\n        currentUser,\r\n        login,\r\n        logout,\r\n        signup,\r\n        resetPassword,\r\n        updateEmail,\r\n        updatePassword\r\n    }\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Logo from '../components/Logo';\r\nimport { useAuth } from '../service/AuthContext'\r\n\r\nexport default function Signup() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const {signup } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault()\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        }\r\n        try{\r\n            setError('')\r\n            setLoading(true)\r\n            await signup(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/\")\r\n        }catch{\r\n            setError('Failed to create an Acccount')\r\n        }\r\n        setLoading(true)\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <h2>Busybag</h2>\r\n                <Logo/>\r\n                <p>Keep track and do all</p>\r\n                <div className=\"card\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input type=\"email\" placeholder=\"Email\" ref={emailRef}/>\r\n                        <input type=\"password\" placeholder=\"Password\"ref={passwordRef}/>\r\n                        <input type=\"password\" placeholder=\"Password Confirm\" ref={passwordConfirmRef}/>\r\n                        {error && <h1>{error}</h1>}\r\n                        <button type=\"submit\" className=\"signin___button\" disabled={loading}> Sign up </button>\r\n                    </form>\r\n                </div>\r\n                <div>\r\n                    Already have an account? <Link to=\"/login\">Login</Link>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport {firestore} from '../firebase'\r\nimport {auth} from '../firebase'\r\n\r\nconst DatabaseContext = React.createContext()\r\n\r\nexport function useDB(){\r\n    return useContext(DatabaseContext)\r\n}\r\n\r\nexport function DatabaseProvider( {children} ) {\r\n    const [projects,setProjects] = useState([]);\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    //init values\r\n    useEffect(()=>{\r\n\r\n        auth.onAuthStateChanged(function(user) {\r\n            if (user) {\r\n              // User is signed in.\r\n              firestore.collection(\"projects\").where(\"user\", \"==\", user.email).onSnapshot(snapshop => setProjects(\r\n                snapshop.docs.map(\r\n                    doc=>({id:doc.id,data:doc.data()})\r\n                    )\r\n                )\r\n            )\r\n            setLoading(false)\r\n            }\r\n          });\r\n\r\n\r\n        let isMounted = true;\r\n        // firestore.collection(\"projects\").where(\"user\", \"==\", \"fovem84447@nonicamy.com\").onSnapshot(snapshop => setProjects(\r\n        //     snapshop.docs.map(\r\n        //         doc=>({id:doc.id,data:doc.data()})\r\n        //         )\r\n        //     )\r\n        // )\r\n        // setLoading(false)\r\n        return () => { isMounted = false };\r\n    },[])\r\n\r\n    //methods\r\n    function loadingProjects(user){\r\n        firestore.collection(\"projects\").where(\"user\", \"==\", \"fovem84447@nonicamy.com\").onSnapshot(snapshop => setProjects(\r\n            snapshop.docs.map(\r\n                doc=>({id:doc.id,data:doc.data()})\r\n                )\r\n            )\r\n        )\r\n        setLoading(false)\r\n    }\r\n\r\n    function addProject(project,user){\r\n        firestore.collection(\"projects\").add({\r\n            name:project,\r\n            user: user,\r\n        }).then(docRef => {\r\n            return docRef.id            \r\n        })\r\n        .catch(error => console.error(\"Error adding document: \", error))\r\n    }\r\n\r\n    function addTaskToProject(projectId,task,repeat){\r\n        firestore.collection(projectId).add({\r\n            name:task,\r\n            user:repeat,\r\n        })\r\n    }\r\n\r\n    function deleteProject(projectid){\r\n        const ref = firestore.collection(projectid)\r\n        ref.onSnapshot((snapshot) => {\r\n            snapshot.docs.forEach((doc) => {\r\n            ref.doc(doc.id).delete()\r\n            })\r\n        })\r\n        firestore.collection(projectid).doc(projectid).delete()\r\n        firestore.collection(\"projects\").doc(projectid).delete();\r\n    }\r\n\r\n    // https://github.com/oghur/React-todo-App-with-connection-to-Firebase/blob/main/src/App.js\r\n    // function deletedata(value){\r\n    //     database.collection(\"messages\").doc(value).delete();\r\n    // }\r\n     \r\n    // function Editdata(id,value){\r\n    //     database.collection(\"messages\").doc(id).set({\r\n    //       message: value,\r\n    //     },{merge:true})\r\n    // }\r\n\r\n    const value = {\r\n        projects,\r\n        loadingProjects,\r\n        addProject,\r\n        deleteProject,\r\n        addTaskToProject\r\n    }\r\n    return (\r\n        <DatabaseContext.Provider value={value}>\r\n            {!loading && children}\r\n        </DatabaseContext.Provider>\r\n    )\r\n}\r\n","import React, { useContext, useState, useEffect } from 'react'\r\n\r\nexport const ThemeContext = React.createContext()\r\n\r\nexport function useTheme(){\r\n    return useContext(ThemeContext)\r\n}\r\n\r\nexport function ThemeProvider( {children} ) {\r\n    const [themePrimary, setThemePrimary] = useState('')\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    function toggleTheme(themePrimary){\r\n        themePrimary === '#047AED' ? setThemePrimary('#E13B64') : setThemePrimary('#047AED')\r\n        return themePrimary\r\n    }\r\n\r\n    useEffect(() => {\r\n        setThemePrimary('#E13B64')\r\n        setLoading(false)\r\n    },[]) \r\n\r\n\r\n    const value = {\r\n        themePrimary,\r\n        toggleTheme\r\n    }\r\n\r\n    return (\r\n        <ThemeContext.Provider value={value}>\r\n            {!loading && children}\r\n        </ThemeContext.Provider>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { AiOutlinePlusCircle } from 'react-icons/ai'\r\nimport { BsListTask } from 'react-icons/bs'\r\nimport { RiDashboardFill } from 'react-icons/ri'\r\n\r\nexport default function BottomNav() {\r\n    return (\r\n        <div className=\"navbar-bottom\">\r\n                <Link to=\"/\"><RiDashboardFill size=\"2em\" /></Link>\r\n                <Link to=\"/\"><AiOutlinePlusCircle size=\"2em\"/></Link>\r\n                <Link to=\"/task-board\" ><BsListTask size=\"2em\"/></Link>\r\n                </div>\r\n    )\r\n}\r\n","import React, { createContext, useState } from \"react\";\r\n\r\nexport const AppTransitionContext = createContext();\r\n\r\nexport function AppTransitionProvider({ children }) {\r\n  const [preset, setPreset] = useState(\"cubeToLeft\");\r\n  const [enterAnimation, setEnterAnimation] = useState(\"\");\r\n  const [exitAnimation, setExitAnimation] = useState(\"\");\r\n\r\n  return (\r\n    <AppTransitionContext.Provider\r\n      value={{\r\n        preset,\r\n        enterAnimation,\r\n        exitAnimation,\r\n        setPreset,\r\n        setEnterAnimation,\r\n        setExitAnimation\r\n      }}\r\n    >\r\n      {children}\r\n    </AppTransitionContext.Provider>\r\n  );\r\n}\r\n","import React, {useContext} from 'react'\r\nimport { Link, useHistory} from 'react-router-dom'\r\nimport {useAuth} from '../service/AuthContext'\r\nimport { AiFillSetting } from 'react-icons/ai'\r\nimport { AppTransitionContext } from '../service/AppTransitionContext'\r\n\r\nexport default function TopNav() {\r\n    const { currentUser } = useAuth()\r\n    const history = useHistory()\r\n    const { setPreset } = useContext(AppTransitionContext);\r\n    async function handleToProfile(){\r\n        try {\r\n            await setPreset(\"moveToLeftFromRight\")\r\n            history.push('/update-profile')\r\n        } catch (error) {\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"navbar-top\">\r\n            <Link to=\"/#\" className=\"align-right\" onClick={handleToProfile}>\r\n                        <AiFillSetting title={currentUser.email} color=\"red\" size=\"1.5em\"/>\r\n                    </Link>\r\n                <div className=\"align-placeholder\">\r\n                </div>\r\n                <h2>Busybag</h2>\r\n                <p>Keep track and do all</p>\r\n                <strong>Email:</strong>{currentUser.email}\r\n            </div>\r\n            <div className=\"navbar-placeholder\">\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useRef} from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport {useAuth} from '../service/AuthContext'\r\nimport {useTheme} from '../service/ThemeContext'\r\nimport {useDB} from '../service/DatabaseContext'\r\nimport { AiFillSetting } from 'react-icons/ai'\r\nimport Logo from '../components/Logo'\r\nimport BottomNav from '../components/BottomNav'\r\nimport TopNav from '../components/TopNav'\r\nimport { AiOutlinePlus } from 'react-icons/ai'\r\n\r\n\r\n\r\nexport default function Dashboard() {\r\n    const [error, setError] = useState('')\r\n    const {currentUser} = useAuth()\r\n    const { themePrimary, toggleTheme } = useTheme()\r\n    const { projects, addProject, deleteProject, addTaskToProject } = useDB()\r\n    const history = useHistory()\r\n    \r\n\r\n    const nameRef = useRef()\r\n    function changeColor(){\r\n        toggleTheme(themePrimary)\r\n    }\r\n\r\n    function createProject(){\r\n        console.log(\"Create a new Project\")\r\n        addProject(nameRef.current.value,currentUser.email)\r\n    }\r\n    function handleTaskToProject(projectid,task,repeat){\r\n        addTaskToProject(projectid,task,repeat)\r\n    }\r\n    function deleteFromProject(projectid,projectname){\r\n        console.log(`Delete this project ${projectid} now`)\r\n        if(window.confirm(`Delete everything on ${projectname}?`)){\r\n            deleteProject(projectid)\r\n        }\r\n    }\r\n\r\n    const styleTest = {\r\n        backgroundColor: themePrimary,\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <TopNav />\r\n                <div className=\"main-container\">\r\n                    {error && <h1>{error}</h1>}\r\n                    <div className=\"projects\">\r\n                        <button className=\"project flex-center\">\r\n                            <AiOutlinePlus size=\"4em\"/>\r\n                        </button>\r\n                        <div className=\"project\">\r\n                            <input type=\"text\" placeholder=\"Name\" ref={nameRef}/>\r\n                            <button onClick={createProject} style={styleTest}>Create Project</button>\r\n                        </div>\r\n                        {projects.map((item,i) =>  (\r\n                        <div key={i} className=\"project\">\r\n                            <div>{item.data.name}</div>\r\n                            <button onClick={()=>handleTaskToProject(item.id,\"Geschirrspüler\",false)}> Open </button>\r\n                            <button onClick={()=>deleteFromProject(item.id,item.data.name)}> Delete </button>\r\n                        </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                {/* <div>\r\n                    <button onClick={changeColor} style={styleTest}>ChangeColor</button>\r\n                    <h1>{themePrimary}</h1>\r\n                </div> */}\r\n                <BottomNav />\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import React, {useState, useRef} from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport {useAuth} from '../service/AuthContext'\r\nimport { AiFillSetting } from 'react-icons/ai'\r\nimport BottomNav from '../components/BottomNav'\r\nimport TopNav from '../components/TopNav'\r\n\r\n\r\nexport default function Taskboard() {\r\n    const [error, setError] = useState('')\r\n    const {currentUser} = useAuth()\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <TopNav />\r\n                {error && <h1>{error}</h1>}\r\n                <p>Some assign tasks here...</p>\r\n                <BottomNav />\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import React, { useRef, useState, useContext } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../service/AuthContext'\r\nimport { AiOutlineArrowLeft } from 'react-icons/ai'\r\nimport { AppTransitionContext } from '../service/AppTransitionContext'\r\n\r\nexport default function UpdateProfile() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const { currentUser , updatePassword, updateEmail, logout } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n    const { setPreset } = useContext(AppTransitionContext);\r\n    async function handleToDashboard(){\r\n        try {\r\n            await setPreset(\"moveToRightFromLeft\")\r\n            history.push('/')\r\n            // TODO set Dashboard & Taskboard seperate\r\n            // await setPreset(\"cubeToTop\")\r\n        } catch (error) {\r\n        }\r\n\r\n    }\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault()\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        }\r\n\r\n        const promises = []\r\n        setLoading(true)\r\n        setError('')\r\n        if(emailRef.current.value !== currentUser.email){\r\n            promises.push(updateEmail(emailRef.current.value))\r\n        }\r\n        if(passwordRef.current.value){\r\n            promises.push(updatePassword(passwordRef.current.value))\r\n        }\r\n        Promise.all(promises).then(() => {\r\n            history.push('/')\r\n        }).catch((error) => {\r\n            setError('Failed to update account\\n'+error)\r\n            console.log(error)\r\n        }).finally( () => {\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    async function handleLogout(){\r\n        setError('')\r\n        try {\r\n            await logout()\r\n            history.push('/login')\r\n        } catch (error) {\r\n            setError('Failed to log out')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <div className=\"navbar-profile-top\">\r\n                    <div className=\"align-placeholder\">\r\n                        <Link className=\"align-left\" onClick={handleToDashboard}><AiOutlineArrowLeft title={currentUser.email} color=\"red\" size=\"1.5em\"/></Link>\r\n                    </div>\r\n                    <h2>Busybag</h2>\r\n                    <p>Keep track and do all</p>\r\n                    <strong>Email:</strong>{currentUser.email}\r\n                </div>\r\n                <div className=\"navbar-placeholder\">\r\n                </div>\r\n                <button onClick={handleLogout} >Logout</button>\r\n                <h2>---</h2>\r\n                <h2>Update</h2>\r\n                <div className=\"card\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input type=\"email\" placeholder=\"Email\" ref={emailRef} defaultValue={currentUser.email}/>\r\n                        <input type=\"password\" placeholder=\"Password\"ref={passwordRef} placeholder=\"Leave blank to keep the same\"/>\r\n                        <input type=\"password\" placeholder=\"Password Confirm\" ref={passwordConfirmRef} placeholder=\"Leave blank to keep the same\"/>\r\n                        {error && <h1>{error}</h1>}\r\n                        <button type=\"submit\" className=\"signin___button\" disabled={loading}> Save </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}","import React, { useRef, useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Logo from '../components/Logo';\r\nimport { useAuth } from '../service/AuthContext'\r\n\r\nexport default function Login() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const {login } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault()\r\n        \r\n        try{\r\n            setError('')\r\n            setLoading(true)\r\n            await login(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/\")\r\n        }catch{\r\n            setError('Failed to login via Acccount')\r\n        }\r\n        setLoading(true)\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <h2>Busybag</h2>\r\n                <Logo />\r\n                <p>Keep track and do all</p>\r\n                <div className=\"card\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input type=\"email\" placeholder=\"Email\" ref={emailRef}/>\r\n                        <input type=\"password\" placeholder=\"Password\"ref={passwordRef}/>\r\n                        {error && <h1>{error}</h1>}\r\n                        <Link to=\"/forgot-password\" className=\"text-right\">Forgot Password?</Link>\r\n                        <button type=\"submit\" className=\"signin___button\" disabled={loading}> Login </button>\r\n                    </form>\r\n                </div>\r\n                <div>\r\n                    Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport {useAuth} from '../service/AuthContext'\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n    const { currentUser } = useAuth()\r\n  \r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props => {\r\n          return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n        }}\r\n      ></Route>\r\n    )\r\n  }\r\n","import React, { useRef, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport Logo from '../components/Logo';\r\nimport { useAuth } from '../service/AuthContext'\r\n\r\nexport default function ForgotPassword() {\r\n    const emailRef = useRef()\r\n    const { resetPassword } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [message, setMessage] = useState('')\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault()\r\n        \r\n        try{\r\n            setMessage('')\r\n            setError('')\r\n            setLoading(true)\r\n            await resetPassword(emailRef.current.value)\r\n            setMessage('Check your inbox for further instructions')\r\n        }catch{\r\n            setError('Failed to reset Password')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <h2>Busybag</h2>\r\n                <Logo />\r\n                <p>Keep track and do all</p>\r\n                <div className=\"card\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input type=\"email\" placeholder=\"Email\" ref={emailRef}/>\r\n                        {error && <h1>{error}</h1>}\r\n                        {message && <h1>{message}</h1>}\r\n                        <button type=\"submit\" className=\"signin___button\" disabled={loading}> Reset Password </button>  \r\n                    </form>\r\n                </div>\r\n                <div>\r\n                    Back to Login? <Link to=\"/login\">Login</Link>\r\n                </div>\r\n                <div>\r\n                    Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}","import '../Main.css';\nimport { useContext } from \"react\";\nimport Signup from '../pages/Signup';\nimport { AuthProvider } from '../service/AuthContext';\nimport { DatabaseProvider } from '../service/DatabaseContext';\n// import { BrowserRouter as Router,Switch,Route} from 'react-router-dom'\nimport { HashRouter as Router,Switch,Route} from 'react-router-dom'\nimport Dashboard from '../pages/Dashboard'\nimport Taskboard from '../pages/Taskboard'\nimport UpdateProfile from '../pages/UpdateProfile'\nimport Login from '../pages/Login'\nimport PrivateRoute from './PrivateRoute'\nimport ForgotPassword from '../pages/ForgotPassword';\nimport { ThemeProvider } from '../service/ThemeContext';\n\nimport { AppTransitionContext } from '../service/AppTransitionContext'\nimport { PageTransition } from '@steveeeie/react-page-transition';\n// https://github.com/Steveeeie/react-page-transition\n\nfunction App() {\n  const { preset, enterAnimation , exitAnimation } = useContext(AppTransitionContext);\n  return (\n\n    <Router>\n        <AuthProvider>\n        <ThemeProvider>\n        <DatabaseProvider>\n        \n        <Route\n            render={({ location }) => {return (\n                <PageTransition\n                  preset={preset}\n                  transitionKey={location.pathname}\n                  enterAnimation={enterAnimation}\n                  exitAnimation={exitAnimation}\n                >\n                <Switch location={location}>\n                  <PrivateRoute exact path=\"/\"  component={Dashboard} />\n                  <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n                  <PrivateRoute path=\"/task-board\" component={Taskboard} />\n                  <Route path=\"/signup\" component={Signup} />\n                  <Route path=\"/login\" component={Login} />\n                  <Route path=\"/forgot-password\" component={ForgotPassword} />\n                </Switch>\n              </PageTransition>\n              );\n            }}\n          />\n      \n          </DatabaseProvider>\n          </ThemeProvider>\n        </AuthProvider>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Main.css';\nimport App from './components/App';\nimport { AppTransitionProvider } from './service/AppTransitionContext'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <AppTransitionProvider>\n    <App />\n    </AppTransitionProvider>\n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}