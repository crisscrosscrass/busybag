{"version":3,"sources":["images/unnamed.png","components/Logo.js","firebase.js","service/AuthContext.js","pages/Signup.js","service/DatabaseContext.js","service/ProjectContext.js","service/ThemeContext.js","service/AppTransitionContext.js","components/BottomNav.js","components/TopNav.js","pages/Dashboard.js","pages/CreateProject.js","pages/CreateTask.js","pages/ProjectOverview.js","pages/Taskboard.js","pages/UpdateProfile.js","pages/Login.js","components/PrivateRoute.js","pages/ForgotPassword.js","components/App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Logo","src","logo","alt","app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","GoogleAuthProvider","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","logout","signOut","signup","createUserWithEmailAndPassword","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","e","a","preventDefault","current","push","className","onSubmit","type","placeholder","ref","disabled","to","DatabaseContext","useDB","DatabaseProvider","projects","setProjects","collection","where","onSnapshot","snapshop","docs","map","doc","id","data","loadingProjects","addProject","project","description","color","add","name","owner","then","docRef","catch","console","deleteProject","projectid","snapshot","forEach","delete","addTaskToProject","taskName","taskDescription","ProjectContext","useProject","ProjectProvider","setProjectId","projectName","setProjectName","tasks","setTasks","loadingTaskFromProject","deleteTaskFromProject","taskId","ThemeContext","ThemeProvider","themePrimary","setThemePrimary","toggleTheme","AppTransitionContext","AppTransitionProvider","preset","setPreset","enterAnimation","setEnterAnimation","exitAnimation","setExitAnimation","BottomNav","length","window","alert","size","onClick","TopNav","title","Dashboard","log","item","i","style","backgroundColor","handleToProjectOverview","projectname","confirm","CreateProject","projectNameRef","projectDescriptionRef","projectColorRef","setColor","onChange","target","CreateTask","taskNameRef","taskDescriptionRef","projectRef","goBack","ProjectOverview","Taskboard","UpdateProfile","promises","Promise","all","finally","defaultValue","Login","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","App","location","transitionKey","pathname","exact","path","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.178de74d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/unnamed.ea125fe9.png\";","import React from 'react'\r\nimport logo from '../images/unnamed.png';\r\n\r\nexport default function Logo() {\r\n    return (\r\n        <div>\r\n            <img src={logo} alt=\"Logo\" />\r\n        </div>\r\n    )\r\n}\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\n\r\nconst app = firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n    // apiKey: \"AIzaSyAPyppmyjBKQjIS4o1nRk6N-UxkW54rFPA\",\r\n    // authDomain: \"busybag-f27f9.firebaseapp.com\",\r\n    // projectId: \"busybag-f27f9\",\r\n    // storageBucket: \"busybag-f27f9.appspot.com\",\r\n    // messagingSenderId: \"622475419405\",\r\n    // appId: \"1:622475419405:web:d8022f00e74e3ede131a44\"\r\n})\r\n\r\nexport const auth = app.auth()\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\nexport const firestore = app.firestore()\r\nexport default app","import React, { useContext, useState , useEffect } from 'react'\r\nimport {auth,provider} from '../firebase'\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth(){\r\n    return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider( {children} ) {\r\n    const [currentUser, setCurrentUser] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    function signup(email, password){\r\n        return auth.createUserWithEmailAndPassword(email,password)\r\n    }\r\n\r\n    function login(email,password){\r\n        return auth.signInWithEmailAndPassword(email,password)\r\n    }\r\n\r\n    function loginWithGoogle(){\r\n        return auth.signInWithPopup(provider)\r\n    }\r\n\r\n    function logout(){\r\n        return auth.signOut()\r\n    }\r\n\r\n    function resetPassword(email){\r\n        return auth.sendPasswordResetEmail(email)\r\n    }\r\n\r\n    function updateEmail(email){\r\n        return currentUser.updateEmail(email)\r\n    }\r\n\r\n    function updatePassword(password){\r\n        return currentUser.updatePassword(password)\r\n    }\r\n\r\n    useEffect(() => {\r\n        // auth.onAuthStateChanged(function(user) {\r\n        //     if (user) {\r\n        //       // User is signed in.\r\n        //       console.log(user)\r\n        //       console.log(user.displayName)\r\n        //       console.log(user.email)\r\n        //       console.log(user.photoURL)\r\n        //       console.log(user.emailVerified)\r\n        //       console.log(user.uid)\r\n        //     } else {\r\n        //       // No user is signed in.\r\n        //     }\r\n        //   });\r\n\r\n          \r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user)\r\n            setLoading(false)\r\n        })\r\n\r\n        return unsubscribe\r\n    },[]) \r\n\r\n    const value = {\r\n        currentUser,\r\n        login,\r\n        logout,\r\n        signup,\r\n        resetPassword,\r\n        updateEmail,\r\n        updatePassword\r\n    }\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Logo from '../components/Logo';\r\nimport { useAuth } from '../service/AuthContext'\r\n\r\nexport default function Signup() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const {signup } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault()\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        }\r\n        try{\r\n            setError('')\r\n            setLoading(true)\r\n            await signup(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/\")\r\n        }catch{\r\n            setError('Failed to create an Acccount')\r\n        }\r\n        setLoading(true)\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <h2>Busybag</h2>\r\n                <Logo/>\r\n                <p>Keep track and do all</p>\r\n                <div className=\"card\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input type=\"email\" placeholder=\"Email\" ref={emailRef}/>\r\n                        <input type=\"password\" placeholder=\"Password\"ref={passwordRef}/>\r\n                        <input type=\"password\" placeholder=\"Password Confirm\" ref={passwordConfirmRef}/>\r\n                        {error && <h1>{error}</h1>}\r\n                        <button type=\"submit\" className=\"signin___button\" disabled={loading}> Sign up </button>\r\n                    </form>\r\n                </div>\r\n                <div>\r\n                    Already have an account? <Link to=\"/login\">Login</Link>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport {firestore} from '../firebase'\r\nimport {auth} from '../firebase'\r\n\r\nconst DatabaseContext = React.createContext()\r\n\r\nexport function useDB(){\r\n    return useContext(DatabaseContext)\r\n}\r\n\r\nexport function DatabaseProvider( {children} ) {\r\n    const [projects,setProjects] = useState([]);\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    //init values\r\n    useEffect(()=>{\r\n\r\n        auth.onAuthStateChanged(function(user) {\r\n            if (user) {\r\n              // User is signed in.\r\n              firestore.collection(\"projects\").where(\"owner\", \"==\", user.email).onSnapshot(snapshop => setProjects(\r\n                snapshop.docs.map(\r\n                    doc=>({id:doc.id,data:doc.data()})\r\n                    )\r\n                )\r\n            )\r\n            setLoading(false)\r\n            }\r\n          });\r\n\r\n\r\n        let isMounted = true;\r\n        // firestore.collection(\"projects\").where(\"user\", \"==\", \"fovem84447@nonicamy.com\").onSnapshot(snapshop => setProjects(\r\n        //     snapshop.docs.map(\r\n        //         doc=>({id:doc.id,data:doc.data()})\r\n        //         )\r\n        //     )\r\n        // )\r\n        // setLoading(false)\r\n        return () => { isMounted = false };\r\n    },[])\r\n\r\n    //methods\r\n    function loadingProjects(user){\r\n        firestore.collection(\"projects\").where(\"user\", \"==\", \"fovem84447@nonicamy.com\").onSnapshot(snapshop => setProjects(\r\n            snapshop.docs.map(\r\n                doc=>({id:doc.id,data:doc.data()})\r\n                )\r\n            )\r\n        )\r\n        setLoading(false)\r\n    }\r\n\r\n    function addProject(project,description, color, user){\r\n        firestore.collection(\"projects\").add({\r\n            name:project,\r\n            description:description,\r\n            color:color,\r\n            owner: user,\r\n        }).then(docRef => {\r\n            return docRef.id            \r\n        })\r\n        .catch(error => console.error(\"Error adding document: \", error))\r\n    }\r\n\r\n    function addTaskToProject(projectId,taskName,taskDescription,user){\r\n        firestore.collection(projectId).add({\r\n            name:taskName,\r\n            description:taskDescription,\r\n            user:user,\r\n        })\r\n    }\r\n\r\n    function deleteProject(projectid){\r\n        const ref = firestore.collection(projectid)\r\n        ref.onSnapshot((snapshot) => {\r\n            snapshot.docs.forEach((doc) => {\r\n            ref.doc(doc.id).delete()\r\n            })\r\n        })\r\n        firestore.collection(projectid).doc(projectid).delete()\r\n        firestore.collection(\"projects\").doc(projectid).delete();\r\n    }\r\n\r\n    // https://github.com/oghur/React-todo-App-with-connection-to-Firebase/blob/main/src/App.js\r\n    // function deletedata(value){\r\n    //     database.collection(\"messages\").doc(value).delete();\r\n    // }\r\n     \r\n    // function Editdata(id,value){\r\n    //     database.collection(\"messages\").doc(id).set({\r\n    //       message: value,\r\n    //     },{merge:true})\r\n    // }\r\n\r\n    const value = {\r\n        projects,\r\n        loadingProjects,\r\n        addProject,\r\n        deleteProject,\r\n        addTaskToProject\r\n    }\r\n    return (\r\n        <DatabaseContext.Provider value={value}>\r\n            {!loading && children}\r\n        </DatabaseContext.Provider>\r\n    )\r\n}\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport {firestore} from '../firebase'\r\n\r\nexport const ProjectContext = React.createContext()\r\n\r\nexport function useProject(){\r\n    return useContext(ProjectContext)\r\n}\r\n\r\nexport function ProjectProvider( {children} ) {\r\n    const [projectId, setProjectId] = useState('')\r\n    const [projectName, setProjectName] = useState('')\r\n    const [tasks, setTasks] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setProjectId('')\r\n        setProjectName('')\r\n        setTasks([])\r\n        setLoading(false)\r\n    },[])\r\n\r\n    function loadingTaskFromProject(projectId){\r\n        firestore.collection(projectId).onSnapshot(snapshop => setTasks(\r\n            snapshop.docs.map(\r\n                doc=>({id:doc.id,data:doc.data()})\r\n                )\r\n            )\r\n        )\r\n        setLoading(false)\r\n    }\r\n    \r\n    function deleteTaskFromProject(projectId,taskId){\r\n        firestore.collection(projectId).doc(taskId).delete()\r\n    }\r\n\r\n    const value = {\r\n        projectId,\r\n        setProjectId,\r\n        projectName,\r\n        setProjectName,\r\n        tasks,\r\n        setTasks,\r\n        loadingTaskFromProject,\r\n        deleteTaskFromProject\r\n    }\r\n\r\n    return (\r\n        <ProjectContext.Provider value={value}>\r\n            {!loading && children}\r\n        </ProjectContext.Provider>\r\n    )\r\n}","import React, { useContext, useState, useEffect } from 'react'\r\n\r\nexport const ThemeContext = React.createContext()\r\n\r\nexport function useTheme(){\r\n    return useContext(ThemeContext)\r\n}\r\n\r\nexport function ThemeProvider( {children} ) {\r\n    const [themePrimary, setThemePrimary] = useState('')\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    function toggleTheme(themePrimary){\r\n        themePrimary === '#047AED' ? setThemePrimary('#E13B64') : setThemePrimary('#047AED')\r\n        return themePrimary\r\n    }\r\n\r\n    useEffect(() => {\r\n        setThemePrimary('#E13B64')\r\n        setLoading(false)\r\n    },[]) \r\n\r\n\r\n    const value = {\r\n        themePrimary,\r\n        toggleTheme\r\n    }\r\n\r\n    return (\r\n        <ThemeContext.Provider value={value}>\r\n            {!loading && children}\r\n        </ThemeContext.Provider>\r\n    )\r\n}","import React, { createContext, useState } from \"react\";\r\n\r\nexport const AppTransitionContext = createContext();\r\n\r\nexport function AppTransitionProvider({ children }) {\r\n  const [preset, setPreset] = useState(\"cubeToLeft\");\r\n  const [enterAnimation, setEnterAnimation] = useState(\"\");\r\n  const [exitAnimation, setExitAnimation] = useState(\"\");\r\n\r\n  return (\r\n    <AppTransitionContext.Provider\r\n      value={{\r\n        preset,\r\n        enterAnimation,\r\n        exitAnimation,\r\n        setPreset,\r\n        setEnterAnimation,\r\n        setExitAnimation\r\n      }}\r\n    >\r\n      {children}\r\n    </AppTransitionContext.Provider>\r\n  );\r\n}\r\n","import React, {useContext} from 'react'\r\nimport { Link, useHistory} from 'react-router-dom'\r\nimport { AiOutlinePlusCircle, AiFillCopy, AiOutlineBorder } from 'react-icons/ai'\r\nimport { BsListTask } from 'react-icons/bs'\r\nimport { RiDashboardFill } from 'react-icons/ri'\r\nimport { GrProjects } from 'react-icons/gr'\r\nimport { AppTransitionContext } from '../service/AppTransitionContext'\r\nimport {useDB} from '../service/DatabaseContext'\r\n\r\nexport default function BottomNav() {\r\n    const history = useHistory()\r\n    const { setPreset } = useContext(AppTransitionContext);\r\n    const { projects } = useDB()\r\n    \r\n    async function handleToCreateTask(){\r\n        try {\r\n            if(projects.length === 0){\r\n                window.alert(\"You need to create a Project first, before you can create Tasks!\");\r\n                await setPreset(\"cubeToBottom\")\r\n                history.push('/create-project')\r\n            }else{\r\n            await setPreset(\"cubeToRight\")\r\n            history.push('/create-task')\r\n            }\r\n        } catch (error) {\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className=\"navbar-bottom\">\r\n                <Link to=\"/\"><AiOutlineBorder size=\"2em\" /></Link>\r\n                <Link onClick={handleToCreateTask}><AiOutlinePlusCircle size=\"2em\"/></Link>\r\n                <Link to=\"/task-board\" ><BsListTask size=\"2em\"/></Link>\r\n                </div>\r\n    )\r\n}\r\n","import React, {useContext} from 'react'\r\nimport { Link, useHistory} from 'react-router-dom'\r\nimport {useAuth} from '../service/AuthContext'\r\nimport { AiFillSetting } from 'react-icons/ai'\r\nimport { AppTransitionContext } from '../service/AppTransitionContext'\r\n\r\nexport default function TopNav() {\r\n    const { currentUser } = useAuth()\r\n    const history = useHistory()\r\n    const { setPreset } = useContext(AppTransitionContext);\r\n    async function handleToProfile(){\r\n        try {\r\n            await setPreset(\"moveToLeftFromRight\")\r\n            history.push('/update-profile')\r\n        } catch (error) {\r\n        }\r\n\r\n    }\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <div className=\"navbar-top\">\r\n                <Link className=\"align-right\" onClick={handleToProfile}>\r\n                        <AiFillSetting title={currentUser.email} color=\"red\" size=\"1.5em\"/>\r\n                    </Link>\r\n                <div className=\"align-placeholder\">\r\n                </div>\r\n                <h2>Busybag</h2>\r\n                <p>Keep track and do all</p>\r\n                <strong>Email:</strong>{currentUser.email}\r\n            </div>\r\n            <div className=\"navbar-placeholder\">\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useRef,useContext} from 'react'\r\nimport { /*Link*/ useHistory } from 'react-router-dom'\r\nimport {useAuth} from '../service/AuthContext'\r\nimport {useTheme} from '../service/ThemeContext'\r\nimport {useDB} from '../service/DatabaseContext'\r\nimport { useProject } from '../service/ProjectContext'\r\nimport BottomNav from '../components/BottomNav'\r\nimport TopNav from '../components/TopNav'\r\nimport { AiOutlinePlus } from 'react-icons/ai'\r\nimport { AppTransitionContext } from '../service/AppTransitionContext'\r\n\r\n\r\nexport default function Dashboard() {\r\n    const [error, setError] = useState('')\r\n    const {currentUser} = useAuth()\r\n    const { themePrimary, toggleTheme } = useTheme()\r\n    const { projects, deleteProject } = useDB()\r\n    const { setProjectId, setProjectName,loadingTaskFromProject } = useProject()\r\n    const history = useHistory()\r\n    const { setPreset } = useContext(AppTransitionContext);\r\n    \r\n\r\n    const nameRef = useRef()\r\n    function changeColor(){\r\n        toggleTheme(themePrimary)\r\n    }\r\n    async function handleToProjectCreate(){\r\n        try {\r\n            await setPreset(\"cubeToBottom\")\r\n            history.push('/create-project')\r\n            // TODO set Dashboard & Taskboard seperate\r\n            // await setPreset(\"cubeToTop\")\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    async function handleToProjectOverview(projectId,projectName){\r\n        try {\r\n            await setProjectId(projectId)\r\n            await setProjectName(projectName)\r\n            await loadingTaskFromProject(projectId)\r\n            await setPreset(\"newspaper\")\r\n            history.push('/project-overview')\r\n            // TODO set Dashboard & Taskboard seperate\r\n            // await setPreset(\"cubeToTop\")\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    function deleteFromProject(projectid,projectname){\r\n        console.log(`Delete this project ${projectid} now`)\r\n        if(window.confirm(`Delete everything on ${projectname}?`)){\r\n            deleteProject(projectid)\r\n        }\r\n    }\r\n\r\n    const styleTest = {\r\n        backgroundColor: themePrimary,\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <TopNav />\r\n                <div className=\"main-container\">\r\n                    {error && <h1>{error}</h1>}\r\n                    <div className=\"projects\">\r\n                        <button onClick={handleToProjectCreate} className=\"project flex-center\">\r\n                            <AiOutlinePlus size=\"4em\"/>\r\n                        </button>\r\n                        {projects.map((item,i) =>  (\r\n                        <div key={i} className=\"project\" style={{backgroundColor:item.data.color}}>\r\n                            <div>{item.data.name}</div>\r\n                            <button onClick={() =>handleToProjectOverview(item.id,item.data.name)}> Open </button>\r\n                            <button onClick={()=>deleteFromProject(item.id,item.data.name)}> Delete </button>\r\n                        </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                {/* <div>\r\n                    <button onClick={changeColor} style={styleTest}>ChangeColor</button>\r\n                    <h1>{themePrimary}</h1>\r\n                </div> */}\r\n                <BottomNav />\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import React, { useRef, useState, useContext } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../service/AuthContext'\r\nimport { useDB } from '../service/DatabaseContext'\r\nimport { AiOutlineArrowLeft } from 'react-icons/ai'\r\nimport { AppTransitionContext } from '../service/AppTransitionContext'\r\n\r\nexport default function CreateProject() {\r\n    const { setPreset } = useContext(AppTransitionContext);\r\n\r\n    const projectNameRef = useRef()\r\n    const projectDescriptionRef = useRef()\r\n    const projectColorRef = useRef()\r\n\r\n    const { currentUser , updatePassword, updateEmail, logout } = useAuth()\r\n    const { addProject } = useDB()\r\n\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [color, setColor] = useState('#047AED');\r\n\r\n    const history = useHistory()\r\n    \r\n    async function handleToDashboard(){\r\n        try {\r\n            // await setPreset(\"fall\")\r\n            await setPreset(\"cubeToLeft\")\r\n            history.push('/')\r\n            // TODO set Dashboard & Taskboard seperate\r\n            // await setPreset(\"cubeToTop\")\r\n        } catch (error) {\r\n        }\r\n\r\n    }\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault()\r\n        if (projectNameRef.current.value.length < 4) {\r\n            return setError('Enter a suitable Projectname')\r\n        }\r\n        setLoading(true)\r\n        setError('')\r\n        console.log(projectNameRef.current.value,projectDescriptionRef.current.value,projectColorRef.current.value)\r\n        //name, description, color, owner\r\n        await addProject(projectNameRef.current.value,projectDescriptionRef.current.value,projectColorRef.current.value,currentUser.email)\r\n        setLoading(false)\r\n        await setPreset(\"cubeToTop\")\r\n        history.push('/')\r\n    }\r\n\r\n    async function handleLogout(){\r\n        setError('')\r\n        try {\r\n            await logout()\r\n            history.push('/login')\r\n        } catch (error) {\r\n            setError('Failed to log out')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <div className=\"navbar-profile-top\">\r\n                    <div className=\"align-placeholder\">\r\n                        <Link className=\"align-left\" onClick={handleToDashboard}><AiOutlineArrowLeft title={currentUser.email} color=\"red\" size=\"1.5em\"/></Link>\r\n                    </div>\r\n                    <h2>Busybag</h2>\r\n                    <p>Keep track and do all</p>\r\n                </div>\r\n                <div className=\"navbar-placeholder\">\r\n                </div>\r\n                <h2>Create Project</h2>\r\n                <div className=\"createProject\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        {error && <h1>{error}</h1>}\r\n                        <input type=\"text\" placeholder=\"Projectname...\" ref={projectNameRef} placeholder=\"Enter a Project Name\"/>\r\n                        <input type=\"text\" placeholder=\"Projectdescription...\" ref={projectDescriptionRef} placeholder=\"Describe your Project...\"/>\r\n                        <input type=\"color\" value={color} onChange={e => setColor(e.target.value)} ref={projectColorRef} />\r\n                        <strong>Owner:</strong>{currentUser.email}\r\n                        <button type=\"submit\" className=\"signin___button\" disabled={loading}> Create </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}","import React, { useRef, useState, useContext } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../service/AuthContext'\r\nimport { useDB } from '../service/DatabaseContext'\r\nimport { AiOutlineArrowLeft } from 'react-icons/ai'\r\nimport { AppTransitionContext } from '../service/AppTransitionContext'\r\n\r\nexport default function CreateTask() {\r\n    const { setPreset } = useContext(AppTransitionContext);\r\n\r\n    const taskNameRef = useRef()\r\n    const taskDescriptionRef = useRef()\r\n    const projectRef = useRef()\r\n\r\n    const { currentUser , updatePassword, updateEmail, logout } = useAuth()\r\n    const { projects, addTaskToProject } = useDB()\r\n\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [color, setColor] = useState('#047AED');\r\n\r\n    const history = useHistory()\r\n    \r\n    async function handleToDashboard(){\r\n        try {\r\n            // await setPreset(\"fall\")\r\n            await setPreset(\"cubeToLeft\")\r\n            history.push('/')\r\n            // TODO set Dashboard & Taskboard seperate\r\n            // await setPreset(\"cubeToTop\")\r\n        } catch (error) {\r\n        }\r\n\r\n    }\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault()\r\n        if (taskNameRef.current.value.length < 4) {\r\n            return setError('Enter a suitable Taskname')\r\n        }\r\n        setLoading(true)\r\n        setError('')\r\n        console.log(projectRef.current.value,taskNameRef.current.value,taskDescriptionRef.current.value,currentUser.email)\r\n        addTaskToProject(projectRef.current.value,taskNameRef.current.value,taskDescriptionRef.current.value,currentUser.email)\r\n        //name, description, color, owner\r\n        // await addProject(taskNameRef.current.value,projectDescriptionRef.current.value,projectColorRef.current.value,currentUser.email)\r\n        // setLoading(false)\r\n        // await setPreset(\"cubeToTop\")\r\n        setLoading(false)\r\n        history.goBack()\r\n    }\r\n\r\n    async function handleLogout(){\r\n        setError('')\r\n        try {\r\n            await logout()\r\n            history.push('/login')\r\n        } catch (error) {\r\n            setError('Failed to log out')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <div className=\"navbar-profile-top\">\r\n                    <div className=\"align-placeholder\">\r\n                        <Link className=\"align-left\" onClick={handleToDashboard}><AiOutlineArrowLeft title={currentUser.email} color=\"red\" size=\"1.5em\"/></Link>\r\n                    </div>\r\n                    <h2>Busybag</h2>\r\n                    <p>Keep track and do all</p>\r\n                </div>\r\n                <div className=\"navbar-placeholder\">\r\n                </div>\r\n                <h2>Create Task</h2>\r\n                <div className=\"createProject\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        {error && <h1>{error}</h1>}\r\n                        <input type=\"text\" placeholder=\"Projectname...\" ref={taskNameRef} placeholder=\"Enter a Task Name\"/>\r\n                        <input type=\"text\" placeholder=\"Projectdescription...\" ref={taskDescriptionRef} placeholder=\"Describe your taks...\"/>\r\n                        <div className=\"text-right\">\r\n                            <div>\r\n                                Repeat? <button>...</button>\r\n                            </div>\r\n                            <div>\r\n                                Deadline? <button>...</button>\r\n                            </div>\r\n                            <div>\r\n                                Effort? <button>...</button>\r\n                            </div>\r\n                            <div>\r\n                                Assignee? <button>...</button>\r\n                            </div>\r\n                            <div>\r\n                                <select ref={projectRef}>\r\n                                {projects.map((item,i) =>  (\r\n                                    <option value={item.id}>{item.data.name}</option>                                \r\n                                    ))}\r\n                                    </select>\r\n                            </div>\r\n                        </div>\r\n                        <strong>Owner:</strong>{currentUser.email}\r\n                        <button type=\"submit\" className=\"signin___button\" disabled={loading}> Create </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}","import React, { useRef, useState, useContext } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../service/AuthContext'\r\nimport { useDB } from '../service/DatabaseContext'\r\nimport { useProject } from '../service/ProjectContext'\r\nimport { AiFillSetting, AiOutlineArrowLeft, AiFillEdit } from 'react-icons/ai'\r\nimport { BiShareAlt } from 'react-icons/bi'\r\nimport { AppTransitionContext } from '../service/AppTransitionContext'\r\nimport BottomNav from '../components/BottomNav';\r\n\r\nexport default function ProjectOverview() {\r\n    const { setPreset } = useContext(AppTransitionContext);\r\n\r\n    const projectNameRef = useRef()\r\n    const projectDescriptionRef = useRef()\r\n    const projectColorRef = useRef()\r\n\r\n    const { currentUser , updatePassword, updateEmail, logout } = useAuth()\r\n    const { addProject } = useDB()\r\n    const { projectId, projectName, tasks, deleteTaskFromProject } = useProject()\r\n\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [color, setColor] = useState('#047AED');\r\n\r\n    const history = useHistory()\r\n    \r\n    async function handleToDashboard(){\r\n        try {\r\n            // await setPreset(\"fall\")\r\n            await setPreset(\"newspaper\")\r\n            history.push('/')\r\n            // TODO set Dashboard & Taskboard seperate\r\n            // await setPreset(\"cubeToTop\")\r\n        } catch (error) {\r\n        }\r\n\r\n    }\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault()\r\n        if (projectNameRef.current.value.length < 4) {\r\n            return setError('Enter a suitable Projectname')\r\n        }\r\n        setLoading(true)\r\n        setError('')\r\n        console.log(projectNameRef.current.value,projectDescriptionRef.current.value,projectColorRef.current.value)\r\n        //name, description, color, owner\r\n        await addProject(projectNameRef.current.value,projectDescriptionRef.current.value,projectColorRef.current.value,currentUser.email)\r\n        setLoading(false)\r\n        await setPreset(\"cubeToTop\")\r\n        history.push('/')\r\n    }\r\n\r\n    async function handleLogout(){\r\n        setError('')\r\n        try {\r\n            await logout()\r\n            history.push('/login')\r\n        } catch (error) {\r\n            setError('Failed to log out')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <div className=\"navbar-profile-top\">\r\n                    <div className=\"align-placeholder\">\r\n                        <Link className=\"align-left\" onClick={handleToDashboard}><AiOutlineArrowLeft title={currentUser.email} color=\"red\" size=\"1.5em\"/></Link>\r\n                    </div>\r\n                    <div className=\"align-right\">\r\n                        <Link>\r\n                            <BiShareAlt title={currentUser.email} color=\"red\" size=\"1.5em\"/>\r\n                        </Link>\r\n                        <Link>\r\n                            <AiFillEdit title={currentUser.email} color=\"red\" size=\"1.5em\"/>\r\n                        </Link>\r\n                    </div>\r\n                    <h2>Busybag</h2>\r\n                    <p>Keep track and do all</p>\r\n                </div>\r\n                <div className=\"navbar-placeholder\">\r\n                </div>\r\n                {/* <h5>Project Overview</h5> */}\r\n                <h2>{projectName}</h2>\r\n                <p>{projectId}</p>\r\n                <div className=\"\">\r\n                    {tasks.map((item,i) =>  (\r\n                            <ul key={i} className=\"task-list\" >\r\n                                <button onClick={() => deleteTaskFromProject(projectId,item.id)}>done</button> <li>{item.data.name}</li>\r\n                                {/* <li>{item.data.name}|{item.id}</li> */}\r\n                            </ul>\r\n                            ))}\r\n                </div>\r\n                <BottomNav />\r\n            </div>\r\n        </section>\r\n    )\r\n}","import React, {useState, useRef} from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport {useAuth} from '../service/AuthContext'\r\nimport { AiFillSetting } from 'react-icons/ai'\r\nimport BottomNav from '../components/BottomNav'\r\nimport TopNav from '../components/TopNav'\r\n\r\n\r\nexport default function Taskboard() {\r\n    const [error, setError] = useState('')\r\n    const {currentUser} = useAuth()\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <TopNav />\r\n                {error && <h1>{error}</h1>}\r\n                <p>Some assign tasks here...</p>\r\n                <BottomNav />\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import React, { useRef, useState, useContext } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../service/AuthContext'\r\nimport { AiOutlineArrowLeft } from 'react-icons/ai'\r\nimport { AppTransitionContext } from '../service/AppTransitionContext'\r\n\r\nexport default function UpdateProfile() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const { currentUser , updatePassword, updateEmail, logout } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n    const { setPreset } = useContext(AppTransitionContext);\r\n    async function handleToDashboard(){\r\n        try {\r\n            await setPreset(\"moveToRightFromLeft\")\r\n            history.push('/')\r\n            // TODO set Dashboard & Taskboard seperate\r\n            // await setPreset(\"cubeToTop\")\r\n        } catch (error) {\r\n        }\r\n\r\n    }\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault()\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        }\r\n\r\n        const promises = []\r\n        setLoading(true)\r\n        setError('')\r\n        if(emailRef.current.value !== currentUser.email){\r\n            promises.push(updateEmail(emailRef.current.value))\r\n        }\r\n        if(passwordRef.current.value){\r\n            promises.push(updatePassword(passwordRef.current.value))\r\n        }\r\n        Promise.all(promises).then(() => {\r\n            history.push('/')\r\n        }).catch((error) => {\r\n            setError('Failed to update account\\n'+error)\r\n            console.log(error)\r\n        }).finally( () => {\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    async function handleLogout(){\r\n        setError('')\r\n        try {\r\n            await logout()\r\n            history.push('/login')\r\n        } catch (error) {\r\n            setError('Failed to log out')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <div className=\"navbar-profile-top\">\r\n                    <div className=\"align-placeholder\">\r\n                        <Link className=\"align-left\" onClick={handleToDashboard}><AiOutlineArrowLeft title={currentUser.email} color=\"red\" size=\"1.5em\"/></Link>\r\n                    </div>\r\n                    <h2>Busybag</h2>\r\n                    <p>Keep track and do all</p>\r\n                    <strong>Email:</strong>{currentUser.email}\r\n                </div>\r\n                <div className=\"navbar-placeholder\">\r\n                </div>\r\n                <button onClick={handleLogout} >Logout</button>\r\n                <h2>---</h2>\r\n                <h2>Update</h2>\r\n                <div className=\"card\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input type=\"email\" placeholder=\"Email\" ref={emailRef} defaultValue={currentUser.email}/>\r\n                        <input type=\"password\" placeholder=\"Password\"ref={passwordRef} placeholder=\"Leave blank to keep the same\"/>\r\n                        <input type=\"password\" placeholder=\"Password Confirm\" ref={passwordConfirmRef} placeholder=\"Leave blank to keep the same\"/>\r\n                        {error && <h1>{error}</h1>}\r\n                        <button type=\"submit\" className=\"signin___button\" disabled={loading}> Save </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}","import React, { useRef, useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Logo from '../components/Logo';\r\nimport { useAuth } from '../service/AuthContext'\r\n\r\nexport default function Login() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const {login } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault()\r\n        \r\n        try{\r\n            setError('')\r\n            setLoading(true)\r\n            await login(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/\")\r\n        }catch{\r\n            setError('Failed to login via Acccount')\r\n        }\r\n        setLoading(true)\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <h2>Busybag</h2>\r\n                <Logo />\r\n                <p>Keep track and do all</p>\r\n                <div className=\"card\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input type=\"email\" placeholder=\"Email\" ref={emailRef}/>\r\n                        <input type=\"password\" placeholder=\"Password\"ref={passwordRef}/>\r\n                        {error && <h1>{error}</h1>}\r\n                        <Link to=\"/forgot-password\" className=\"text-right\">Forgot Password?</Link>\r\n                        <button type=\"submit\" className=\"signin___button\" disabled={loading}> Login </button>\r\n                    </form>\r\n                </div>\r\n                <div>\r\n                    Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport {useAuth} from '../service/AuthContext'\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n    const { currentUser } = useAuth()\r\n  \r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props => {\r\n          return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n        }}\r\n      ></Route>\r\n    )\r\n  }\r\n","import React, { useRef, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport Logo from '../components/Logo';\r\nimport { useAuth } from '../service/AuthContext'\r\n\r\nexport default function ForgotPassword() {\r\n    const emailRef = useRef()\r\n    const { resetPassword } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [message, setMessage] = useState('')\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault()\r\n        \r\n        try{\r\n            setMessage('')\r\n            setError('')\r\n            setLoading(true)\r\n            await resetPassword(emailRef.current.value)\r\n            setMessage('Check your inbox for further instructions')\r\n        }catch{\r\n            setError('Failed to reset Password')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <h2>Busybag</h2>\r\n                <Logo />\r\n                <p>Keep track and do all</p>\r\n                <div className=\"card\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input type=\"email\" placeholder=\"Email\" ref={emailRef}/>\r\n                        {error && <h1>{error}</h1>}\r\n                        {message && <h1>{message}</h1>}\r\n                        <button type=\"submit\" className=\"signin___button\" disabled={loading}> Reset Password </button>  \r\n                    </form>\r\n                </div>\r\n                <div>\r\n                    Back to Login? <Link to=\"/login\">Login</Link>\r\n                </div>\r\n                <div>\r\n                    Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}","import '../Main.css';\nimport { useContext } from \"react\";\nimport Signup from '../pages/Signup';\nimport { AuthProvider } from '../service/AuthContext';\nimport { DatabaseProvider } from '../service/DatabaseContext';\nimport { ProjectProvider } from '../service/ProjectContext';\n// import { BrowserRouter as Router,Switch,Route} from 'react-router-dom'\nimport { HashRouter as Router,Switch,Route} from 'react-router-dom'\nimport Dashboard from '../pages/Dashboard'\nimport CreateProject from '../pages/CreateProject'\nimport CreateTask from '../pages/CreateTask'\nimport ProjectOverview from '../pages/ProjectOverview'\nimport Taskboard from '../pages/Taskboard'\nimport UpdateProfile from '../pages/UpdateProfile'\nimport Login from '../pages/Login'\nimport PrivateRoute from './PrivateRoute'\nimport ForgotPassword from '../pages/ForgotPassword';\nimport { ThemeProvider } from '../service/ThemeContext';\n\nimport { AppTransitionContext } from '../service/AppTransitionContext'\nimport { PageTransition } from '@steveeeie/react-page-transition';\n// https://github.com/Steveeeie/react-page-transition\n\nfunction App() {\n  const { preset, enterAnimation , exitAnimation } = useContext(AppTransitionContext);\n  return (\n\n    <Router>\n        <AuthProvider>\n        <ThemeProvider>\n        <DatabaseProvider>\n        <ProjectProvider>\n        <Route\n            render={({ location }) => {return (\n                <PageTransition\n                  preset={preset}\n                  transitionKey={location.pathname}\n                  enterAnimation={enterAnimation}\n                  exitAnimation={exitAnimation}\n                >\n                <Switch location={location}>\n                \n                    <PrivateRoute exact path=\"/\"  component={Dashboard} />\n                    <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n                    <PrivateRoute path=\"/task-board\" component={Taskboard} />\n                    <PrivateRoute path=\"/create-project\" component={CreateProject} />\n                    <PrivateRoute path=\"/create-task\" component={CreateTask} />\n                    <PrivateRoute path=\"/project-overview\" component={ProjectOverview} />\n                    \n                  <Route path=\"/signup\" component={Signup} />\n                  <Route path=\"/login\" component={Login} />\n                  <Route path=\"/forgot-password\" component={ForgotPassword} />\n                </Switch>\n              </PageTransition>\n              );\n            }}\n          />\n          </ProjectProvider>\n          </DatabaseProvider>\n          </ThemeProvider>\n        </AuthProvider>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Main.css';\nimport App from './components/App';\nimport { AppTransitionProvider } from './service/AppTransitionContext'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <AppTransitionProvider>\n    <App />\n    </AppTransitionProvider>\n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}