{"version":3,"sources":["images/unnamed.png","components/Logo.js","firebase.js","service/AuthContext.js","pages/Signup.js","service/DatabaseContext.js","service/ProjectContext.js","service/ThemeContext.js","service/AppTransitionContext.js","components/BottomNav.js","components/TopNav.js","pages/Dashboard.js","pages/CreateProject.js","pages/ModifyProject.js","pages/CreateTask.js","pages/ProjectOverview.js","pages/Taskboard.js","pages/UpdateProfile.js","pages/Login.js","components/PrivateRoute.js","pages/ForgotPassword.js","components/App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Logo","className","src","logo","alt","app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","GoogleAuthProvider","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","logout","signOut","signup","createUserWithEmailAndPassword","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","history","useHistory","e","a","preventDefault","current","push","onSubmit","type","placeholder","ref","disabled","to","DatabaseContext","useDB","DatabaseProvider","projects","setProjects","docId","projectRef","collection","doc","get","exists","data","shared","console","log","update","taskName","currentdate","Date","datetime","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","where","onSnapshot","snapshop","docs","map","id","shareProjectWithUser","addProject","project","description","color","add","name","owner","then","docRef","catch","modifyProject","deleteProject","projectid","snapshot","forEach","delete","addTaskToProject","taskDescription","addHistoryEntryToProject","ProjectContext","useProject","ProjectProvider","setProjectId","projectName","setProjectName","projectColor","setProjectColor","setProjectDescription","projectOwner","setProjectOwner","setProjectShared","projectOverview","setProjectOverview","tasks","setTasks","userTasks","setUserTasks","loadingTasksFromProject","userId","loadingTasksFromUser","task","item","assignProject","assignTaskboard","deleteTaskFromProject","taskId","ThemeContext","ThemeProvider","themePrimary","setThemePrimary","toggleTheme","AppTransitionContext","AppTransitionProvider","preset","setPreset","enterAnimation","setEnterAnimation","exitAnimation","setExitAnimation","BottomNav","length","window","alert","uid","size","onClick","TopNav","title","Dashboard","i","style","backgroundColor","handleToProjectOverview","projectname","confirm","CreateProject","projectNameRef","projectDescriptionRef","projectColorRef","setColor","goBack","onChange","target","ModifyProject","projectOwnerRef","setProjectname","projectdescription","setProjectdescription","newProjectDetails","index","CreateTask","taskNameRef","taskDescriptionRef","projectInit","setProjectInit","ProjectOverview","prompt","itemId","handleCompleteTask","Taskboard","j","UpdateProfile","promises","Promise","all","finally","defaultValue","Login","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","App","location","transitionKey","pathname","exact","path","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.0d93e77c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/unnamed.ea125fe9.png\";","import React from 'react'\r\nimport logo from '../images/unnamed.png';\r\n\r\nexport default function Logo() {\r\n    return (\r\n        <div className=\"logo-container\">\r\n            <img src={logo} alt=\"Logo\" />\r\n        </div>\r\n    )\r\n}\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\n\r\nconst app = firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n    // apiKey: \"AIzaSyAPyppmyjBKQjIS4o1nRk6N-UxkW54rFPA\",\r\n    // authDomain: \"busybag-f27f9.firebaseapp.com\",\r\n    // projectId: \"busybag-f27f9\",\r\n    // storageBucket: \"busybag-f27f9.appspot.com\",\r\n    // messagingSenderId: \"622475419405\",\r\n    // appId: \"1:622475419405:web:d8022f00e74e3ede131a44\"\r\n})\r\n\r\nexport const auth = app.auth()\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\nexport const firestore = app.firestore()\r\nexport default app","import React, { useContext, useState , useEffect } from 'react'\r\nimport {auth,provider} from '../firebase'\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth(){\r\n    return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider( {children} ) {\r\n    const [currentUser, setCurrentUser] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    function signup(email, password){\r\n        return auth.createUserWithEmailAndPassword(email,password)\r\n    }\r\n\r\n    function login(email,password){\r\n        return auth.signInWithEmailAndPassword(email,password)\r\n    }\r\n\r\n    function loginWithGoogle(){\r\n        return auth.signInWithPopup(provider)\r\n    }\r\n\r\n    function logout(){\r\n        return auth.signOut()\r\n    }\r\n\r\n    function resetPassword(email){\r\n        return auth.sendPasswordResetEmail(email)\r\n    }\r\n\r\n    function updateEmail(email){\r\n        return currentUser.updateEmail(email)\r\n    }\r\n\r\n    function updatePassword(password){\r\n        return currentUser.updatePassword(password)\r\n    }\r\n\r\n    useEffect(() => {\r\n        // auth.onAuthStateChanged(function(user) {\r\n        //     if (user) {\r\n        //       // User is signed in.\r\n        //       console.log(user)\r\n        //       console.log(user.displayName)\r\n        //       console.log(user.email)\r\n        //       console.log(user.photoURL)\r\n        //       console.log(user.emailVerified)\r\n        //       console.log(user.uid)\r\n        //     } else {\r\n        //       // No user is signed in.\r\n        //     }\r\n        //   });\r\n\r\n          \r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user)\r\n            setLoading(false)\r\n        })\r\n\r\n        return unsubscribe\r\n    },[]) \r\n\r\n    const value = {\r\n        currentUser,\r\n        login,\r\n        logout,\r\n        signup,\r\n        resetPassword,\r\n        updateEmail,\r\n        updatePassword\r\n    }\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Logo from '../components/Logo';\r\nimport { useAuth } from '../service/AuthContext'\r\n\r\nexport default function Signup() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const {signup } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault()\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        }\r\n        try{\r\n            setError('')\r\n            setLoading(true)\r\n            await signup(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/\")\r\n        }catch{\r\n            setError('Failed to create an Acccount')\r\n        }\r\n        setLoading(true)\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <h2>Busybag</h2>\r\n                <Logo/>\r\n                <p>Keep track and do all</p>\r\n                <div className=\"card\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input type=\"email\" placeholder=\"Email\" ref={emailRef}/>\r\n                        <input type=\"password\" placeholder=\"Password\"ref={passwordRef}/>\r\n                        <input type=\"password\" placeholder=\"Password Confirm\" ref={passwordConfirmRef}/>\r\n                        {error && <h1>{error}</h1>}\r\n                        <button type=\"submit\" className=\"signin___button\" disabled={loading}> Sign up </button>\r\n                    </form>\r\n                </div>\r\n                <div>\r\n                    Already have an account? <Link to=\"/login\">Login</Link>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport {firestore} from '../firebase'\r\nimport {auth} from '../firebase'\r\n\r\nconst DatabaseContext = React.createContext()\r\n\r\nexport function useDB(){\r\n    return useContext(DatabaseContext)\r\n}\r\n\r\nexport function DatabaseProvider( {children} ) {\r\n    const [projects,setProjects] = useState([]);\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    //init values\r\n    useEffect(()=>{\r\n        const unsubscribe = auth.onAuthStateChanged(async function(user) {\r\n            if (user) {\r\n            firestore.collection(\"projects\").where(\"shared\", \"array-contains\",user.email)\r\n                .onSnapshot(snapshop => setProjects(\r\n                    snapshop.docs.map(\r\n                        doc=>(\r\n                            {id:doc.id,data:doc.data()}\r\n                            )\r\n                        )\r\n                    )\r\n                )\r\n                setLoading(false)\r\n            }else{\r\n                setLoading(false)\r\n            }\r\n          });\r\n        // let isMounted = true;\r\n        // return () => { isMounted = false };\r\n        return unsubscribe    \r\n    },[])\r\n\r\n    async function shareProjectWithUser(email,docId){\r\n        const projectRef = firestore.collection('projects').doc(docId);\r\n        const doc = await projectRef.get();\r\n        if (!doc.exists) {\r\n            console.log('No such document!');\r\n        } else {\r\n            let data = doc.data()\r\n            data.shared.push(email)\r\n            console.log('Document data:', data.shared);\r\n            firestore.collection('projects').doc(docId).update({\r\n                shared: data.shared\r\n            });\r\n        }\r\n    }\r\n\r\n    function addProject(project,description, color, user){\r\n        firestore.collection(\"projects\").add({\r\n            name:project,\r\n            description:description,\r\n            color:color,\r\n            owner: user,\r\n            shared:[user],\r\n            history:[]\r\n        }).then(docRef => {\r\n            return docRef.id            \r\n        })\r\n        .catch(error => console.error(\"Error adding document: \", error))\r\n    }\r\n\r\n    function addTaskToProject(projectId,taskName,taskDescription,user){\r\n        firestore.collection(projectId).add({\r\n            name:taskName,\r\n            description:taskDescription,\r\n            user:user,\r\n        })\r\n    }\r\n\r\n    async function addHistoryEntryToProject(email,docId, taskName){\r\n        const projectRef = firestore.collection('projects').doc(docId);\r\n        const doc = await projectRef.get();\r\n        if (!doc.exists) {\r\n            console.log('No such document!');\r\n        } else {\r\n            var currentdate = new Date(); \r\n            var datetime = \"Time: \" + currentdate.getDate() + \"/\"\r\n                + (currentdate.getMonth()+1)  + \"/\" \r\n                + currentdate.getFullYear() + \" - \"  \r\n                + currentdate.getHours() + \":\"  \r\n                + currentdate.getMinutes() + \":\" \r\n                + currentdate.getSeconds();\r\n            let data = doc.data()\r\n            console.log(data);\r\n            data.history.push(`${email} finish Task '${taskName}' at ${datetime}`)\r\n            console.log('Document data:', data.history);\r\n            firestore.collection('projects').doc(docId).update({\r\n                history: data.history\r\n            });\r\n        }\r\n    }\r\n\r\n    function modifyProject(project){\r\n        firestore.collection(\"projects\").doc(project.id).update({\r\n            color: project.data.color,\r\n            description: project.data.description,\r\n            name: project.data.name,\r\n            owner: project.data.owner,\r\n            \r\n        })\r\n    }\r\n\r\n    function deleteProject(projectid){\r\n        const ref = firestore.collection(projectid)\r\n        ref.onSnapshot((snapshot) => {\r\n            snapshot.docs.forEach((doc) => {\r\n            ref.doc(doc.id).delete()\r\n            })\r\n        })\r\n        firestore.collection(projectid).doc(projectid).delete()\r\n        firestore.collection(\"projects\").doc(projectid).delete();\r\n    }\r\n\r\n    // https://github.com/oghur/React-todo-App-with-connection-to-Firebase/blob/main/src/App.js\r\n    \r\n\r\n    const value = {\r\n        projects,\r\n        shareProjectWithUser,\r\n        addProject,\r\n        modifyProject,\r\n        deleteProject,\r\n        addTaskToProject,\r\n        addHistoryEntryToProject,\r\n        loading\r\n    }\r\n    return (\r\n        <DatabaseContext.Provider value={value}>\r\n            {loading && children}\r\n            {!loading && children}\r\n        </DatabaseContext.Provider>\r\n    )\r\n}\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport {firestore} from '../firebase'\r\n\r\nexport const ProjectContext = React.createContext()\r\n\r\nexport function useProject(){\r\n    return useContext(ProjectContext)\r\n}\r\n\r\nexport function ProjectProvider( {children} ) {\r\n    const [projectId, setProjectId] = useState('')\r\n    const [projectName, setProjectName] = useState('')\r\n    const [projectColor, setProjectColor] = useState('')\r\n    const [projectDescription, setProjectDescription] = useState('')\r\n    const [projectOwner, setProjectOwner] = useState('')\r\n    const [projectShared, setProjectShared] = useState([])\r\n    const [projectOverview, setProjectOverview] = useState({})\r\n    const [tasks, setTasks] = useState([])\r\n    const [userTasks, setUserTasks] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        setLoading(false)\r\n    },[])\r\n\r\n    async function assignProject(project){\r\n        setProjectId(project.id)\r\n        loadingTasksFromProject(project.id)\r\n        setProjectName(project.data.name)\r\n        setProjectColor(project.data.color)\r\n        setProjectDescription(project.data.description)\r\n        setProjectOwner(project.data.owner)\r\n        setProjectShared(project.data.shared)\r\n        setProjectOverview(project)\r\n    }\r\n\r\n    function loadingTasksFromProject(projectId){\r\n        firestore.collection(projectId).onSnapshot(snapshop => setTasks(\r\n            snapshop.docs.map(\r\n                doc=>({id:doc.id,data:doc.data()})\r\n                )\r\n            )\r\n        )\r\n        setLoading(false)\r\n    }\r\n\r\n    \r\n    async function assignTaskboard(userId){\r\n        await loadingTasksFromUser(userId)\r\n    }\r\n\r\n    function loadingTasksFromUser(userId){\r\n        firestore.collection('users').where(\"id\", \"==\",userId).onSnapshot(snapshop => setUserTasks(\r\n            snapshop.docs.map(\r\n                doc=> doc.data().task.map(\r\n                    item => ({id:item.id,data:item})\r\n                    )\r\n                )\r\n            )\r\n        )\r\n        setLoading(false)\r\n    }\r\n    \r\n    function deleteTaskFromProject(projectId,taskId){\r\n        firestore.collection(projectId).doc(taskId).delete()\r\n    }\r\n\r\n    const value = {\r\n        assignProject,\r\n        assignTaskboard,\r\n        tasks,\r\n        setTasks,\r\n        userTasks,\r\n        setUserTasks,\r\n        projectName,\r\n        projectColor,\r\n        projectId,\r\n        projectOwner,\r\n        projectOverview,\r\n        loadingTasksFromProject,\r\n        deleteTaskFromProject\r\n    }\r\n\r\n    return (\r\n        <ProjectContext.Provider value={value}>\r\n            {!loading && children}\r\n        </ProjectContext.Provider>\r\n    )\r\n}","import React, { useContext, useState, useEffect } from 'react'\r\n\r\nexport const ThemeContext = React.createContext()\r\n\r\nexport function useTheme(){\r\n    return useContext(ThemeContext)\r\n}\r\n\r\nexport function ThemeProvider( {children} ) {\r\n    const [themePrimary, setThemePrimary] = useState('')\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    function toggleTheme(themePrimary){\r\n        themePrimary === '#047AED' ? setThemePrimary('#E13B64') : setThemePrimary('#047AED')\r\n        return themePrimary\r\n    }\r\n\r\n    useEffect(() => {\r\n        setThemePrimary('#E13B64')\r\n        setLoading(false)\r\n    },[]) \r\n\r\n\r\n    const value = {\r\n        themePrimary,\r\n        toggleTheme\r\n    }\r\n\r\n    return (\r\n        <ThemeContext.Provider value={value}>\r\n            {!loading && children}\r\n        </ThemeContext.Provider>\r\n    )\r\n}","import React, { createContext, useState } from \"react\";\r\n\r\nexport const AppTransitionContext = createContext();\r\n\r\nexport function AppTransitionProvider({ children }) {\r\n  const [preset, setPreset] = useState(\"cubeToLeft\");\r\n  const [enterAnimation, setEnterAnimation] = useState(\"\");\r\n  const [exitAnimation, setExitAnimation] = useState(\"\");\r\n\r\n  return (\r\n    <AppTransitionContext.Provider\r\n      value={{\r\n        preset,\r\n        enterAnimation,\r\n        exitAnimation,\r\n        setPreset,\r\n        setEnterAnimation,\r\n        setExitAnimation\r\n      }}\r\n    >\r\n      {children}\r\n    </AppTransitionContext.Provider>\r\n  );\r\n}\r\n","import React, {useContext} from 'react'\r\nimport { Link, useHistory} from 'react-router-dom'\r\nimport { AiOutlinePlusCircle, AiFillCopy, AiOutlineBorder } from 'react-icons/ai'\r\nimport { BsListTask } from 'react-icons/bs'\r\nimport { RiDashboardFill } from 'react-icons/ri'\r\nimport { GrProjects } from 'react-icons/gr'\r\nimport { AppTransitionContext } from '../service/AppTransitionContext'\r\nimport {useDB} from '../service/DatabaseContext'\r\nimport {useAuth} from '../service/AuthContext'\r\nimport {useProject} from '../service/ProjectContext'\r\n\r\nexport default function BottomNav() {\r\n    const history = useHistory()\r\n    const { setPreset } = useContext(AppTransitionContext);\r\n    const { projects } = useDB()\r\n    const {currentUser} = useAuth()\r\n    const {assignTaskboard , userTasks} = useProject()\r\n    \r\n    async function handleToCreateTask(){\r\n        try {\r\n            if(projects.length === 0){\r\n                window.alert(\"You need to create a Project first, before you can create Tasks!\");\r\n                await setPreset(\"cubeToBottom\")\r\n                history.push('/create-project')\r\n            }else{\r\n            await setPreset(\"cubeToTop\")\r\n            history.push('/create-task')\r\n            }\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    async function handleToTaskboard(){\r\n        try {\r\n            // needs to be implemented as own Provider\r\n            // await assignProject(project);\r\n            console.log(userTasks)\r\n            await assignTaskboard(currentUser.uid)\r\n            await setPreset(\"cubeToLeft\")\r\n            history.push('/task-board')\r\n            // TODO \r\n            // 1. set Dashboard & Taskboard seperate\r\n            // 2. implement some load project by ID, and open only if user is shared to this particular project\r\n            // await setPreset(\"cubeToTop\")\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar-bottom\">\r\n                <Link to=\"/\"><AiOutlineBorder size=\"2em\" /></Link>\r\n                <Link onClick={handleToCreateTask}><AiOutlinePlusCircle size=\"2em\"/></Link>\r\n                <Link onClick={handleToTaskboard} ><BsListTask size=\"2em\"/></Link>\r\n                </div>\r\n    )\r\n}\r\n","import React, {useContext} from 'react'\r\nimport { Link, useHistory} from 'react-router-dom'\r\nimport {useAuth} from '../service/AuthContext'\r\nimport { AiFillSetting } from 'react-icons/ai'\r\nimport { AppTransitionContext } from '../service/AppTransitionContext'\r\n\r\nexport default function TopNav() {\r\n    const { currentUser } = useAuth()\r\n    const history = useHistory()\r\n    const { setPreset } = useContext(AppTransitionContext);\r\n    async function handleToProfile(){\r\n        try {\r\n            await setPreset(\"moveToLeftFromRight\")\r\n            history.push('/update-profile')\r\n        } catch (error) {\r\n        }\r\n\r\n    }\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <div className=\"navbar-top\">\r\n                <a className=\"align-right\" onClick={handleToProfile}>\r\n                        <AiFillSetting title={currentUser.email} color=\"red\" size=\"1.5em\"/>\r\n                    </a>\r\n                <div className=\"align-placeholder\">\r\n                </div>\r\n                <h2>Busybag</h2>\r\n                <p>Keep track and do all</p>\r\n                <strong>Email:</strong>{currentUser.email}\r\n            </div>\r\n            <div className=\"navbar-placeholder\">\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useRef,useContext,useEffect} from 'react'\r\nimport { /*Link*/ useHistory } from 'react-router-dom'\r\nimport {useAuth} from '../service/AuthContext'\r\nimport {useTheme} from '../service/ThemeContext'\r\nimport {useDB} from '../service/DatabaseContext'\r\nimport { useProject } from '../service/ProjectContext'\r\nimport BottomNav from '../components/BottomNav'\r\nimport TopNav from '../components/TopNav'\r\nimport { AiOutlinePlus } from 'react-icons/ai'\r\nimport { AppTransitionContext } from '../service/AppTransitionContext'\r\n\r\n\r\nexport default function Dashboard() {\r\n    const [error, setError] = useState('')\r\n    const {currentUser} = useAuth()\r\n    const { themePrimary, toggleTheme } = useTheme()\r\n    const { projects, deleteProject, loading } = useDB()\r\n    const { assignProject } = useProject()\r\n    const history = useHistory()\r\n    const { setPreset } = useContext(AppTransitionContext);\r\n\r\n\r\n    useEffect(() => {\r\n        // TODO remove useEffect after testing\r\n        // console.log(projects)\r\n      },[]);\r\n    \r\n\r\n    const nameRef = useRef()\r\n    function changeColor(){\r\n        toggleTheme(themePrimary)\r\n    }\r\n    async function handleToProjectCreate(){\r\n        try {\r\n            await setPreset(\"cubeToBottom\")\r\n            history.push('/create-project')\r\n            // TODO set Dashboard & Taskboard seperate\r\n            // await setPreset(\"cubeToTop\")\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    async function handleToProjectOverview(project){\r\n        try {\r\n            await assignProject(project);\r\n            // await setPreset(\"newspaper\")\r\n            await setPreset(\"moveToTopFromBottom\")\r\n            history.push('/project-overview')\r\n            // TODO \r\n            // 1. set Dashboard & Taskboard seperate\r\n            // 2. implement some load project by ID, and open only if user is shared to this particular project\r\n            // await setPreset(\"cubeToTop\")\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    function deleteFromProject(projectid,projectname){\r\n        console.log(`Delete this project ${projectid} now`)\r\n        if(window.confirm(`Delete everything on ${projectname}?`)){\r\n            deleteProject(projectid)\r\n        }\r\n    }\r\n\r\n    const styleTest = {\r\n        backgroundColor: themePrimary,\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <TopNav />\r\n                <div className=\"main-container\">\r\n                    {loading && <div>Loading Projects</div>}\r\n                    {error && <h1>{error}</h1>}\r\n                    <div className=\"projects\">\r\n                        {!loading && <button onClick={handleToProjectCreate} className=\"project flex-center\">\r\n                            <AiOutlinePlus size=\"4em\"/>\r\n                        </button>}\r\n                        {projects.map((project,i) =>  (\r\n                        <div key={i} className=\"project\" style={{backgroundColor:project.data.color}}>\r\n                            <div>{project.data.name}</div>\r\n                            <button onClick={() =>handleToProjectOverview(project)}> Open </button>\r\n                            <button onClick={()=>deleteFromProject(project.id,project.data.name)}> Delete </button>\r\n                        </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                {/* <div>\r\n                    <button onClick={changeColor} style={styleTest}>ChangeColor</button>\r\n                    <h1>{themePrimary}</h1>\r\n                </div> */}\r\n                <BottomNav />\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import React, { useRef, useState, useContext } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../service/AuthContext'\r\nimport { useDB } from '../service/DatabaseContext'\r\nimport { AiOutlineArrowLeft } from 'react-icons/ai'\r\nimport { AppTransitionContext } from '../service/AppTransitionContext'\r\n\r\nexport default function CreateProject() {\r\n    const { setPreset } = useContext(AppTransitionContext);\r\n\r\n    const projectNameRef = useRef()\r\n    const projectDescriptionRef = useRef()\r\n    const projectColorRef = useRef()\r\n\r\n    const { currentUser , updatePassword, updateEmail, logout } = useAuth()\r\n    const { addProject } = useDB()\r\n\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [color, setColor] = useState('#047AED');\r\n\r\n    const history = useHistory()\r\n    \r\n    async function handleToBack(){\r\n        try {\r\n            // await setPreset(\"fall\")\r\n            await setPreset(\"cubeToLeft\")\r\n            // history.push('/')\r\n            history.goBack()\r\n            // TODO set Dashboard & Taskboard seperate\r\n            // await setPreset(\"cubeToTop\")\r\n        } catch (error) {\r\n        }\r\n\r\n    }\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault()\r\n        if (projectNameRef.current.value.length < 4) {\r\n            return setError('Enter a suitable Projectname')\r\n        }\r\n        setLoading(true)\r\n        setError('')\r\n        //name, description, color, owner\r\n        await addProject(projectNameRef.current.value,projectDescriptionRef.current.value,projectColorRef.current.value,currentUser.email)\r\n        await setPreset(\"cubeToTop\")\r\n        setLoading(false)\r\n        history.push('/')\r\n    }\r\n\r\n    async function handleLogout(){\r\n        setError('')\r\n        try {\r\n            await logout()\r\n            history.push('/login')\r\n        } catch (error) {\r\n            setError('Failed to log out')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <div className=\"navbar-profile-top\">\r\n                    <div className=\"align-placeholder\">\r\n                        <Link className=\"align-left\" onClick={handleToBack}><AiOutlineArrowLeft title={currentUser.email} color=\"red\" size=\"1.5em\"/></Link>\r\n                    </div>\r\n                    <h2>Busybag</h2>\r\n                    <p>Keep track and do all</p>\r\n                </div>\r\n                <div className=\"navbar-placeholder\">\r\n                </div>\r\n                <h2>Create Project</h2>\r\n                <div className=\"createProject\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        {error && <h1>{error}</h1>}\r\n                        <input type=\"text\" placeholder=\"Projectname...\" ref={projectNameRef} placeholder=\"Enter a Project Name\"/>\r\n                        <input type=\"text\" placeholder=\"Projectdescription...\" ref={projectDescriptionRef} placeholder=\"Describe your Project...\"/>\r\n                        <input type=\"color\" value={color} onChange={e => setColor(e.target.value)} ref={projectColorRef} />\r\n                        <strong>Owner:</strong>{currentUser.email}\r\n                        <button type=\"submit\" className=\"signin___button\" disabled={loading}> Create </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}","import React, { useRef, useState, useContext,useEffect } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../service/AuthContext'\r\nimport { useDB } from '../service/DatabaseContext'\r\nimport { useProject } from '../service/ProjectContext'\r\nimport { AiOutlineArrowLeft } from 'react-icons/ai'\r\nimport { AppTransitionContext } from '../service/AppTransitionContext'\r\n\r\nexport default function ModifyProject() {\r\n    const { setPreset } = useContext(AppTransitionContext);\r\n\r\n    const projectNameRef = useRef()\r\n    const projectDescriptionRef = useRef()\r\n    const projectColorRef = useRef()\r\n    const projectOwnerRef = useRef()\r\n\r\n    const { currentUser , updatePassword, updateEmail, logout } = useAuth()\r\n    const { modifyProject } = useDB()\r\n    const { projectOverview} = useProject()\r\n\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const [projectname, setProjectname] = useState('');\r\n    const [projectdescription, setProjectdescription] = useState('');\r\n    const [color, setColor] = useState('');\r\n\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        // TODO remove useEffect after testing\r\n        console.log(projectOverview)\r\n        setProjectname(projectOverview.data.name)\r\n        setProjectdescription(projectOverview.data.description)\r\n        setColor(projectOverview.data.color)\r\n      },[]);\r\n    \r\n    async function handleToBack(){\r\n        try {\r\n            // await setPreset(\"fall\")\r\n            await setPreset(\"cubeToLeft\")\r\n            // history.push('/')\r\n            history.goBack()\r\n            // TODO set Dashboard & Taskboard seperate\r\n            // await setPreset(\"cubeToTop\")\r\n        } catch (error) {\r\n        }\r\n\r\n    }\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault()\r\n        if (projectNameRef.current.value.length < 4) {\r\n            return setError('Enter a suitable Projectname')\r\n        }\r\n        setLoading(true)\r\n        setError('')\r\n        // name, description, color, owner\r\n        // await modifyProject(projectNameRef.current.value,projectDescriptionRef.current.value,projectColorRef.current.value,currentUser.email)\r\n        // console.log(projectNameRef.current.value,projectDescriptionRef.current.value,projectColorRef.current.value,currentUser.email)\r\n        console.log(projectOverview)\r\n        const newProjectDetails = {\r\n            data : {\r\n                name:projectNameRef.current.value,\r\n                description: projectDescriptionRef.current.value,\r\n                color: projectColorRef.current.value,\r\n                owner: projectOwnerRef.current.value,\r\n                shared: projectOverview.data.shared\r\n            },\r\n            id: projectOverview.id\r\n        }\r\n        console.log(newProjectDetails)\r\n        await modifyProject(newProjectDetails)\r\n        await setPreset(\"cubeToTop\")\r\n        setLoading(false)\r\n        // history.goBack()\r\n        history.push('/')\r\n    }\r\n\r\n    async function handleLogout(){\r\n        setError('')\r\n        try {\r\n            await logout()\r\n            history.push('/login')\r\n        } catch (error) {\r\n            setError('Failed to log out')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <div className=\"navbar-profile-top\">\r\n                    <div className=\"align-placeholder\">\r\n                        <Link className=\"align-left\" onClick={handleToBack}><AiOutlineArrowLeft title={currentUser.email} color=\"red\" size=\"1.5em\"/></Link>\r\n                    </div>\r\n                    <h2>Busybag</h2>\r\n                    <p>Keep track and do all</p>\r\n                </div>\r\n                <div className=\"navbar-placeholder\">\r\n                </div>\r\n                <h2>Modify Project:</h2>\r\n                <h3>{projectOverview.data.name}</h3>\r\n                <strong>(Owner:{currentUser.email})</strong>\r\n                <div className=\"createProject\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        {error && <h1>{error}</h1>}\r\n                        <label className=\"flex\">Projectname:</label>\r\n                        <input type=\"text\" placeholder=\"Projectname...\" value={projectname} onChange={e => setProjectname(e.target.value)} ref={projectNameRef} placeholder=\"Enter a Project Name\"/>\r\n                        <input type=\"text\" placeholder=\"Projectdescription...\" value={projectdescription} onChange={e => setProjectdescription(e.target.value)} ref={projectDescriptionRef} placeholder=\"Describe your Project...\"/>\r\n                        <input type=\"color\" value={color} onChange={e => setColor(e.target.value)} ref={projectColorRef} />\r\n                        <label className=\"flex\">Owner:</label><input type=\"text\" placeholder=\"Projectowner...\" value={projectOverview.data.owner} ref={projectOwnerRef} placeholder=\"Owner of the Project...\"/>\r\n                        <label className=\"flex\">Shared:</label>{projectOverview.data.shared.map((user, index)=> <div className=\"flex\" key={index}><button disabled>x</button>{user}</div>)}\r\n                        <button type=\"submit\" className=\"signin___button\" disabled={loading}> Update </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}","import React, { useRef, useState, useContext,useEffect } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../service/AuthContext'\r\nimport { useDB } from '../service/DatabaseContext'\r\nimport { useProject } from '../service/ProjectContext'\r\nimport { AiOutlineArrowLeft } from 'react-icons/ai'\r\nimport { AppTransitionContext } from '../service/AppTransitionContext'\r\n\r\nexport default function CreateTask() {\r\n    const { setPreset } = useContext(AppTransitionContext);\r\n\r\n    const taskNameRef = useRef()\r\n    const taskDescriptionRef = useRef()\r\n    const projectRef = useRef()\r\n\r\n    const { currentUser , updatePassword, updateEmail, logout } = useAuth()\r\n    const { projects, addTaskToProject } = useDB()\r\n    const { projectId } = useProject()\r\n\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [projectInit, setProjectInit] = useState(projectId)\r\n    const [color, setColor] = useState('#047AED');\r\n\r\n    const history = useHistory()\r\n    \r\n    async function handleToDashboard(){\r\n        try {\r\n            // await setPreset(\"fall\")\r\n            await setPreset(\"cubeToLeft\")\r\n            history.push('/')\r\n            // TODO set Dashboard & Taskboard seperate\r\n            // await setPreset(\"cubeToTop\")\r\n        } catch (error) {\r\n        }\r\n\r\n    }\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault()\r\n        if (taskNameRef.current.value.length < 4) {\r\n            return setError('Enter a suitable Taskname')\r\n        }\r\n        setLoading(true)\r\n        setError('')\r\n        // console.log(projectRef.current.value,taskNameRef.current.value,taskDescriptionRef.current.value,currentUser.email)\r\n        addTaskToProject(projectRef.current.value,taskNameRef.current.value,taskDescriptionRef.current.value,currentUser.email)\r\n        setLoading(false)\r\n        history.goBack()\r\n    }\r\n\r\n    async function handleLogout(){\r\n        setError('')\r\n        try {\r\n            await logout()\r\n            history.push('/login')\r\n        } catch (error) {\r\n            setError('Failed to log out')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <div className=\"navbar-profile-top\">\r\n                    <div className=\"align-placeholder\">\r\n                        <Link className=\"align-left\" onClick={handleToDashboard}><AiOutlineArrowLeft title={currentUser.email} color=\"red\" size=\"1.5em\"/></Link>\r\n                    </div>\r\n                    <h2>Busybag</h2>\r\n                    <p>Keep track and do all</p>\r\n                </div>\r\n                <div className=\"navbar-placeholder\">\r\n                </div>\r\n                <h2>Create Task</h2>\r\n                <div className=\"createProject\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        {error && <h1>{error}</h1>}\r\n                        <input type=\"text\" placeholder=\"Projectname...\" ref={taskNameRef} placeholder=\"Enter a Task Name\"/>\r\n                        <input type=\"text\" placeholder=\"Projectdescription...\" ref={taskDescriptionRef} placeholder=\"Describe your taks...\"/>\r\n                        <div className=\"text-right\">\r\n                            <div>\r\n                                Repeat? <button disabled>...</button>\r\n                            </div>\r\n                            <div>\r\n                                Deadline? <button disabled>...</button>\r\n                            </div>\r\n                            <div>\r\n                                Effort? <button disabled>...</button>\r\n                            </div>\r\n                            <div>\r\n                                Assignee? <button disabled>...</button>\r\n                            </div>\r\n                            <div>\r\n                                <select ref={projectRef} value={projectInit} onChange={(e) => setProjectInit(e.target.value)}>\r\n                                {projects.map((item,i) =>  (\r\n                                    <option key={i} value={item.id}>{item.data.name}</option>\r\n                                    ))}\r\n                                    </select>\r\n                            </div>\r\n                        </div>\r\n                        <strong>Owner:</strong>{currentUser.email}\r\n                        <button type=\"submit\" className=\"signin___button\" disabled={loading}> Create </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}","import React, { useRef, useState, useContext } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../service/AuthContext'\r\nimport { useDB } from '../service/DatabaseContext'\r\nimport { useProject } from '../service/ProjectContext'\r\nimport { AiFillSetting, AiOutlineArrowLeft, AiFillEdit } from 'react-icons/ai'\r\nimport { BiShareAlt } from 'react-icons/bi'\r\nimport { AppTransitionContext } from '../service/AppTransitionContext'\r\nimport BottomNav from '../components/BottomNav';\r\n\r\nexport default function ProjectOverview() {\r\n    const { setPreset } = useContext(AppTransitionContext);\r\n\r\n    const projectNameRef = useRef()\r\n    const projectDescriptionRef = useRef()\r\n    const projectColorRef = useRef()\r\n\r\n    const { currentUser , updatePassword, updateEmail, logout } = useAuth()\r\n    const { addProject , shareProjectWithUser, addHistoryEntryToProject } = useDB()\r\n    const { projectId, projectName, projectColor, tasks, deleteTaskFromProject, projectOwner } = useProject()\r\n\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [color, setColor] = useState('#047AED');\r\n\r\n    const history = useHistory()\r\n    \r\n    async function handleToDashboard(){\r\n        try {\r\n            // await setPreset(\"fall\")\r\n            // await setPreset(\"newspaper\")\r\n            await setPreset(\"moveToBottomFromTop\")\r\n            history.push('/')\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n    async function handleToModifyProject(){\r\n        await setPreset(\"moveToLeftFromRight\")\r\n        history.push('/modify-project')\r\n    }\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault()\r\n        if (projectNameRef.current.value.length < 4) {\r\n            return setError('Enter a suitable Projectname')\r\n        }\r\n        setLoading(true)\r\n        setError('')\r\n        console.log(projectNameRef.current.value,projectDescriptionRef.current.value,projectColorRef.current.value)\r\n        //name, description, color, owner\r\n        await addProject(projectNameRef.current.value,projectDescriptionRef.current.value,projectColorRef.current.value,currentUser.email)\r\n        setLoading(false)\r\n        await setPreset(\"cubeToTop\")\r\n        history.push('/')\r\n    }\r\n\r\n    async function handleSharingProject(){\r\n        var email = window.prompt(\"Which email you wanna share?\")\r\n        if(email){\r\n            shareProjectWithUser(email,projectId)\r\n        }\r\n    }\r\n\r\n    async function handleCompleteTask(projectId,itemId, taskName){\r\n        await addHistoryEntryToProject(currentUser.email,projectId, taskName)\r\n        await deleteTaskFromProject(projectId,itemId)\r\n    }\r\n\r\n    async function handleLogout(){\r\n        setError('')\r\n        try {\r\n            await logout()\r\n            history.push('/login')\r\n        } catch (error) {\r\n            setError('Failed to log out')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <div className=\"navbar-profile-top\">\r\n                    <div className=\"align-placeholder\">\r\n                        <Link className=\"align-left\" onClick={handleToDashboard}><AiOutlineArrowLeft title={currentUser.email} color=\"red\" size=\"1.5em\"/></Link>\r\n                    </div>\r\n                    {currentUser.email === projectOwner ? <div className=\"align-right\">\r\n                        <Link>\r\n                            <BiShareAlt onClick={handleSharingProject} title={currentUser.email} color=\"red\" size=\"1.5em\"/>\r\n                        </Link>\r\n                        <Link>\r\n                            <AiFillEdit title={currentUser.email} onClick={handleToModifyProject} color=\"red\" size=\"1.5em\"/>\r\n                        </Link>\r\n                    </div> : \"\"}\r\n                    <h2>Busybag</h2>\r\n                    <p>Keep track and do all</p>\r\n                </div>\r\n                <div className=\"navbar-placeholder\">\r\n                </div>\r\n                {/* <h5>Project Overview</h5> */}\r\n                <h2>{projectName}</h2>\r\n                <p className=\"separator\" style={{backgroundColor:projectColor}}>&nbsp;</p>\r\n                <ul className=\"task-listing\">\r\n                    {tasks.map((item,i) =>  (\r\n                            <li key={i} className=\"task-list\" >\r\n                                <button onClick={() => handleCompleteTask(projectId,item.id,item.data.name)}>done</button> <p>{item.data.name}</p>\r\n                                {/* <li>{item.data.name}|{item.id}</li> */}\r\n                            </li>\r\n                            ))}\r\n                </ul>\r\n                <BottomNav />\r\n            </div>\r\n        </section>\r\n    )\r\n}","import React, {useState, useRef} from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport {useAuth} from '../service/AuthContext'\r\nimport { useProject } from '../service/ProjectContext'\r\nimport { AiFillSetting } from 'react-icons/ai'\r\nimport BottomNav from '../components/BottomNav'\r\nimport TopNav from '../components/TopNav'\r\n\r\n\r\nexport default function Taskboard() {\r\n    const [error, setError] = useState('')\r\n    const {currentUser} = useAuth()\r\n    const { userTasks } = useProject()\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <TopNav />\r\n                {error && <h1>{error}</h1>}\r\n                <p>Assigned Task:</p>\r\n                <ul className=\"task-listing\">\r\n                {\r\n                    userTasks.map(\r\n                        (task,i) => task.map( \r\n                            (item,j) => <li key={j} className=\"task-list\" ><button >done</button><p>{item.data.name}</p></li>\r\n                        )\r\n                    )\r\n                }\r\n                </ul>\r\n\r\n                \r\n               \r\n                <BottomNav />\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import React, { useRef, useState, useContext } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../service/AuthContext'\r\nimport { AiOutlineArrowLeft } from 'react-icons/ai'\r\nimport { AppTransitionContext } from '../service/AppTransitionContext'\r\n\r\nexport default function UpdateProfile() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const { currentUser , updatePassword, updateEmail, logout } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n    const { setPreset } = useContext(AppTransitionContext);\r\n    async function handleToDashboard(){\r\n        try {\r\n            await setPreset(\"moveToRightFromLeft\")\r\n            history.push('/')\r\n            // TODO set Dashboard & Taskboard seperate\r\n            // await setPreset(\"cubeToTop\")\r\n        } catch (error) {\r\n        }\r\n\r\n    }\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault()\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        }\r\n\r\n        const promises = []\r\n        setLoading(true)\r\n        setError('')\r\n        if(emailRef.current.value !== currentUser.email){\r\n            promises.push(updateEmail(emailRef.current.value))\r\n        }\r\n        if(passwordRef.current.value){\r\n            promises.push(updatePassword(passwordRef.current.value))\r\n        }\r\n        Promise.all(promises).then(() => {\r\n            history.push('/')\r\n        }).catch((error) => {\r\n            setError('Failed to update account\\n'+error)\r\n            console.log(error)\r\n        }).finally( () => {\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    async function handleLogout(){\r\n        setError('')\r\n        try {\r\n            await logout()\r\n            history.push('/login')\r\n        } catch (error) {\r\n            setError('Failed to log out')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <div className=\"navbar-profile-top\">\r\n                    <div className=\"align-placeholder\">\r\n                        <Link className=\"align-left\" onClick={handleToDashboard}><AiOutlineArrowLeft title={currentUser.email} color=\"red\" size=\"1.5em\"/></Link>\r\n                    </div>\r\n                    <h2>Busybag</h2>\r\n                    <p>Keep track and do all</p>\r\n                    <strong>Email:</strong>{currentUser.email}\r\n                </div>\r\n                <div className=\"navbar-placeholder\">\r\n                </div>\r\n                <button onClick={handleLogout} >Logout</button>\r\n                <h2>---</h2>\r\n                <h2>Update</h2>\r\n                <div className=\"card\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input type=\"email\" placeholder=\"Email\" ref={emailRef} defaultValue={currentUser.email}/>\r\n                        <input type=\"password\" placeholder=\"Password\"ref={passwordRef} placeholder=\"Leave blank to keep the same\"/>\r\n                        <input type=\"password\" placeholder=\"Password Confirm\" ref={passwordConfirmRef} placeholder=\"Leave blank to keep the same\"/>\r\n                        {error && <h1>{error}</h1>}\r\n                        <button type=\"submit\" className=\"signin___button\" disabled={loading}> Save </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}","import React, { useRef, useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Logo from '../components/Logo';\r\nimport { useAuth } from '../service/AuthContext'\r\n\r\nexport default function Login() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const {login } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault()\r\n        \r\n        try{\r\n            setError('')\r\n            setLoading(true)\r\n            await login(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/\")\r\n        }catch{\r\n            setError('Failed to login via Acccount')\r\n        }\r\n        setLoading(true)\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <h2>Busybag</h2>\r\n                <Logo />\r\n                <p>Keep track and do all</p>\r\n                <div className=\"card\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input type=\"email\" placeholder=\"Email\" ref={emailRef}/>\r\n                        <input type=\"password\" placeholder=\"Password\"ref={passwordRef}/>\r\n                        {error && <h1>{error}</h1>}\r\n                        <Link to=\"/forgot-password\" className=\"text-right\">Forgot Password?</Link>\r\n                        <button type=\"submit\" className=\"signin___button\" disabled={loading}> Login </button>\r\n                    </form>\r\n                </div>\r\n                <div>\r\n                    Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport {useAuth} from '../service/AuthContext'\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n    const { currentUser } = useAuth()\r\n  \r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props => {\r\n          return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n        }}\r\n      ></Route>\r\n    )\r\n  }\r\n","import React, { useRef, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport Logo from '../components/Logo';\r\nimport { useAuth } from '../service/AuthContext'\r\n\r\nexport default function ForgotPassword() {\r\n    const emailRef = useRef()\r\n    const { resetPassword } = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [message, setMessage] = useState('')\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault()\r\n        \r\n        try{\r\n            setMessage('')\r\n            setError('')\r\n            setLoading(true)\r\n            await resetPassword(emailRef.current.value)\r\n            setMessage('Check your inbox for further instructions')\r\n        }catch{\r\n            setError('Failed to reset Password')\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container text-center\">\r\n                <h2>Busybag</h2>\r\n                <Logo />\r\n                <p>Keep track and do all</p>\r\n                <div className=\"card\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input type=\"email\" placeholder=\"Email\" ref={emailRef}/>\r\n                        {error && <h1>{error}</h1>}\r\n                        {message && <h1>{message}</h1>}\r\n                        <button type=\"submit\" className=\"signin___button\" disabled={loading}> Reset Password </button>  \r\n                    </form>\r\n                </div>\r\n                <div>\r\n                    Back to Login? <Link to=\"/login\">Login</Link>\r\n                </div>\r\n                <div>\r\n                    Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}","import '../Main.css';\nimport { useContext } from \"react\";\nimport Signup from '../pages/Signup';\nimport { AuthProvider } from '../service/AuthContext';\nimport { DatabaseProvider } from '../service/DatabaseContext';\nimport { ProjectProvider } from '../service/ProjectContext';\nimport { ThemeProvider } from '../service/ThemeContext';\n// import { BrowserRouter as Router,Switch,Route} from 'react-router-dom'\nimport { HashRouter as Router,Switch,Route} from 'react-router-dom'\nimport Dashboard from '../pages/Dashboard'\nimport CreateProject from '../pages/CreateProject'\nimport ModifyProject from '../pages/ModifyProject';\nimport CreateTask from '../pages/CreateTask'\nimport ProjectOverview from '../pages/ProjectOverview'\nimport Taskboard from '../pages/Taskboard'\nimport UpdateProfile from '../pages/UpdateProfile'\nimport Login from '../pages/Login'\nimport PrivateRoute from './PrivateRoute'\nimport ForgotPassword from '../pages/ForgotPassword';\n\n\nimport { AppTransitionContext } from '../service/AppTransitionContext'\nimport { PageTransition } from '@steveeeie/react-page-transition';\n// https://github.com/Steveeeie/react-page-transition\n\nfunction App() {\n  const { preset, enterAnimation , exitAnimation } = useContext(AppTransitionContext);\n  return (\n\n    <Router>\n        <AuthProvider>\n        <ThemeProvider>\n        <DatabaseProvider>\n        <ProjectProvider>\n        <Route\n            render={({ location }) => {return (\n                <PageTransition\n                  preset={preset}\n                  transitionKey={location.pathname}\n                  enterAnimation={enterAnimation}\n                  exitAnimation={exitAnimation}\n                >\n                <Switch location={location}>\n                \n                    <PrivateRoute exact path=\"/\"  component={Dashboard} />\n                    <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n                    <PrivateRoute path=\"/task-board\" component={Taskboard} />\n                    <PrivateRoute path=\"/create-project\" component={CreateProject} />\n                    <PrivateRoute path=\"/modify-project\" component={ModifyProject} />\n                    <PrivateRoute path=\"/create-task\" component={CreateTask} />\n                    <PrivateRoute path=\"/project-overview\" component={ProjectOverview} />\n                    \n                  <Route path=\"/signup\" component={Signup} />\n                  <Route path=\"/login\" component={Login} />\n                  <Route path=\"/forgot-password\" component={ForgotPassword} />\n                </Switch>\n              </PageTransition>\n              );\n            }}\n          />\n          </ProjectProvider>\n          </DatabaseProvider>\n          </ThemeProvider>\n        </AuthProvider>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Main.css';\nimport App from './components/App';\nimport { AppTransitionProvider } from './service/AppTransitionContext'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <AppTransitionProvider>\n    <App />\n    </AppTransitionProvider>\n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}